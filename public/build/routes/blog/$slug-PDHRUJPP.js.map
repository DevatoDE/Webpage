{
  "version": 3,
  "sources": ["../../../../node_modules/@contentful/rich-text-types/src/blocks.ts", "../../../../node_modules/@contentful/rich-text-types/src/inlines.ts", "../../../../node_modules/@contentful/rich-text-types/src/marks.ts", "../../../../node_modules/@contentful/rich-text-types/src/schemaConstraints.ts", "../../../../node_modules/@contentful/rich-text-types/src/emptyDocument.ts", "../../../../node_modules/@contentful/rich-text-types/src/helpers.ts", "../../../../node_modules/@contentful/rich-text-types/src/index.ts", "../../../../node_modules/@contentful/rich-text-react-renderer/src/util/appendKeyToValidElement.ts", "../../../../node_modules/@contentful/rich-text-react-renderer/src/util/nodeListToReactComponents.tsx", "../../../../node_modules/@contentful/rich-text-react-renderer/src/index.tsx", "../../../../node_modules/@contentful/rich-text-types/src/blocks.ts", "../../../../node_modules/@contentful/rich-text-types/src/inlines.ts", "../../../../node_modules/@contentful/rich-text-types/src/marks.ts", "../../../../node_modules/@contentful/rich-text-types/src/schemaConstraints.ts", "../../../../node_modules/@contentful/rich-text-types/dist/types.js", "../../../../node_modules/@contentful/rich-text-types/dist/nodeTypes.js", "../../../../node_modules/@contentful/rich-text-types/src/emptyDocument.ts", "../../../../node_modules/@contentful/rich-text-types/src/helpers.ts", "../../../../node_modules/@contentful/rich-text-types/src/index.ts", "browser-route-module:/Users/flo/Development/Webpage/app/routes/blog/$slug.tsx?browser", "../../../../app/routes/blog/$slug.tsx", "../../../../app/contentful/defaultRichTextMarkdown.tsx", "../../../../app/components/Contentful/EntryHyperLink/EntryHyperLink.tsx", "../../../../app/components/Contentful/HyperLink/HyperLink.tsx", "../../../../app/components/Contentful/BlockQuote/BlockQuote.tsx", "../../../../app/components/Contentful/ImageMedia/ImageMedia.tsx", "../../../../app/components/Contentful/CodeBlock/CodeBlock.tsx", "../../../../node_modules/prism-react-renderer/dist/index.js", "../../../../node_modules/prism-react-renderer/prism/index.js", "../../../../node_modules/prism-react-renderer/themes/duotoneDark/index.js", "../../../../node_modules/prism-react-renderer/themes/github/index.js", "../../../../node_modules/prism-react-renderer/themes/vsDark/index.js", "../../../../app/components/Contentful/Heading/HeadingFive.tsx", "../../../../app/components/Contentful/Heading/HeadingOne.tsx", "../../../../app/components/Contentful/Heading/HeadingTwo.tsx", "../../../../app/components/Contentful/Heading/HeadingThree.tsx", "../../../../app/components/Contentful/Heading/HeadingFour.tsx", "../../../../app/components/Contentful/Heading/HeadingSix.tsx", "../../../../app/components/Contentful/StickyNote/StickyNote.tsx", "../../../../app/contentful/richTextMarkdownForStickies.tsx", "../../../../app/contentful/contentfulUtils.tsx", "../../../../app/components/Contentful/Illustration/Illustration.tsx", "../../../../app/components/BlogPost/AuthorSection/AuthorSection.tsx", "../../../../app/components/BlogPost/RelatedPostsSection/RelatedPostsSection.tsx", "../../../../app/components/BlogPost/RelatedPostsSection/RelatedPostCard.tsx", "../../../../app/components/FloatingHeader/FloatingHeader.tsx", "../../../../app/components/FloatingHeader/ShareSection.tsx", "../../../../app/components/FloatingHeader/ProgressBar.tsx"],
  "sourcesContent": ["/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nexport enum BLOCKS {\n  DOCUMENT = 'document',\n  PARAGRAPH = 'paragraph',\n\n  HEADING_1 = 'heading-1',\n  HEADING_2 = 'heading-2',\n  HEADING_3 = 'heading-3',\n  HEADING_4 = 'heading-4',\n  HEADING_5 = 'heading-5',\n  HEADING_6 = 'heading-6',\n\n  OL_LIST = 'ordered-list',\n  UL_LIST = 'unordered-list',\n  LIST_ITEM = 'list-item',\n\n  HR = 'hr',\n  QUOTE = 'blockquote',\n\n  EMBEDDED_ENTRY = 'embedded-entry-block',\n  EMBEDDED_ASSET = 'embedded-asset-block',\n\n  TABLE = 'table',\n  TABLE_ROW = 'table-row',\n  TABLE_CELL = 'table-cell',\n  TABLE_HEADER_CELL = 'table-header-cell',\n}\n", "/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n */\nexport enum INLINES {\n  HYPERLINK = 'hyperlink',\n  ENTRY_HYPERLINK = 'entry-hyperlink',\n  ASSET_HYPERLINK = 'asset-hyperlink',\n  EMBEDDED_ENTRY = 'embedded-entry-inline',\n}\n", "/**\n * Map of all Contentful marks.\n */\nenum MARKS {\n  BOLD = 'bold',\n  ITALIC = 'italic',\n  UNDERLINE = 'underline',\n  CODE = 'code',\n}\n\nexport default MARKS;\n", "import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\n\nexport type TopLevelBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.TABLE;\n\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexport const TOP_LEVEL_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.TABLE,\n];\n\nexport type ListItemBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET;\n\n/**\n * Array of all allowed block types inside list items\n */\nexport const LIST_ITEM_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n];\n\nexport const TABLE_BLOCKS = [\n  BLOCKS.TABLE,\n  BLOCKS.TABLE_ROW,\n  BLOCKS.TABLE_CELL,\n  BLOCKS.TABLE_HEADER_CELL,\n];\n\n/**\n * Array of all void block types\n */\nexport const VOID_BLOCKS = [BLOCKS.HR, BLOCKS.EMBEDDED_ENTRY, BLOCKS.EMBEDDED_ASSET];\n\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexport const CONTAINERS = {\n  [BLOCKS.OL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.UL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.LIST_ITEM]: LIST_ITEM_BLOCKS,\n  [BLOCKS.QUOTE]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE]: [BLOCKS.TABLE_ROW],\n  [BLOCKS.TABLE_ROW]: [BLOCKS.TABLE_CELL, BLOCKS.TABLE_HEADER_CELL],\n  [BLOCKS.TABLE_CELL]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE_HEADER_CELL]: [BLOCKS.PARAGRAPH],\n};\n\n/**\n * Array of all heading levels\n */\nexport const HEADINGS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n];\n\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexport const TEXT_CONTAINERS = [BLOCKS.PARAGRAPH, ...HEADINGS];\n\n/**\n * Node types before `tables` release.\n */\nexport const V1_NODE_TYPES = [\n  BLOCKS.DOCUMENT,\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.LIST_ITEM,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  INLINES.HYPERLINK,\n  INLINES.ENTRY_HYPERLINK,\n  INLINES.ASSET_HYPERLINK,\n  INLINES.EMBEDDED_ENTRY,\n  'text',\n];\n", "import { Document } from './types';\nimport { BLOCKS } from './blocks';\n\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nconst EMPTY_DOCUMENT: Document = {\n  nodeType: BLOCKS.DOCUMENT,\n  data: {},\n  content: [\n    {\n      nodeType: BLOCKS.PARAGRAPH,\n      data: {},\n      content: [\n        {\n          nodeType: 'text',\n          value: '',\n          marks: [],\n          data: {},\n        },\n      ],\n    },\n  ],\n};\n\nexport default EMPTY_DOCUMENT;\n", "import { Node, Block, Inline, Text } from './types';\nimport { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj: Record<string, unknown>, value: unknown) {\n  for (const key of Object.keys(obj)) {\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the node is an instance of Inline.\n */\nexport function isInline(node: Node): node is Inline {\n  return hasValue(INLINES, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Block.\n */\nexport function isBlock(node: Node): node is Block {\n  return hasValue(BLOCKS, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Text.\n */\nexport function isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n", "export { BLOCKS } from './blocks';\nexport { INLINES } from './inlines';\nexport { default as MARKS } from './marks';\n\nexport * from './schemaConstraints';\n\nexport * from './types';\nexport * from './nodeTypes';\n\nexport { default as EMPTY_DOCUMENT } from './emptyDocument';\n\nimport * as helpers from './helpers';\nexport { helpers };\n", "import { cloneElement, isValidElement, ReactNode } from 'react';\n\nexport function appendKeyToValidElement(element: ReactNode, key: number): ReactNode {\n  if (isValidElement(element) && element.key === null) {\n    return cloneElement(element, { key });\n  }\n  return element;\n}\n", "import React, { ReactNode } from 'react';\nimport { helpers, Mark } from '@contentful/rich-text-types';\nimport { CommonNode, Options } from '..';\nimport { appendKeyToValidElement } from './appendKeyToValidElement';\n\nexport function nodeListToReactComponents(nodes: CommonNode[], options: Options): ReactNode {\n  return nodes.map(\n    (node: CommonNode, index: number): ReactNode => {\n      return appendKeyToValidElement(nodeToReactComponent(node, options), index);\n    },\n  );\n}\n\nexport function nodeToReactComponent(node: CommonNode, options: Options): ReactNode {\n  const { renderNode, renderMark, renderText } = options;\n  if (helpers.isText(node)) {\n    return node.marks.reduce((value: ReactNode, mark: Mark): ReactNode => {\n      if (!renderMark[mark.type]) {\n        return value;\n      }\n      return renderMark[mark.type](value);\n    }, renderText ? renderText(node.value) : node.value);\n  } else {\n    const children: ReactNode = nodeListToReactComponents(node.content, options);\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      return <>{children}</>;\n    }\n    return renderNode[node.nodeType](node, children);\n  }\n}\n", "import React, { ReactNode } from 'react';\nimport { Block, BLOCKS, Document, Inline, INLINES, MARKS, Text } from '@contentful/rich-text-types';\nimport { nodeToReactComponent } from './util/nodeListToReactComponents';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.DOCUMENT]: (node, children) => children,\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, children) => <div>{children}</div>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [BLOCKS.TABLE]: (node, children) => (\n    <table>\n      <tbody>{children}</tbody>\n    </table>\n  ),\n  [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <th>{children}</th>,\n  [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n  [INLINES.ASSET_HYPERLINK]: node => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: node => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: node => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.HYPERLINK]: (node, children) => <a href={node.data.uri}>{children}</a>,\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: text => <b>{text}</b>,\n  [MARKS.ITALIC]: text => <i>{text}</i>,\n  [MARKS.UNDERLINE]: text => <u>{text}</u>,\n  [MARKS.CODE]: text => <code>{text}</code>,\n};\n\nfunction defaultInline(type: string, node: Inline): ReactNode {\n  return (\n    <span key={node.data.target.sys.id}>\n      type: {node.nodeType} id: {node.data.target.sys.id}\n    </span>\n  );\n}\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: Document,\n  options: Options = {},\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    renderText: options.renderText,\n  });\n}\n", null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=nodeTypes.js.map", null, null, null, "export { default, links, meta } from \"/Users/flo/Development/Webpage/app/routes/blog/$slug.tsx\";", "import { Entry, TagLink } from \"contentful\";\nimport * as React from \"react\";\nimport {\n  HtmlMetaDescriptor,\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n  useLoaderData\n} from \"remix\";\nimport {\n  ContentfulBlogPost,\n  ContentfulBlogPostTranslation\n} from \"~/contentful/types\";\nimport {\n  AUTHOR,\n  fixedWidthLayoutClasses,\n  IMAGE_HEIGHT,\n  IMAGE_WIDTH,\n  TWITTER_ACC,\n  TWITTER_CARD_TYPE,\n  TWITTER_PUBLISHER\n} from \"~/constants\";\nimport { getContentfulBlogPostBySlug } from \"~/contentful/contentfulClient\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { options } from \"~/contentful/defaultRichTextMarkdown\";\nimport styles from \"~/styles/blogpost.css\";\nimport { links as BlockQuoteStyles } from \"~/components/Contentful/BlockQuote/BlockQuote\";\nimport { links as ImageMediaStyles } from \"~/components/Contentful/ImageMedia/ImageMedia\";\nimport { links as CodeBlockStyles } from \"~/components/Contentful/CodeBlock/CodeBlock\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\nimport AuthorSection from \"~/components/BlogPost/AuthorSection/AuthorSection\";\nimport { getPostsAndTags, PostsAndTags } from \"~/api/getPostsAndTags\";\nimport RelatedPostsSection from \"~/components/BlogPost/RelatedPostsSection/RelatedPostsSection\";\nimport { tagIdsToDisplayNames } from \"~/components/Blog/BlogPostTags\";\nimport FloatingHeader, {\n  links as ProgressBarStyles\n} from \"~/components/FloatingHeader/FloatingHeader\";\n\ninterface PostLoaderData extends PostsAndTags {\n  blogPost: Entry<ContentfulBlogPost>;\n}\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: styles\n    },\n    ...BlockQuoteStyles(),\n    ...ImageMediaStyles(),\n    ...CodeBlockStyles(),\n    ...ProgressBarStyles()\n  ];\n};\n\nexport const meta: MetaFunction = ({ data, location }) => {\n  try {\n    const dataWithType: PostLoaderData = data;\n    const { blogPost } = dataWithType;\n    const imageURl = \"https:\" + blogPost.fields.blogPostSplash.fields.file.url;\n    const webURL = \"https://www.alissanguyen.dev\" + location.pathname;\n    const description = blogPost.fields.blogPostExcerpt.slice(0, 160) + \"... \";\n    const title = blogPost.fields.blogPostTitle;\n    const keywords =\n      blogPost.fields.blogPostKeywords +\n      \", Alissa Nguyen, AlissaNguyen, FrontEnd Engineer\";\n    const publishedDate = blogPost.sys.createdAt;\n    const updatedDate = blogPost.sys.updatedAt;\n    return {\n      title: blogPost.fields.blogPostTitle,\n      keywords: keywords,\n      image: imageURl,\n      description: description,\n      \"og:url\": webURL,\n      \"og:image\": imageURl,\n      \"og:title\": title,\n      \"og:site_name\": \"Alissa Nguyen's Blog\",\n      \"og:type\": \"article\",\n      \"og:description\": description,\n      \"article:published_time\": publishedDate,\n      \"article:modified_time\": updatedDate,\n      \"article:publisher\": TWITTER_PUBLISHER,\n      \"twitter:card\": TWITTER_CARD_TYPE,\n      \"twitter:creator\": TWITTER_ACC,\n      \"twitter:site\": TWITTER_ACC,\n      \"twitter:title\": title,\n      \"twitter:description\": description,\n      \"twitter:image\": imageURl,\n      \"twitter:alt\": title,\n      \"twitter:url\": webURL,\n      \"og:image:width\": IMAGE_WIDTH,\n      \"og:image:height\": IMAGE_HEIGHT,\n      author: AUTHOR,\n      \"theme-color\": \"#212529\"\n    };\n  } catch (e) {\n    console.error(e);\n    /**\n     * If we hit this catch block it's almost definitely because the user\n     * is hitting a blog post that doesn't exist.\n     */\n    const emptyMeta: HtmlMetaDescriptor = {};\n    return emptyMeta;\n  }\n};\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  if (!params.slug) {\n    throw new Error(\"Missing slug in params.\");\n  }\n\n  try {\n    const [blogPost, { blogPosts, contentfulTags }] = await Promise.all([\n      getContentfulBlogPostBySlug(params.slug),\n      getPostsAndTags()\n    ]);\n\n    return {\n      blogPost,\n      blogPosts,\n      contentfulTags\n    };\n  } catch (e) {\n    console.error(e);\n\n    throw new Response(undefined, { status: 404 });\n  }\n};\n\nconst Post: React.FC = ({}) => {\n  const { blogPost, blogPosts } = useLoaderData<PostLoaderData>();\n\n  const { theme } = useTheme();\n\n  // $$TODO: another error in the typings for this library.\n  const blogPostBody = documentToReactComponents(\n    blogPost.fields.bodyRichText as any,\n    options\n  );\n\n  // An array containings all the translations, the number of translations = the array length-1\n  const blogPostTranslation: any =\n    blogPost.fields.blogPostTranslations !== undefined\n      ? blogPost.fields.blogPostTranslations.content\n      : [];\n\n  const updatedDate = new Date(blogPost.sys.updatedAt).toDateString();\n  const subUpdatedDate = updatedDate.substring(updatedDate.indexOf(\" \") + 1);\n  const publishedDate = new Date(blogPost.sys.createdAt).toDateString();\n  const subPublishedDate = publishedDate.substring(\n    updatedDate.indexOf(\" \") + 1\n  );\n\n  const tagsToFindRelatedPostsFor = blogPost.metadata.tags;\n\n  // Only suggest three other blogPosts, TODO: Question -- Should we decide to\n  // give three random suggestions or the first three in this array?\n  const blogPostWithAtLeastOneSharedTag = blogPosts.items\n    .filter((post) => {\n      return (\n        post.sys.id !== blogPost.sys.id &&\n        tagsToFindRelatedPostsFor.some((selectedTag) => {\n          return post.metadata.tags.some(\n            (tag) => tag.sys.id === selectedTag.sys.id\n          );\n        })\n      );\n    })\n    .slice(0, 3);\n  return (\n    <>\n      <FloatingHeader\n        postSlug={blogPost.fields.blogPostSlug}\n        postTitle={blogPost.fields.blogPostTitle}\n      />\n\n      <div className=\"text-post-bodyText\">\n        <div\n          className={`${fixedWidthLayoutClasses} flex flex-col mb-5 xl:mb-10`}\n        >\n          <a\n            href=\"/blog\"\n            className=\"go-back-btn inline-flex border-none items-center justify-start text-xl mb-10 hover:text-post-bodyTextLg duration-100 ease-in w-fit\"\n          >\n            <img\n              src={\n                theme === SupportedTheme.DARK\n                  ? \"/svg/arrow.svg\"\n                  : \"/svg/arrowDark.svg\"\n              }\n              className=\"go-back-arrow w-6 rounded-full mr-2 hover:text-post-bodyTextLg\"\n              alt=\"go back\"\n              title=\"Back\"\n            />\n            Go back\n          </a>\n          <h1 className=\"BlogPost__Title text-4xl text-post-bodyTextLg xs:text-5xl font-bold\">\n            {blogPost.fields.blogPostTitle}\n          </h1>\n          <div className=\"w-full flex flex-col custom2:flex-row custom2:justify-between custom2:items-center mt-2 mx-auto max-w-[700px]\">\n            <p className=\"BlogPost__DatePublish text-xl mb-2 custom2:mb-0\">\n              Published on {subPublishedDate}\n            </p>\n            <p className=\"BlogPost__DatePublish text-xl\">\n              Last updated on {subUpdatedDate}\n            </p>\n          </div>\n        </div>\n        <img\n          src={\"https://\" + blogPost.fields.blogPostSplash.fields.file.url}\n          className=\"BlogPost__SplashImage max-w-[1200px] mb-5 xl:mb-10 mx-auto rounded-lg w-[83%] custom3:w-[85%] xs:w-[90%] xl:w-full\"\n          alt={blogPost.fields.blogPostSplash.fields.title}\n          title={blogPost.fields.blogPostSplash.fields.title}\n        />\n        <div\n          className={`BlogPost text-post-bodyText ${fixedWidthLayoutClasses} mb-20`}\n        >\n          <div className=\"Translation__Section flex flex-col sm:flex-row sm:items-center self-baseline text-base sm:text-lg gap-5\">\n            {blogPostTranslation.length > 1 ? (\n              <div className=\"flex flex-row items-center gap-3 sm:gap-5\">\n                {blogPostTranslation.map((translation: any) => {\n                  if (translation.data.target !== undefined) {\n                    console.log(translation.data.target.fields, \"HELLO\");\n                    const translationData: ContentfulBlogPostTranslation =\n                      translation.data.target.fields;\n                    const language: string = translationData.language;\n                    const translationLink: string =\n                      translationData.linkToTranslation;\n                    return (\n                      <a\n                        target=\"_blank\"\n                        href={translationLink}\n                        className={`translation-button px-4 pt-2 pb-3 sm:px-5 sm:pt-3 sm:pb-4 ${\n                          theme === SupportedTheme.LIGHT\n                            ? \"bg-gray-100 text-black\"\n                            : \"bg-zinc-700 text-white\"\n                        } rounded-full w-fit`}\n                      >\n                        {language}\n                      </a>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            ) : (\n              <div className=\"BlogPost__TranslationSection flex flex-col custom3:flex-row justify-start text-post-bodyText\">\n                <span className=\"italic mr-10\">No translation available.</span>\n              </div>\n            )}\n            <a\n              className=\"AddTranslation__Button font-medium underlined w-fit text-lg sm:text-xl\"\n              href=\"https://github.com/alissanguyen/alissanguyen-dot-dev/blob/main/CONTRIBUTING.md\"\n              target=\"_blank\"\n            >\n              Add translation\n            </a>\n          </div>\n          <div className=\"BlogPost__BodyWrapper mt-10 custom3:mt-16\">\n            {blogPostBody}\n          </div>\n          <div className=\"flex flex-col lg:flex-row lg:justify-between my-16\">\n            <div className=\"text-base mb-16 lg:mb-0\">\n              <span className=\"text-lg font-medium\">Tags:</span>{\" \"}\n              {blogPost.metadata.tags.map((tag) => (\n                <TagBadge tag={tag} theme={theme} />\n              ))}\n            </div>\n          </div>\n          <AuthorSection />\n        </div>\n        <hr></hr>\n        {blogPostWithAtLeastOneSharedTag.length > 0 && (\n          <RelatedPostsSection relatedPosts={blogPostWithAtLeastOneSharedTag} />\n        )}\n        <hr></hr>\n      </div>\n    </>\n  );\n};\n\nexport default Post;\n\ninterface TagProps {\n  tag: TagLink;\n  theme: SupportedTheme;\n}\nconst TagBadge: React.FC<TagProps> = (props) => {\n  const tagName = tagIdsToDisplayNames[props.tag.sys.id];\n\n  return (\n    <>\n      {props.theme === SupportedTheme.LIGHT ? (\n        <div className=\"tag-badge bg-gray-600 before:bg-gray-600 hover:bg-gray-900 before:hover:bg-gray-900 text-gray-200 hover:text-white inline-flex items-center\">\n          {tagName}\n        </div>\n      ) : (\n        <div className=\"tag-badge tag-dark bg-gray-300 before:bg-gray-300 before:hover:bg-white hover:bg-white text-gray-700 hover:text-black inline-flex items-center\">\n          {tagName}\n        </div>\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { BLOCKS, MARKS, Node, INLINES } from \"@contentful/rich-text-types\";\nimport { Options } from \"@contentful/rich-text-react-renderer\";\nimport { TagLink } from \"contentful\";\nimport EntryHyperLink from \"~/components/Contentful/EntryHyperLink/EntryHyperLink\";\nimport HyperLink from \"~/components/Contentful/HyperLink/HyperLink\";\nimport BlockQuote from \"~/components/Contentful/BlockQuote/BlockQuote\";\nimport {\n  ContentfulBlogPost,\n  ContentfulCodeBlock,\n  ContentfulCodeSandbox,\n  ContentfulGif,\n  ContentfulIllustration,\n  ContentfulQuote,\n  ContentfulStickyNote,\n  ContentfulTable,\n  ContentfulVideo\n} from \"./types\";\nimport BlogPostTags from \"~/components/Blog/BlogPostTags\";\nimport ImageMedia from \"~/components/Contentful/ImageMedia/ImageMedia\";\nimport CodeBlock from \"~/components/Contentful/CodeBlock/CodeBlock\";\nimport HeadingFive from \"~/components/Contentful/Heading/HeadingFive\";\nimport HeadingOne from \"~/components/Contentful/Heading/HeadingOne\";\nimport HeadingTwo from \"~/components/Contentful/Heading/HeadingTwo\";\nimport HeadingThree from \"~/components/Contentful/Heading/HeadingThree\";\nimport HeadingFour from \"~/components/Contentful/Heading/HeadingFour\";\nimport HeadingSix from \"~/components/Contentful/Heading/HeadingSix\";\nimport StickyNote from \"~/components/Contentful/StickyNote/StickyNote\";\nimport { addColour } from \"./contentfulUtils\";\nimport Illustration from \"~/components/Contentful/Illustration/Illustration\";\n\nexport const options: Options = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => (\n      <span className=\"bold font-bold text-post-bodyTextLg\">\n        {addColour([text])}\n      </span>\n    ),\n    [MARKS.ITALIC]: (text) => (\n      <span className=\"italic text-post-bodyTextLg\">{text}</span>\n    ),\n    [MARKS.UNDERLINE]: (text) => {\n      const [className, setClassName] = React.useState<string>(\"\");\n      function randomUnderlinedColor() {\n        const underlinedColorClassNames = [\n          \"custom-underline--yellow\",\n          \"custom-underline--green\",\n          \"custom-underline--red\"\n        ];\n        const randomColor =\n          underlinedColorClassNames[\n            Math.floor(Math.random() * underlinedColorClassNames.length)\n          ];\n        setClassName(\n          randomColor !== undefined ? randomColor : \"custom-underline--yellow\"\n        );\n      }\n      React.useEffect(() => randomUnderlinedColor(), [className]);\n      return (\n        <span className={`custom-underline text-post-bodyTextLg ${className}`}>\n          {text}\n        </span>\n      );\n    },\n    [MARKS.CODE]: (children) => {\n      return (\n        <code className=\"BlogPost__Paragraph__Code inline-flex font-medium\">\n          {children}\n        </code>\n      );\n    }\n  },\n  renderNode: {\n    [INLINES.HYPERLINK]: (node: Node, children) => (\n      <HyperLink url={node.data.uri}>{children}</HyperLink>\n    ),\n    [INLINES.ENTRY_HYPERLINK]: (node: Node, children) => (\n      <EntryHyperLink node={node}>{children}</EntryHyperLink>\n    ),\n    [BLOCKS.DOCUMENT]: (node: Node, children) => <>{children}</>,\n    [BLOCKS.PARAGRAPH]: (node: Node, children) => {\n      return (\n        // There's an error in the types for @contentful/rich-text-react-renderer, type cast as necessary. $$TODO: File an issue to contentful for this issue, potentially fix it too.\n        <p className=\"BlogPost__Paragraph text-lg relative z-10\">\n          {addColour(children as React.ReactNode[])}\n        </p>\n      );\n    },\n    [BLOCKS.HEADING_1]: (node: Node, children) => (\n      <HeadingOne>{children}</HeadingOne> //text-6xl\n    ),\n    [BLOCKS.HEADING_2]: (node: Node, children) => (\n      <HeadingTwo>{children}</HeadingTwo> //text-5xl\n    ),\n    [BLOCKS.HEADING_3]: (node: Node, children) => (\n      <HeadingThree>{children}</HeadingThree> //text-4xl\n    ),\n    [BLOCKS.HEADING_4]: (node: Node, children) => (\n      <HeadingFour>{children}</HeadingFour> //text-3xl\n    ),\n    [BLOCKS.HEADING_5]: (node: Node, children) => (\n      <HeadingFive>{children}</HeadingFive> //text-2xl\n    ),\n    [BLOCKS.HEADING_6]: (node: Node, children) => (\n      <HeadingSix>{children}</HeadingSix> //text-xl\n    ),\n    [BLOCKS.OL_LIST]: (node: Node, children) => (\n      <ol className=\"ml-12 mb-8 list-decimal\">{children}</ol>\n    ),\n    [BLOCKS.UL_LIST]: (node: Node, children) => (\n      <ul className=\"list-disc ml-10\">{children}</ul>\n    ),\n    [BLOCKS.LIST_ITEM]: (node: any, children) => {\n      return (\n        <li className=\"List__Item text-xl list-item leading-8\">{children}</li>\n      );\n    },\n    [BLOCKS.HR]: (node: Node) => <div className=\"spacer-div h-7\"></div>,\n    [BLOCKS.QUOTE]: (node: Node, children) => (\n      <blockquote>{children}</blockquote>\n    ),\n\n    [BLOCKS.EMBEDDED_ENTRY]: (node, children) => {\n      const contentModel = node.data.target.sys.contentType.sys.id;\n\n      switch (contentModel) {\n        case \"quote\":\n          const quoteData: ContentfulQuote = node.data.target.fields;\n          return <BlockQuote quoteData={quoteData} />;\n        case \"table\":\n          const tableData: ContentfulTable = node.data.target.fields;\n          return (\n            <div\n              className=\"table-container text-lg mt-5 mb-10 text-left mx-auto w-full\"\n              dangerouslySetInnerHTML={{ __html: tableData.tableMarkdown }}\n            ></div>\n          );\n        case \"illustration\":\n          const illustrationData: ContentfulIllustration =\n            node.data.target.fields;\n          return (\n            <Illustration\n              rawData={illustrationData}\n              location=\"outside sticky\"\n            />\n          );\n        case \"rawVideoHtml\":\n          const videoMarkupData: ContentfulVideo = node.data.target.fields;\n          const videoMarkup: string = videoMarkupData.rawHtmlMarkup;\n          return <div dangerouslySetInnerHTML={{ __html: videoMarkup }}></div>;\n        case \"blogPost\":\n          const post: ContentfulBlogPost = node.data.target.fields;\n          const tags: TagLink[] = node.data.target.metadata.tags;\n          return (\n            <a\n              href={`/blog/${post.blogPostSlug}`}\n              className=\"flex flex-col custom2:flex-row w-full EmbeddedEntry_BlogPost_Card mt-4 px-5 pt-5 custom2:p-5 rounded-lg\"\n              key={post.blogPostSlug}\n            >\n              <img\n                src={post.blogPostSplash.fields.file.url}\n                alt={post.blogPostSplash.fields.title}\n                title={post.blogPostSplash.fields.title}\n                className=\"object-cover w-full mb-2 custom2:mb-0 custom2:max-w-[240px] custom2:mr-5 rounded-lg\"\n              />\n              <div className=\"flex flex-col items-baseline justify-between\">\n                <span className=\"text-xl mb-2 text-blog-lgText font-bold\">\n                  {post.blogPostTitle}\n                </span>\n                <p className=\"text-base text-gray-400\">\n                  {post.blogPostExcerpt}\n                </p>\n                <BlogPostTags tags={tags} />\n              </div>\n            </a>\n          );\n        case \"codeBlock\":\n          const codeBlockData: ContentfulCodeBlock = node.data.target.fields;\n          return <CodeBlock data={codeBlockData} />;\n        case \"stickyNote\":\n          const noteData: ContentfulStickyNote = node.data.target.fields;\n          return <StickyNote stickyData={noteData} />;\n        case \"gif\":\n          const gifData: ContentfulGif = node.data.target.fields;\n          return (\n            <div dangerouslySetInnerHTML={{ __html: gifData.gifMarkup }} />\n          );\n        case \"codeSandbox\":\n          const sandboxData: ContentfulCodeSandbox = node.data.target.fields;\n          return (\n            <div className=\"BlogPost__SandBox__Container mt-5\">\n              <div\n                dangerouslySetInnerHTML={{ __html: sandboxData.rawMarkup }}\n              ></div>\n            </div>\n          );\n\n        default:\n          return (\n            <p className=\"text-base text-rose-500\">Error loading asset entry</p>\n          );\n      }\n    },\n    [BLOCKS.EMBEDDED_ASSET]: (node, children) => {\n      const assetType = node.data.target.fields.file.contentType;\n      const maybeDescription = node.data.target.fields.description as\n        | string\n        | undefined;\n      switch (assetType) {\n        case \"video/mp4\":\n          return (\n            <video width=\"100%\" height=\"100%\" controls>\n              <source src={node.data.target.fields.file.url} type=\"video/mp4\" />\n            </video>\n          );\n        case \"image/jpeg\":\n        case \"image/svg+xml\":\n        case \"image/gif\":\n        case \"image/png\":\n          return (\n            <ImageMedia\n              src={node.data.target.fields.file.url}\n              alt={node.data.target.fields.title}\n              description={maybeDescription ? maybeDescription : undefined}\n            />\n          );\n        default:\n          return (\n            <ImageMedia\n              src={node.data.target.fields.file.url}\n              alt={node.data.target.fields.title}\n              description={maybeDescription ? maybeDescription : undefined}\n            />\n          );\n      }\n    },\n    [BLOCKS.TABLE]: (node, children) => (\n      <table>\n        <tbody>{children}</tbody>\n      </table>\n    ),\n    [BLOCKS.TABLE_ROW]: (node, children) => <tr>{children}</tr>,\n    [BLOCKS.TABLE_CELL]: (node, children) => <td>{children}</td>,\n    [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <thead>{children}</thead>\n  }\n};\n", "import { Node } from \"@contentful/rich-text-types\";\nimport * as React from \"react\";\n\ninterface Props {\n  node: Node;\n}\n\n/**\n * When I publish a blog post and I link to another blog post, this is the component\n * that is rendered!\n */\nconst EntryHyperLink: React.FC<Props> = (props) => {\n  const otherPostSlug: string = props.node.data.target.fields.blogPostSlug;\n\n  return (\n    <a\n      className=\"BlogPost__EntryHyperLink text-post-hyperlink underlined hover:text-post-hyperlinkHover italic\"\n      href={`/blog/${otherPostSlug}`}\n    >\n      {props.children}\n    </a>\n  );\n};\n\nexport default EntryHyperLink;\n", "import * as React from \"react\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\ninterface Props {\n  url: string;\n}\n\nconst HyperLink: React.FC<Props> = (props) => {\n  const { theme } = useTheme();\n  return (\n    <a\n      href={props.url}\n      className={`BlogPost__HyperLink font-medium ${\n        theme === SupportedTheme.LIGHT\n          ? \"text-blue-500 hover:text-black\"\n          : \"text-cyan-400 hover:text-white\"\n      } ease-in duration-100`}\n    >\n      {props.children}\n    </a>\n  );\n};\n\nexport default HyperLink;\n", "import * as React from \"react\";\nimport { LinksFunction } from \"remix\";\nimport { ContentfulQuote } from \"~/contentful/types\";\nimport styles from \"./BlockQuote.css\";\n\ninterface Props {\n  quoteData: ContentfulQuote;\n}\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nconst BlockQuote: React.FC<Props> = (props) => {\n  return (\n    <blockquote className=\"BlogPostBlockQuote__Container p-8 mt-8 mb-12 mx-0 border-t-[1px] border-t-gray-300 flex flex-col\">\n      <p className=\"BlogPostBlockQuote__Description font-medium m-auto flex items-center justify-center text-post-quote w-2/3\">\n        {props.quoteData.quoteDescription}\n      </p>\n      <p className=\"BlogPostBlockQuote__Author italic text-xl text-post-quoteAuthor text-right mt-5\">\n        {props.quoteData.author}\n      </p>\n    </blockquote>\n  );\n};\n\nexport default BlockQuote;\n", "import * as React from \"react\";\nimport { LinksFunction } from \"remix\";\nimport styles from \"./ImageMedia.css\";\n\ninterface Props {\n  src: string;\n  description?: string;\n  alt?: string;\n}\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nconst ImageMedia: React.FC<Props> = (props) => {\n  return (\n    <div className=\"BlogPost__ImageMedia__Container\">\n      <img\n        src={\"https:\" + props.src}\n        alt={props.alt}\n        title={props.alt}\n        className=\"BlogPost__ImageMedia m-auto flex\"\n        loading=\"lazy\"\n      />\n      {props.description !== undefined && (\n        <em className=\"BlogPost__ImageMedia__Description mx-8 my-2 italic flex text-center items-center justify-center text-base\">\n          {props.description}\n        </em>\n      )}\n    </div>\n  );\n};\n\nexport default ImageMedia;\n", "import * as React from \"react\";\nimport styles from \"./CodeBlock.css\";\nimport Highlight, { defaultProps, Language } from \"prism-react-renderer\";\nimport { LinksFunction } from \"remix\";\nimport editorLightTheme from \"prism-react-renderer/themes/github\";\nimport editorDarkTheme from \"prism-react-renderer/themes/vsDark\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\nimport { ContentfulCodeBlock } from \"~/contentful/types\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\ninterface Props {\n  data: ContentfulCodeBlock;\n}\n\nconst CodeBlock: React.FC<Props> = (props) => {\n  const codeText = props.data.codeText;\n  const { theme } = useTheme();\n\n  const language: Language = props.data.language as Language;\n  return (\n    <div className=\"CodeBlock__Wrapper rounded-lg mt-3 mb-6\">\n      <Highlight\n        {...defaultProps}\n        theme={\n          theme === SupportedTheme.LIGHT ? editorLightTheme : editorDarkTheme\n        }\n        code={codeText}\n        language={language}\n      >\n        {({ className, tokens, getLineProps, getTokenProps }) => {\n          return (\n            <div className=\"CodeBlock\">\n              {props.data.fileName !== undefined ? (\n                <div className=\"CodeBlock__FileName__Container w-full rounded-t-lg\">\n                  <p className=\"CodeBlock__FileName text-center\">\n                    {props.data.fileName}\n                  </p>\n                </div>\n              ) : null}\n\n              <pre\n                className={`${className} CodeBlock__InnerContainer overflow-x-auto roundedLg p-4 ${\n                  props.data.fileName ? \"pt-2\" : \"\"\n                }\n                `}\n              >\n                {tokens.map((line, i) => {\n                  const { classname, ...restProps } = getLineProps({\n                    line,\n                    key: i\n                  });\n                  return (\n                    <div\n                      key={i}\n                      {...restProps}\n                      className={`${className} LineNo__${\n                        i + 1\n                      } grid CodeBlock__LineWrapper relative ${\n                        props.data.shouldDisplayLineNumber ? \"gap-10\" : \"\"\n                      } breakWord whitespace-preWrap`}\n                    >\n                      <div>\n                        {/* TODO: Write a custom parser for highlighting line(s) of code */}\n                        <span\n                          className={`CodeBlock__LineNo pl-1 ${\n                            props.data.shouldDisplayLineNumber\n                              ? \"visible\"\n                              : \"invisible\"\n                          }`}\n                          style={{ position: \"sticky\" }}\n                        >\n                          {i + 1}\n                        </span>\n                      </div>\n\n                      <div className=\"\">\n                        {line.map((token, key) => {\n                          const { className, ...restProps } = getTokenProps({\n                            token,\n                            key\n                          });\n                          return (\n                            <span\n                              key={key}\n                              {...restProps}\n                              className={`${className} CodeBlock__Token--smol-tab`}\n                            ></span>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                })}\n              </pre>\n            </div>\n          );\n        }}\n      </Highlight>\n    </div>\n  );\n};\n\nexport default CodeBlock;\n", "import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n", "/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\n var Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn _;\n\n}());\n\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not \u201Cfoo {\u201D\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (\u201C=\u201D and \u201C+=\u201D).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // \u2192 No expansion (so no \u201Cinside\u201D).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // \u201CNormal\u201D string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-\u2013].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n\nexport default prism;\n", "// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n", "// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\n\nexport default theme;\n", "// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\n\nexport default theme;\n", "import * as React from \"react\";\n\nconst HeadingFive: React.FC = (props) => {\n  return (\n    <h6\n      className={`BlogPost__HeadingFive text-xl custom2:text-2xl text-post-bodyTextLg mt-2 mb-1 font-medium`}\n    >\n      {props.children}\n    </h6>\n  );\n};\n\nexport default HeadingFive;\n", "import * as React from \"react\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\nconst HeadingOne: React.FC = (props) => {\n  const { theme } = useTheme();\n  return (\n    <h2\n      className={`BlogPost__HeadingOne text-4xl xs:text-5xl custom2:text-6xl mb-5 mt-5 font-medium ${\n        theme === SupportedTheme.LIGHT ? \"text-emerald-500\" : \"text-teal-400\"\n      }`}\n    >\n      {props.children}\n    </h2>\n  );\n};\n\nexport default HeadingOne;\n", "import * as React from \"react\";\n\nconst HeadingTwo: React.FC = (props) => {\n  return (\n    <h3 className=\"BlogPost__HeadingTwo text-3xl xs:text-4xl custom2:text-[2.5rem] mt-8 mb-5 text-post-bodyTextLg\">\n      {props.children}\n    </h3>\n  );\n};\n\nexport default HeadingTwo;\n", "import * as React from \"react\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\nconst HeadingThree: React.FC = (props) => {\n  const { theme } = useTheme();\n\n  return (\n    <h4\n      className={`BlogPost__HeadingThree text-2xl font-medium xs:font-normal xs:text-3xl custom2:text-4xl leading-10 mb-5 mt-10 ${\n        theme === SupportedTheme.LIGHT ? \"text-sky-600\" : \"text-sky-400\"\n      }`}\n    >\n      {props.children}\n    </h4>\n  );\n};\n\nexport default HeadingThree;\n", "import * as React from \"react\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\nconst HeadingFour: React.FC = (props) => {\n  const { theme } = useTheme();\n  return (\n    <h5\n      className={`BlogPost__HeadingFour text-2xl xs:text-3xl mt-10 ${\n        theme === SupportedTheme.LIGHT ? \"text-purple-500\" : \"text-fuchsia-400\"\n      } font-medium`}\n    >\n      {props.children}\n    </h5>\n  );\n};\n\nexport default HeadingFour;\n", "import * as React from \"react\";\n\nconst HeadingSix: React.FC = (props) => {\n  return (\n    <p className={`font-bold text-xl mb-5 mt-10 xs:font-medium`}>\n      {props.children}\n    </p>\n  );\n};\n\nexport default HeadingSix;\n", "import * as React from \"react\";\nimport { ContentfulStickyNote } from \"~/contentful/types\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { stickyOptions } from \"~/contentful/richTextMarkdownForStickies\";\nimport { STICKY_BORDER, STICKY_HIGHLIGHT } from \"~/constants\";\ninterface Props {\n  stickyData: ContentfulStickyNote;\n}\n\nconst StickyNote: React.FC<Props> = (props) => {\n  const stickyColorCode = props.stickyData.stickyColor;\n  const stickyBgColor = contentfulStickyBackgrounds[stickyColorCode];\n  const stickyBorderColor = contentfulStickyBorders[stickyColorCode];\n\n  const body = documentToReactComponents(\n    props.stickyData.stickyBodyRichText as any,\n    stickyOptions\n  );\n\n  return (\n    <div\n      className=\"Sticky__Container mt-4 px-5 pt-2 pb-3 rounded-r-xl\"\n      style={{\n        borderLeft: `solid 6px ${stickyBorderColor}`,\n        backgroundColor: `${stickyBgColor}`,\n        color: `${stickyBorderColor}`\n      }}\n    >\n      {props.stickyData.shouldDisplayTitle ? (\n        <p className=\"Sticky__Title font-extrabold tracking-wide mb-1\">\n          {props.stickyData.stickyTitle}\n        </p>\n      ) : null}\n      <div className=\"Sticky__Body font-medium\">{body}</div>\n    </div>\n  );\n};\n\nexport default StickyNote;\n\nconst contentfulStickyBackgrounds: Record<string, string> = {\n  yellow: STICKY_HIGHLIGHT.YELLOW,\n  blue: STICKY_HIGHLIGHT.BLUE,\n  pink: STICKY_HIGHLIGHT.PINK,\n  green: STICKY_HIGHLIGHT.GREEN,\n  orange: STICKY_HIGHLIGHT.ORANGE,\n  purple: STICKY_HIGHLIGHT.PURPLE,\n  red: STICKY_HIGHLIGHT.RED\n};\n\nconst contentfulStickyBorders: Record<string, string> = {\n  yellow: STICKY_BORDER.YELLOW,\n  blue: STICKY_BORDER.BLUE,\n  pink: STICKY_BORDER.PINK,\n  green: STICKY_BORDER.GREEN,\n  orange: STICKY_BORDER.ORANGE,\n  purple: STICKY_BORDER.PURPLE,\n  red: STICKY_BORDER.RED\n};\n", "import React from \"react\";\nimport { BLOCKS, MARKS, Node, INLINES } from \"@contentful/rich-text-types\";\nimport { Options } from \"@contentful/rich-text-react-renderer\";\nimport EntryHyperLink from \"~/components/Contentful/EntryHyperLink/EntryHyperLink\";\nimport { ContentfulIllustration } from \"./types\";\nimport ImageMedia from \"~/components/Contentful/ImageMedia/ImageMedia\";\nimport HeadingFive from \"~/components/Contentful/Heading/HeadingFive\";\nimport HeadingThree from \"~/components/Contentful/Heading/HeadingThree\";\nimport HeadingFour from \"~/components/Contentful/Heading/HeadingFour\";\nimport HeadingSix from \"~/components/Contentful/Heading/HeadingSix\";\nimport { addColour } from \"./contentfulUtils\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\nimport Illustration from \"~/components/Contentful/Illustration/Illustration\";\n\nexport const stickyOptions: Options = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => {\n      const { theme } = useTheme();\n      return (\n        <span\n          className={`bold font-bold opacity-90 ${\n            theme === SupportedTheme.LIGHT ? \"text-black\" : \"text-white\"\n          }`}\n        >\n          {addColour([text])}\n        </span>\n      );\n    },\n    [MARKS.ITALIC]: (text) => {\n      return <span className=\"italic\">{text}</span>;\n    },\n    [MARKS.UNDERLINE]: (text) => {\n      return <span className={`custom-underline`}>{text}</span>;\n    },\n    [MARKS.CODE]: (children) => {\n      return (\n        <code className=\"BlogPost__Paragraph__Code inline-flex font-medium\">\n          {children}\n        </code>\n      );\n    }\n  },\n  renderNode: {\n    [INLINES.HYPERLINK]: (node: Node, children) => {\n      const { theme } = useTheme();\n      return (\n        <a\n          className={`BlogPost__HyperLink ${\n            theme === SupportedTheme.DARK\n              ? \"text-cyan-200 hover:text-white\"\n              : \"text-cyan-700 hover:text-black\"\n          }`}\n          href={node.data.uri}\n        >\n          {children}\n        </a>\n      );\n    },\n    [INLINES.ENTRY_HYPERLINK]: (node: Node, children) => (\n      <EntryHyperLink node={node}>{children}</EntryHyperLink>\n    ),\n    [BLOCKS.DOCUMENT]: (node: Node, children) => <>{children}</>,\n    [BLOCKS.PARAGRAPH]: (node: Node, children) => (\n      // There's an error in the types for @contentful/rich-text-react-renderer, type cast as necessary. $$TODO: File an issue to contentful for this issue, potentially fix it too.\n      <p className=\"Sticky__Paragraph\">\n        {addColour(children as React.ReactNode[])}\n      </p>\n    ),\n    [BLOCKS.HEADING_3]: (node: Node, children) => (\n      <HeadingThree>{children}</HeadingThree> //text-4xl\n    ),\n    [BLOCKS.HEADING_4]: (node: Node, children) => (\n      <HeadingFour>{children}</HeadingFour> //text-3xl\n    ),\n    [BLOCKS.HEADING_5]: (node: Node, children) => (\n      <HeadingFive>{children}</HeadingFive> //text-2xl\n    ),\n    [BLOCKS.HEADING_6]: (node: Node, children) => (\n      <HeadingSix>{children}</HeadingSix> //text-xl\n    ),\n    [BLOCKS.OL_LIST]: (node: Node, children) => (\n      <ol className=\"list-decimal\">{children}</ol>\n    ),\n    [BLOCKS.UL_LIST]: (node: Node, children) => (\n      <ul className=\"list-disc\">{children}</ul>\n    ),\n    [BLOCKS.LIST_ITEM]: (node: any, children) => {\n      return (\n        <li className=\"inline-flex list-item leading-8 ml-10\">{children}</li>\n      );\n    },\n    [BLOCKS.HR]: (node: Node) => <div className=\"spacer-div h-7\"></div>,\n    [BLOCKS.EMBEDDED_ENTRY]: (node, children) => {\n      const contentModel = node.data.target.sys.contentType.sys.id;\n      switch (contentModel) {\n        case \"illustration\":\n          const illustrationData: ContentfulIllustration =\n            node.data.target.fields;\n          return (\n            <Illustration rawData={illustrationData} location=\"inside sticky\" />\n          );\n        default:\n          return <p className=\"text-rose-500\">Error loading asset entry</p>;\n      }\n    },\n    [BLOCKS.EMBEDDED_ASSET]: (node, children) => {\n      const assetType = node.data.target.fields.file.contentType;\n      const maybeDescription = node.data.target.fields.description as\n        | string\n        | undefined;\n      // Stickies should only take images as media assets, no videos\n      return (\n        <ImageMedia\n          src={node.data.target.fields.file.url}\n          alt={node.data.target.fields.description}\n          description={maybeDescription ? maybeDescription : undefined}\n        />\n      );\n    },\n    // TODO: Add table styling\n    [BLOCKS.TABLE]: (node, children) => <div>{children}</div>,\n    [BLOCKS.TABLE_ROW]: (node, children) => <div>{children}</div>,\n    [BLOCKS.TABLE_CELL]: (node, children) => <div>{children}</div>,\n    [BLOCKS.TABLE_HEADER_CELL]: (node, children) => <div>{children}</div>\n  }\n};\n", "import { TEXT_HIGHLIGHT } from \"~/constants\";\n\n/**\n * Looks for a substring where there is a string surrounded by parens, immediately\n * followed by a word in brackets.\n */\nconst highlightedTextMatcher = /\\((.+)\\)(?=\\[(\\w+)\\])/;\n\n/**\n * The purpose of this function is to check if any of the passed in children\n * or any of the passed in children's children meet the regex pattern of text\n * inside parens followed by text inside brackets. If so, it returns a span\n * wrapper around the string that meets the pattern. The span has a classname\n * to apply some colored text and appropriate background color, aka a highlight.\n * If it does not, just return the children as is.\n */\n\nexport const addColour = (children: null | React.ReactNode[] = []) => {\n  if (children === null) {\n    /**\n     * Perhaps an overly defensive check, but we can't trust everything\n     * contentful gives us ;)\n     */\n    return children;\n  }\n\n  // flatMap returns a flattened array - very useful\n  const mappedChildren = children.flatMap((child) => {\n    /**\n     * child is a string when the node is normal text without any italicization,\n     * bolding, underlining, strikethrough, etc.\n     */\n    if (typeof child === \"string\") {\n      // the regex that handles parsing the actual string and extracting the text\n      const matches = child.match(highlightedTextMatcher);\n      if (matches) {\n        const result = createSpanFromMatches(matches, child);\n        return result;\n      }\n    }\n\n    /**\n     *\n     */\n    if (typeof child === \"object\") {\n      const element = child as JSX.Element;\n\n      const content = element.props.children;\n\n      const className = element.props.className;\n      const stringMatches =\n        typeof content === \"string\" && content.match(highlightedTextMatcher);\n\n      /**\n       * Handle the case where content is an object. This is when the highlighted text is also bolded or italicized, or both\n       */\n      if (\n        content &&\n        content.props &&\n        typeof content.props.children === \"string\"\n      ) {\n        const textContent = content.props.children;\n\n        const objectChildMatches = textContent.match(highlightedTextMatcher);\n\n        /**\n         * objectChildMatches will only be true when the child we're looking at\n         * meets the regex pattern of text inside parens followed by text inside\n         * brackets\n         */\n        if (objectChildMatches) {\n          return createSpanFromMatches(objectChildMatches, textContent, {\n            className\n          });\n        }\n      }\n\n      /**\n       * stringMatches will only be truthy when it meets the regex pattern of\n       * text inside parens followed by text inside brackets\n       */\n      if (stringMatches) {\n        return createSpanFromMatches(stringMatches, content, { className });\n      }\n    }\n    // make sure to always return the content if there is no match to the regex\n    return child;\n  });\n\n  return mappedChildren;\n};\n\nconst createSpanFromMatches = (\n  matches: RegExpMatchArray,\n  text: string,\n  restProps = {}\n) => {\n  const content = text.split(`${matches[0]}[${matches[2]}]`);\n  // $TODO: this will cause more text than expected to be highlighted if there are multiple highlights within one html element\n  return [\n    content[0],\n    <span\n      key={matches[1]}\n      {...restProps}\n      style={{\n        color: \"#000000\",\n        backgroundColor: `${\n          matches[2] !== undefined && contentfulHighlights[matches[2]]\n        }`\n      }}\n    >\n      {matches[1]}\n    </span>,\n    content[1]\n  ];\n};\n\nconst contentfulHighlights: Record<string, string> = {\n  blue: TEXT_HIGHLIGHT.BLUE,\n  yellow: TEXT_HIGHLIGHT.YELLOW,\n  green: TEXT_HIGHLIGHT.GREEN,\n  red: TEXT_HIGHLIGHT.RED,\n  orange: TEXT_HIGHLIGHT.ORANGE,\n  pink: TEXT_HIGHLIGHT.PINK,\n  purple: TEXT_HIGHLIGHT.PURPLE\n};\n", "import * as React from \"react\";\nimport { ContentfulIllustration } from \"~/contentful/types\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\ninterface Props {\n  rawData: ContentfulIllustration;\n  location: \"inside sticky\" | \"outside sticky\";\n}\n\nconst Illustration: React.FC<Props> = (props) => {\n  const { theme } = useTheme();\n  const lightModeIllustrationImageSrc: string =\n    \"https://\" + props.rawData.lightIllustration.fields.file.url.split(\"//\")[1];\n  const darkModeIllustrationImageSrc: string =\n    \"https://\" + props.rawData.darkIllustration.fields.file.url.split(\"//\")[1];\n  const imageSrc =\n    theme === SupportedTheme.DARK\n      ? darkModeIllustrationImageSrc\n      : lightModeIllustrationImageSrc;\n  const padding = props.location === \"inside sticky\" ? \"pt-3 pb-2\" : \"\";\n  return (\n    <div className={`Illustration__Container rounded-lg ${padding}`}>\n      <a href={imageSrc} target=\"_blank\">\n        <img\n          title={\"Illustration for \" + props.rawData.illustrationName}\n          src={imageSrc}\n          alt={\"Illustration for \" + props.rawData.illustrationName}\n          className=\"Illustration__Image rounded-lg p-4\"\n          style={{\n            backgroundColor: `${\n              theme === SupportedTheme.LIGHT ? \"#ffffff\" : \"#0e0e0e\"\n            }`\n          }}\n        />\n      </a>\n    </div>\n  );\n};\n\nexport default Illustration;\n", "import * as React from \"react\";\nimport { ArrowRightIcon } from \"@heroicons/react/solid\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\n\ninterface Props {}\n\nconst AuthorSection: React.FC<Props> = ({}) => {\n  const { theme } = useTheme();\n  const borderColor =\n    theme === SupportedTheme.LIGHT ? \"border-gray-400\" : \"border-gray-200\";\n  return (\n    <div\n      className={`BlogPost__AuthorSection__Container border-t-2 ${borderColor} flex m-auto flex-col items-center justify-center sm:grid-cols-4 sm:gap-10 py-10`}\n    >\n      <img\n        src=\"/images/author.jpg\"\n        alt=\"Florian Stanglmeier Portrait\"\n        className=\"BlogPost__AuthorSection__AuthorAvatar rounded-full mb-7 sm:mb-0 w-56\"\n        title=\"My portrait picture\"\n      />\n      <div className=\"BlogPost__AuthorSection__Biography flex flex-col items-start justify-start sm:col-span-3\">\n        <p className=\"font-medium text-2xl mb-4 xs:mb-2 text-post-bodyTextLg\">\n          Verfasst von Florian Stanglmeier\n        </p>\n        <a\n          href=\"https://www.linkedin.com/in/florianstanglmeier/\"\n          className=\"twitter-follow-button\"\n          data-size=\"large\"\n          aria-label=\"Folg uns auf LinkedIn\"\n          data-show-screen-name=\"false\"\n          data-show-count=\"false\"\n        >\n          Follow\n        </a>\n        <p className=\"text-lg mt-7\">\n          Florian Stanglmeier ist IT Stratege und AI Experte. Er ist zust\u00E4ndig\n          f\u00FCr die Entwicklung und das Management von Projekten.\n        </p>\n        <a\n          href=\"/\"\n          className=\"mt-7 inline-flex items-center justify-start text-post-bodyTextLg\"\n        >\n          <p className=\"text-xl mr-5\">Mehr erfahren</p>\n          <ArrowRightIcon className=\"h-10 mr-4 rounded-full border-2 p-2 hover:border-gray-700 transition-all duration-120\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthorSection;\n", "import { Entry } from \"contentful\";\nimport * as React from \"react\";\nimport { ContentfulBlogPost } from \"~/contentful/types\";\nimport { fixedWidthLayoutClasses } from \"~/constants\";\nimport RelatedPostCard from \"./RelatedPostCard\";\n\ninterface Props {\n  relatedPosts: Entry<ContentfulBlogPost>[];\n}\n\nconst RelatedPostsSection: React.FC<Props> = (props) => {\n  return (\n    <div\n      className={`${fixedWidthLayoutClasses} max-w-[1000px] pt-20 pb-20 sm:pb-32 lg:pb-44`}\n    >\n      <div className=\"flex flex-col items-start justify-center text-3xl mb-10\">\n        <p className=\"text-post-bodyTextLg text-5xl font-medium mb-5\">\n          If you found this article helpful.\n        </p>\n        <p className=\"text-post-bodyText text-4xl\">\n          You will love these ones as well.\n        </p>\n      </div>\n      <div className=\"RelatedBlogPosts__Wrapper grid gap-10 sm:gap-y-20 md:grid-cols-2 lg:grid-cols-3 list-none\">\n        {props.relatedPosts.map((post) => (\n          <li\n            key={post.sys.id ? post.sys.id : post.fields.blogPostTitle}\n            className=\"RelatedBlogPost__Container\"\n          >\n            <RelatedPostCard post={post} />\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RelatedPostsSection;\n", "import { Entry } from \"contentful\";\nimport * as React from \"react\";\nimport BlogPostTags from \"~/components/Blog/BlogPostTags\";\nimport { ContentfulBlogPost } from \"~/contentful/types\";\n\ninterface Props {\n  post: Entry<ContentfulBlogPost>;\n}\n\nconst RelatedPostCard: React.FC<Props> = (props) => {\n  const rawDateData = new Date(props.post.sys.updatedAt).toDateString();\n  const date = rawDateData.substring(rawDateData.indexOf(\" \") + 1);\n  const tags = props.post.metadata.tags;\n  return (\n    <div className=\"RelatedBlogPost__Card__Container\">\n      <a\n        href={`/blog/${props.post.fields.blogPostSlug}`}\n        className=\"RelatedBlogPost__Link__Container h-full rounded-lg\"\n      >\n        <img\n          src={props.post.fields.blogPostSplash.fields.file.url}\n          alt={props.post.fields.blogPostSplash.fields.title}\n          title={props.post.fields.blogPostSplash.fields.title}\n          className=\"RelatedBlogPost__Image rounded-lg w-full h-80\"\n          loading=\"lazy\"\n        />\n      </a>\n      <div className=\"flex flex-col\">\n        <span className=\"inline-flex text-xl md:text-2xl text-gray-400 font-bold mt-2 mb-3\">\n          {date} \u2014 5 min read\n        </span>\n        <span className=\"RelatedBlogPost__Title text-blog-lgText font-bold text-2xl md:text-3xl\">\n          {props.post.fields.blogPostTitle}\n        </span>\n        <div>\n          <BlogPostTags tags={tags} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RelatedPostCard;\n", "import styles from \"./FloatingHeader.css\";\nimport * as React from \"react\";\nimport { LinksFunction } from \"remix\";\nimport { NAVBAR_ID } from \"~/constants\";\nimport ShareSection from \"./ShareSection\";\nimport ProgressBar from \"./ProgressBar\";\nimport { BsFillArrowLeftCircleFill, BsArrowLeftCircle } from \"react-icons/bs\";\nimport { SimplifiedThemeButton } from \"../ThemeButton/ThemeButton\";\n\ninterface Props {\n  postTitle: string;\n  postSlug: string;\n}\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nconst FloatingHeader: React.FC<Props> = (props) => {\n  const [shouldShowFloatingHeader, setShouldShowFloatingHeader] =\n    React.useState(false);\n\n  const [progress, setProgress] = React.useState(0);\n\n  function fillScrollLine() {\n    requestAnimationFrame(() => {\n      const windowHeight = window.innerHeight;\n      const fullHeight = document.body.clientHeight;\n\n      const navBar: HTMLElement | null = document.getElementById(NAVBAR_ID);\n\n      if (navBar) {\n        const navbarContainerHeight = navBar.clientHeight;\n        const scrolled = window.scrollY;\n        const percentScrolled = (scrolled / (fullHeight - windowHeight)) * 100;\n\n        setProgress(percentScrolled);\n\n        setShouldShowFloatingHeader(\n          calculateShouldShowFloatingHeader(scrolled, navbarContainerHeight)\n        );\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    /**\n     * Call it once initially to handle cases where users refresh halfway down\n     * the page. In those cases, they haven't scrolled yet but they should still\n     * see the progress bar.\n     */\n    fillScrollLine();\n\n    window.addEventListener(\"scroll\", fillScrollLine);\n\n    return () => {\n      window.removeEventListener(\"scroll\", fillScrollLine);\n    };\n  }, []);\n\n  return (\n    <div\n      className={`floating-header text-xl ${\n        shouldShowFloatingHeader ? \"floating-active\" : \"\"\n      }`}\n      id=\"Floating__Header\"\n    >\n      <div className=\"floating-header-logo font-medium ml-4 text-post-bodyTextLg\">\n        <a href=\"https://www.alissanguyen.dev/blog\">\n          <span className=\"hidden xs:flex\">Alissa Nguyen's Blog</span>\n          <div className=\"FloatingHeader__GoBackButton inline-flex items-center justify-center xs:hidden font-normal pl-2\">\n            <BsFillArrowLeftCircleFill className=\"FloatingHeader__GoBackArrowSVG w-5 mr-2\" />\n            <span className=\"FloatingHeader__GoBackLabel text-lg pb-1\">\n              Back\n            </span>\n          </div>\n        </a>\n      </div>\n      <span className=\"floating-header-divider text-post-bodyTextLg\">\u2014</span>\n      <div className=\"floating-header-title font-medium\">{props.postTitle}</div>\n      <ProgressBar progress={progress} />\n      <SimplifiedThemeButton />\n      <ShareSection title={props.postTitle} slug={props.postSlug} />\n    </div>\n  );\n};\n\nconst calculateShouldShowFloatingHeader = (\n  amountScrolledInPixels: number,\n  containerHeightInPixels: number\n): boolean => {\n  return amountScrolledInPixels >= containerHeightInPixels;\n};\n\nexport default FloatingHeader;\n", "import * as React from \"react\";\n\ninterface Props {\n  title: string;\n  slug: string;\n}\n\nconst ShareSection: React.FC<Props> = (props) => {\n  const tweetMsg = `I just read ${props.title} by @alissa_nguyen14\\n\\n`;\n  const twitterShareHref = `https://twitter.com/intent/tweet?hashtags=programming%2Cblog&original_referer=https%3A%2F%2Fwww.alissanguyen.dev%2F&related=alissa_nguyen14&text=${tweetMsg}%0A%0A&url=https%3A%2F%2Fwww.alissanguyen.dev%2Fblog%2F${props.slug}%2F`;\n  const facebookShareHref =\n    \"https://www.facebook.com/sharer/sharer.php?u=https://www.alissanguyen.dev/blog/\" +\n    props.slug;\n  const linkedinShareHref =\n    \"https://www.linkedin.com/shareArticle?mini=true&url=https://www.alissanguyen.dev/blog/\" +\n    props.slug +\n    \"&title=\" +\n    props.title;\n  return (\n    <div className=\"floating-header-share\">\n      <div className=\"floating-header-share-label hidden custom:flex mr-2 font-medium items-center text-post-bodyTextLg\">\n        Share this\n      </div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"ionicon inline-flex items-center h-6 mr-3 mt-1 text-post-bodyTextLg\"\n        viewBox=\"0 0 512 512\"\n      >\n        <circle\n          cx=\"128\"\n          cy=\"256\"\n          r=\"48\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n        />\n        <circle\n          cx=\"384\"\n          cy=\"112\"\n          r=\"48\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n        />\n        <circle\n          cx=\"384\"\n          cy=\"400\"\n          r=\"48\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n        />\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"32\"\n          d=\"M169.83 279.53l172.34 96.94M342.17 135.53l-172.34 96.94\"\n        />\n      </svg>\n      <a\n        className=\"floating-header-share-tw\"\n        href={twitterShareHref}\n        target=\"_blank\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 32 32\"\n          className=\"floating-header-share-svg\"\n        >\n          <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\"></path>\n        </svg>\n      </a>\n      <a\n        className=\"floating-header-share-fb\"\n        href={facebookShareHref}\n        target=\"_blank\"\n        rel=\"nofollow\"\n        data-size=\"large\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 32 32\"\n          className=\"floating-header-share-svg\"\n        >\n          <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\"></path>\n        </svg>\n      </a>\n      <a\n        className=\"floating-header-share-linkedin\"\n        href={linkedinShareHref}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          className=\"floating-header-share-svg\"\n        >\n          <path d=\"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\" />\n        </svg>\n      </a>\n    </div>\n  );\n};\n\nexport default ShareSection;\n", "import * as React from \"react\";\n\nconst ProgressBar: React.FC<{ progress: number }> = ({ progress }) => {\n  return (\n    <div\n      className={`scroll-line`}\n      style={{\n        width: `${progress}%`\n      }}\n      id=\"scroll-line\"\n    ></div>\n  );\n};\n\nexport default ProgressBar;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,UAAY;AAAZ,MAAA,UAAY,SAAM;AAChB,gBAAA,cAAA;AACA,gBAAA,eAAA;AAEA,gBAAA,eAAA;AACA,gBAAA,eAAA;AACA,gBAAA,eAAA;AACA,gBAAA,eAAA;AACA,gBAAA,eAAA;AACA,gBAAA,eAAA;AAEA,gBAAA,aAAA;AACA,gBAAA,aAAA;AACA,gBAAA,eAAA;AAEA,gBAAA,QAAA;AACA,gBAAA,WAAA;AAEA,gBAAA,oBAAA;AACA,gBAAA,oBAAA;AAEA,gBAAA,WAAA;AACA,gBAAA,eAAA;AACA,gBAAA,gBAAA;AACA,gBAAA,uBAAA;SAxBU,UAAA,SAAA,UAAA,UAAA,SAAM;;;;;;;ACAlB,UAAY;AAAZ,MAAA,UAAY,UAAO;AACjB,iBAAA,eAAA;AACA,iBAAA,qBAAA;AACA,iBAAA,qBAAA;AACA,iBAAA,oBAAA;SAJU,WAAA,SAAA,WAAA,UAAA,UAAO;;;;;;ACAnB,UAAK;AAAL,MAAA,UAAK,QAAK;AACR,eAAA,UAAA;AACA,eAAA,YAAA;AACA,eAAA,eAAA;AACA,eAAA,UAAA;SAJG,UAAA,UAAK;AAOV,eAAA,UAAe;;;;;;;;;;;;;;;;;;ACaF,eAAA,mBAAwC;QACnD,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;;AAqBI,eAAA,mBAAwC;QACnD,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;;AAGI,eAAA,eAAe;QAC1B,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;;AAMI,eAAA,cAAc,CAAC,OAAA,OAAO,IAAI,OAAA,OAAO,gBAAgB,OAAA,OAAO;AAOxD,eAAA,aAAU,OAAA,IACrB,IAAC,OAAA,OAAO,WAAU,CAAC,OAAA,OAAO,YAC1B,IAAC,OAAA,OAAO,WAAU,CAAC,OAAA,OAAO,YAC1B,IAAC,OAAA,OAAO,aAAY,SAAA,kBACpB,IAAC,OAAA,OAAO,SAAQ,CAAC,OAAA,OAAO,YACxB,IAAC,OAAA,OAAO,SAAQ,CAAC,OAAA,OAAO,YACxB,IAAC,OAAA,OAAO,aAAY,CAAC,OAAA,OAAO,YAAY,OAAA,OAAO,oBAC/C,IAAC,OAAA,OAAO,cAAa,CAAC,OAAA,OAAO,YAC7B,IAAC,OAAA,OAAO,qBAAoB,CAAC,OAAA,OAAO;AAMzB,eAAA,WAAW;QACtB,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;;AAMI,eAAA,kBAAe,cAAA,CAAI,OAAA,OAAO,YAAc,SAAA,UAAQ;AAKhD,eAAA,gBAAgB;QAC3B,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,OAAA,OAAO;QACP,QAAA,QAAQ;QACR,QAAA,QAAQ;QACR,QAAA,QAAQ;QACR,QAAA,QAAQ;QACR;;;;;;;;;;;;;;;;;;;;;;ACvIF,UAAM,iBAA2B;QAC/B,UAAU,OAAA,OAAO;QACjB,MAAM;QACN,SAAS;UACP;YACE,UAAU,OAAA,OAAO;YACjB,MAAM;YACN,SAAS;cACP;gBACE,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,MAAM;;;;;;AAOhB,eAAA,UAAe;;;;;;AClBf,wBAAkB,KAA8B,OAAc;AAC5D,iBAAkB,KAAA,GAAA,MAAA,OAAO,KAAK,MAAZ,KAAA,IAAA,QAAA,MAAkB;AAA/B,cAAM,MAAG,IAAA;AACZ,cAAI,UAAU,IAAI,MAAM;AACtB,mBAAO;;;AAIX,eAAO;;AAMT,wBAAyB,MAAU;AACjC,eAAO,SAAS,QAAA,SAAS,KAAK;;AADhC,eAAA,WAAA;AAOA,uBAAwB,MAAU;AAChC,eAAO,SAAS,OAAA,QAAQ,KAAK;;AAD/B,eAAA,UAAA;AAOA,sBAAuB,MAAU;AAC/B,eAAO,KAAK,aAAa;;AAD3B,eAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCS,aAAA,eAAA,UAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAAA,OAAA;;AACA,aAAA,eAAA,UAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAAA,QAAA;;AACA,aAAA,eAAA,UAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAAA,gBAAA,OAAA;;AAET,mBAAA,mBAAA;AAEA,mBAAA,OAAA;AACA,mBAAA,WAAA;AAES,aAAA,eAAA,UAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAAA,gBAAA,eAAA;;AAET,UAAA,YAAA,aAAA;AACS,eAAA,UAAA;;;;;;;;qCCV+B,SAAoB,KAAW;AACrE,UAAI,QAAA,eAAe,YAAY,QAAQ,QAAQ,MAAM;AACnD,eAAO,QAAA,aAAa,SAAS,EAAE;;AAEjC,aAAO;;uCCDiC,OAAqB,UAAgB;AAC7E,aAAO,MAAM,IACX,SAAC,MAAkB,OAAa;AAC9B,eAAO,wBAAwB,qBAAqB,MAAM,WAAU;;;AAK1E,kCAAqC,MAAkB,UAAgB;AAC7D,UAAA,aAAuC,SAAO,YAAlC,aAA2B,SAAO,YAAtB,aAAe,SAAO;AACtD,UAAI,OAAQ,OAAO,OAAO;AACxB,eAAO,KAAK,MAAM,OAAO,SAAC,OAAkB,MAAU;AACpD,cAAI,CAAC,WAAW,KAAK,OAAO;AAC1B,mBAAO;;AAET,iBAAO,WAAW,KAAK,MAAM;WAC5B,aAAa,WAAW,KAAK,SAAS,KAAK;aACzC;AACL,YAAM,WAAsB,0BAA0B,KAAK,SAAS;AACpE,YAAI,CAAC,KAAK,YAAY,CAAC,WAAW,KAAK,WAAW;AAChD,iBAAO,eAAA,cAAA,eAAA,UAAA,MAAG;;AAEZ,eAAO,WAAW,KAAK,UAAU,MAAM;;;;;ACvB3C,QAAM,uBAAoB,MAAA,IACxB,GAAC,OAAO,YAAW,SAAC,MAAM,UAAQ;AAAK,aAAA;OACvC,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,KAAA,MAAI;OAC5C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,kBAAiB,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,OAAA,MAAM;OACnD,GAAC,OAAO,WAAU,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC3C,GAAC,OAAO,WAAU,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC3C,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,SAAQ,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,cAAA,MAAa;OACjD,GAAC,OAAO,MAAK,WAAA;AAAM,aAAA,eAAA,cAAA,MAAA;OACnB,GAAC,OAAO,SAAQ,SAAC,MAAM,UAAQ;AAAK,aAClC,eAAA,cAAA,SAAA,MACE,eAAA,cAAA,SAAA,MAAQ;OAGZ,GAAC,OAAO,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC7C,GAAC,OAAO,qBAAoB,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OACrD,GAAC,OAAO,cAAa,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,MAAA,MAAK;OAC9C,GAAC,OAAQ,mBAAkB,SAAA,MAAI;AAAI,aAAA,cAAc,OAAQ,iBAAiB;OAC1E,GAAC,OAAQ,mBAAkB,SAAA,MAAI;AAAI,aAAA,cAAc,OAAQ,iBAAiB;OAC1E,GAAC,OAAQ,kBAAiB,SAAA,MAAI;AAAI,aAAA,cAAc,OAAQ,gBAAgB;OACxE,GAAC,OAAQ,aAAY,SAAC,MAAM,UAAQ;AAAK,aAAA,eAAA,cAAA,KAAA,EAAG,MAAM,KAAK,KAAK,OAAM;;AAGpE,QAAM,uBAAoB,MAAA,IACxB,GAAC,OAAM,QAAO,SAAA,MAAI;AAAI,aAAA,eAAA,cAAA,KAAA,MAAI;OAC1B,GAAC,OAAM,UAAS,SAAA,MAAI;AAAI,aAAA,eAAA,cAAA,KAAA,MAAI;OAC5B,GAAC,OAAM,aAAY,SAAA,MAAI;AAAI,aAAA,eAAA,cAAA,KAAA,MAAI;OAC/B,GAAC,OAAM,QAAO,SAAA,MAAI;AAAI,aAAA,eAAA,cAAA,QAAA,MAAO;;AAG/B,2BAAuB,MAAc,MAAY;AAC/C,aACE,eAAA,cAAA,QAAA,EAAM,KAAK,KAAK,KAAK,OAAO,IAAI,gBACvB,KAAK,mBAAe,KAAK,KAAK,OAAO,IAAI;;AAyCtD,wCACE,kBACA,UAAqB;AAArB,UAAA,aAAA,QAAA;AAAA,mBAAA;;AAEA,UAAI,CAAC,kBAAkB;AACrB,eAAO;;AAGT,aAAO,qBAAqB,kBAAkB;QAC5C,YAAU,SAAA,SAAA,IACL,uBACA,SAAQ;QAEb,YAAU,SAAA,SAAA,IACL,uBACA,SAAQ;QAEb,YAAY,SAAQ;;;;;;;;;;;;;;AClGxB,QAAY;AAAZ,IAAA,UAAY,SAAM;AAChB,cAAA,cAAA;AACA,cAAA,eAAA;AAEA,cAAA,eAAA;AACA,cAAA,eAAA;AACA,cAAA,eAAA;AACA,cAAA,eAAA;AACA,cAAA,eAAA;AACA,cAAA,eAAA;AAEA,cAAA,aAAA;AACA,cAAA,aAAA;AACA,cAAA,eAAA;AAEA,cAAA,QAAA;AACA,cAAA,WAAA;AAEA,cAAA,oBAAA;AACA,cAAA,oBAAA;AAEA,cAAA,WAAA;AACA,cAAA,eAAA;AACA,cAAA,gBAAA;AACA,cAAA,uBAAA;OAxBU,UAAA,QAAA,UAAA,SAAA,SAAM;;;;;;;;;;;ACAlB,QAAY;AAAZ,IAAA,UAAY,UAAO;AACjB,eAAA,eAAA;AACA,eAAA,qBAAA;AACA,eAAA,qBAAA;AACA,eAAA,oBAAA;OAJU,WAAA,QAAA,WAAA,SAAA,UAAO;;;;;;;;;;ACAnB,QAAK;AAAL,IAAA,UAAK,QAAK;AACR,aAAA,UAAA;AACA,aAAA,YAAA;AACA,aAAA,eAAA;AACA,aAAA,UAAA;OAJG,UAAA,UAAK;AAOV,YAAA,UAAe;;;;;;;;;;;;;;;;;;;;;;;ACVf,QAAA,WAAA;AACA,QAAA,YAAA;AAsBa,YAAA,mBAAwC;MACnD,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;;AAqBI,YAAA,mBAAwC;MACnD,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;;AAGI,YAAA,eAAe;MAC1B,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;;AAMI,YAAA,cAAc,CAAC,SAAA,OAAO,IAAI,SAAA,OAAO,gBAAgB,SAAA,OAAO;AAOxD,YAAA,aAAU,MAAA,IACrB,GAAC,SAAA,OAAO,WAAU,CAAC,SAAA,OAAO,YAC1B,GAAC,SAAA,OAAO,WAAU,CAAC,SAAA,OAAO,YAC1B,GAAC,SAAA,OAAO,aAAY,QAAA,kBACpB,GAAC,SAAA,OAAO,SAAQ,CAAC,SAAA,OAAO,YACxB,GAAC,SAAA,OAAO,SAAQ,CAAC,SAAA,OAAO,YACxB,GAAC,SAAA,OAAO,aAAY,CAAC,SAAA,OAAO,YAAY,SAAA,OAAO,oBAC/C,GAAC,SAAA,OAAO,cAAa,CAAC,SAAA,OAAO,YAC7B,GAAC,SAAA,OAAO,qBAAoB,CAAC,SAAA,OAAO;AAMzB,YAAA,WAAW;MACtB,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;;AAMI,YAAA,kBAAe,cAAA,CAAI,SAAA,OAAO,YAAc,QAAA,UAAQ;AAKhD,YAAA,gBAAgB;MAC3B,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,SAAA,OAAO;MACP,UAAA,QAAQ;MACR,UAAA,QAAQ;MACR,UAAA,QAAQ;MACR,UAAA,QAAQ;MACR;;;;;;AC9IF;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO;AAAA;AAAA;;;ACDtD;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO;AAAA;AAAA;;;;;;;;ACAtD,QAAA,WAAA;AAMA,QAAM,iBAA2B;MAC/B,UAAU,SAAA,OAAO;MACjB,MAAM;MACN,SAAS;QACP;UACE,UAAU,SAAA,OAAO;UACjB,MAAM;UACN,SAAS;YACP;cACE,UAAU;cACV,OAAO;cACP,OAAO;cACP,MAAM;;;;;;AAOhB,YAAA,UAAe;;;;;;;;;;;ACzBf,QAAA,WAAA;AACA,QAAA,YAAA;AAMA,sBAAkB,KAA8B,OAAc;AAC5D,eAAkB,KAAA,GAAA,KAAA,OAAO,KAAK,MAAZ,KAAA,GAAA,QAAA,MAAkB;AAA/B,YAAM,MAAG,GAAA;AACZ,YAAI,UAAU,IAAI,MAAM;AACtB,iBAAO;;;AAIX,aAAO;;AAMT,sBAAyB,MAAU;AACjC,aAAO,SAAS,UAAA,SAAS,KAAK;;AADhC,YAAA,WAAA;AAOA,qBAAwB,MAAU;AAChC,aAAO,SAAS,SAAA,QAAQ,KAAK;;AAD/B,YAAA,UAAA;AAOA,oBAAuB,MAAU;AAC/B,aAAO,KAAK,aAAa;;AAD3B,YAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA,QAAA,WAAA;AAAS,WAAA,eAAA,SAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,SAAA;;AACT,QAAA,YAAA;AAAS,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;;AACT,QAAA,UAAA;AAAS,WAAA,eAAA,SAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,SAAA;;AAET,iBAAA,6BAAA;AAEA,iBAAA,iBAAA;AACA,iBAAA,qBAAA;AAEA,QAAA,kBAAA;AAAS,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,iBAAA;;AAET,QAAA,UAAA,aAAA;AACS,YAAA,UAAA;;;;;ACZT;;;ACAA;AACA,cAAuB;AAsBvB,uCAA0C;;;ACvB1C;AAAA,oBAAkB;AAClB,8BAA6C;;;ACD7C;AACA,aAAuB;AAUvB,IAAM,iBAAkC,CAAC,UAAU;AACjD,QAAM,gBAAwB,MAAM,KAAK,KAAK,OAAO,OAAO;AAE5D,SACE,qCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAM,SAAS;AAAA,KAEd,MAAM;AAAA;AAKb,IAAO,yBAAQ;;;ACxBf;AAAA,aAAuB;AAQvB,IAAM,YAA6B,CAAC,UAAU;AAC5C,QAAM,EAAE,kBAAU;AAClB,SACE,qCAAC,KAAD;AAAA,IACE,MAAM,MAAM;AAAA,IACZ,WAAW,mCACT,WAAU,sBACN,mCACA;AAAA,KAGL,MAAM;AAAA;AAKb,IAAO,oBAAQ;;;ACxBf;AAAA,aAAuB;;;;;;AAShB,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGrC,IAAM,aAA8B,CAAC,UAAU;AAC7C,SACE,qCAAC,cAAD;AAAA,IAAY,WAAU;AAAA,KACpB,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,MAAM,UAAU,mBAEnB,qCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,MAAM,UAAU;AAAA;AAMzB,IAAO,sBAAQ;;;AC1Bf;AAAA,aAAuB;;;;;;AAUhB,IAAM,SAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGrC,IAAM,aAA8B,CAAC,UAAU;AAC7C,SACE,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,OAAD;AAAA,IACE,KAAK,WAAW,MAAM;AAAA,IACtB,KAAK,MAAM;AAAA,IACX,OAAO,MAAM;AAAA,IACb,WAAU;AAAA,IACV,SAAQ;AAAA,MAET,MAAM,gBAAgB,UACrB,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,MAAM;AAAA;AAOjB,IAAO,sBAAQ;;;ACjCf;AAAA,aAAuB;;;;;;ACAvB;;;ACAA;AAmBC,IAAI,QAAS,WAAY;AAGzB,MAAI,OAAO;AACX,MAAI,WAAW;AAGf,MAAI,mBAAmB;AAGvB,MAAI,IAAI;AAAA,IAUP,MAAM;AAAA,MACL,QAAQ,gBAAgB,QAAQ;AAC/B,YAAI,kBAAkB,OAAO;AAC5B,iBAAO,IAAI,MAAM,OAAO,MAAM,OAAO,OAAO,UAAU,OAAO;AAAA,mBACnD,MAAM,QAAQ,SAAS;AACjC,iBAAO,OAAO,IAAI;AAAA,eACZ;AACN,iBAAO,OAAO,QAAQ,MAAM,SAAS,QAAQ,MAAM,QAAQ,QAAQ,WAAW;AAAA;AAAA;AAAA,MAoBhF,MAAM,SAAU,GAAG;AAClB,eAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,GAAG;AAAA;AAAA,MASnD,OAAO,SAAU,KAAK;AACrB,YAAI,CAAC,IAAI,SAAS;AACjB,iBAAO,eAAe,KAAK,QAAQ,EAAE,OAAO,EAAE;AAAA;AAE/C,eAAO,IAAI;AAAA;AAAA,MAaZ,OAAO,mBAAmB,GAAG,SAAS;AACrC,kBAAU,WAAW;AAErB,YAAI;AAAO,YAAI;AACf,gBAAQ,EAAE,KAAK,KAAK;AAAA,eACd;AACJ,iBAAK,EAAE,KAAK,MAAM;AAClB,gBAAI,QAAQ,KAAK;AAChB,qBAAO,QAAQ;AAAA;AAEhB,oBAA4C;AAC5C,oBAAQ,MAAM;AAEd,qBAAS,OAAO,GAAG;AAClB,kBAAI,EAAE,eAAe,MAAM;AAC1B,sBAAM,OAAO,UAAU,EAAE,MAAM;AAAA;AAAA;AAIjC,mBAA2B;AAAA,eAEvB;AACJ,iBAAK,EAAE,KAAK,MAAM;AAClB,gBAAI,QAAQ,KAAK;AAChB,qBAAO,QAAQ;AAAA;AAEhB,oBAAQ;AACR,oBAAQ,MAAM;AAEd,YAAyC,EAAK,QAAQ,SAAU,GAAG,GAAG;AACrE,oBAAM,KAAK,UAAU,GAAG;AAAA;AAGzB,mBAA2B;AAAA;AAG3B,mBAAO;AAAA;AAAA;AAAA,MAYV,aAAa,SAAU,SAAS;AAC/B,eAAO,SAAS;AACf,cAAI,IAAI,KAAK,KAAK,QAAQ;AAC1B,cAAI,GAAG;AACN,mBAAO,EAAE,GAAG;AAAA;AAEb,oBAAU,QAAQ;AAAA;AAEnB,eAAO;AAAA;AAAA,MAUR,aAAa,SAAU,SAAS,UAAU;AAGzC,gBAAQ,YAAY,QAAQ,UAAU,QAAQ,OAAO,MAAM,OAAO;AAIlE,gBAAQ,UAAU,IAAI,cAAc;AAAA;AAAA,MAsBrC,UAAU,SAAU,SAAS,WAAW,mBAAmB;AAC1D,YAAI,KAAK,QAAQ;AAEjB,eAAO,SAAS;AACf,cAAI,YAAY,QAAQ;AACxB,cAAI,UAAU,SAAS,YAAY;AAClC,mBAAO;AAAA;AAER,cAAI,UAAU,SAAS,KAAK;AAC3B,mBAAO;AAAA;AAER,oBAAU,QAAQ;AAAA;AAEnB,eAAO,CAAC,CAAC;AAAA;AAAA;AAAA,IAWX,WAAW;AAAA,MAIV,OAAO;AAAA,MACP,WAAW;AAAA,MACX,MAAM;AAAA,MACN,KAAK;AAAA,MA8BL,QAAQ,SAAU,IAAI,OAAO;AAC5B,YAAI,QAAO,EAAE,KAAK,MAAM,EAAE,UAAU;AAEpC,iBAAS,OAAO,OAAO;AACtB,gBAAK,OAAO,MAAM;AAAA;AAGnB,eAAO;AAAA;AAAA,MA8ER,cAAc,SAAU,QAAQ,QAAQ,QAAQ,MAAM;AACrD,eAAO,QAA4B,EAAE;AACrC,YAAI,UAAU,KAAK;AAEnB,YAAI,MAAM;AAEV,iBAAS,SAAS,SAAS;AAC1B,cAAI,QAAQ,eAAe,QAAQ;AAElC,gBAAI,SAAS,QAAQ;AACpB,uBAAS,YAAY,QAAQ;AAC5B,oBAAI,OAAO,eAAe,WAAW;AACpC,sBAAI,YAAY,OAAO;AAAA;AAAA;AAAA;AAM1B,gBAAI,CAAC,OAAO,eAAe,QAAQ;AAClC,kBAAI,SAAS,QAAQ;AAAA;AAAA;AAAA;AAKxB,YAAI,MAAM,KAAK;AACf,aAAK,UAAU;AAGf,UAAE,UAAU,IAAI,EAAE,WAAW,SAAU,KAAK,OAAO;AAClD,cAAI,UAAU,OAAO,OAAO,QAAQ;AACnC,iBAAK,OAAO;AAAA;AAAA;AAId,eAAO;AAAA;AAAA,MAIR,KAAK,aAAa,GAAG,UAAU,MAAM,SAAS;AAC7C,kBAAU,WAAW;AAErB,YAAI,QAAQ,EAAE,KAAK;AAEnB,iBAAS,KAAK,GAAG;AAChB,cAAI,EAAE,eAAe,IAAI;AACxB,qBAAS,KAAK,GAAG,GAAG,EAAE,IAAI,QAAQ;AAElC,gBAAI,WAAW,EAAE;AACjB,gBAAI,eAAe,EAAE,KAAK,KAAK;AAE/B,gBAAI,iBAAiB,YAAY,CAAC,QAAQ,MAAM,YAAY;AAC3D,sBAAQ,MAAM,aAAa;AAC3B,kBAAI,UAAU,UAAU,MAAM;AAAA,uBACpB,iBAAiB,WAAW,CAAC,QAAQ,MAAM,YAAY;AACjE,sBAAQ,MAAM,aAAa;AAC3B,kBAAI,UAAU,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOhC,SAAS;AAAA,IAuBT,WAAW,SAAU,MAAM,SAAS,UAAU;AAC7C,UAAI,MAAM;AAAA,QACT,MAAM;AAAA,QACN;AAAA,QACA;AAAA;AAED,QAAE,MAAM,IAAI,mBAAmB;AAC/B,UAAI,SAAS,EAAE,SAAS,IAAI,MAAM,IAAI;AACtC,QAAE,MAAM,IAAI,kBAAkB;AAC9B,aAAO,MAAM,UAAU,EAAE,KAAK,OAAO,IAAI,SAAS,IAAI;AAAA;AAAA,IA2BvD,UAAU,SAAU,MAAM,SAAS;AAClC,UAAI,OAAO,QAAQ;AACnB,UAAI,MAAM;AACT,iBAAS,SAAS,MAAM;AACvB,kBAAQ,SAAS,KAAK;AAAA;AAGvB,eAAO,QAAQ;AAAA;AAGhB,UAAI,YAAY,IAAI;AACpB,eAAS,WAAW,UAAU,MAAM;AAEpC,mBAAa,MAAM,WAAW,SAAS,UAAU,MAAM;AAEvD,aAAO,QAAQ;AAAA;AAAA,IAQhB,OAAO;AAAA,MACN,KAAK;AAAA,MAcL,KAAK,SAAU,MAAM,UAAU;AAC9B,YAAI,QAAQ,EAAE,MAAM;AAEpB,cAAM,QAAQ,MAAM,SAAS;AAE7B,cAAM,MAAM,KAAK;AAAA;AAAA,MAYlB,KAAK,SAAU,MAAM,KAAK;AACzB,YAAI,YAAY,EAAE,MAAM,IAAI;AAE5B,YAAI,CAAC,aAAa,CAAC,UAAU,QAAQ;AACpC;AAAA;AAGD,iBAAS,IAAI,GAAG,UAAW,WAAW,UAAU,QAAQ;AACvD,mBAAS;AAAA;AAAA;AAAA;AAAA,IAKZ;AAAA;AAoBD,iBAAe,MAAM,SAAS,OAAO,YAAY;AAUhD,SAAK,OAAO;AASZ,SAAK,UAAU;AAQf,SAAK,QAAQ;AAEb,SAAK,SAAU,eAAc,IAAI,SAAS;AAAA;AA+B3C,QAAM,YAAY,mBAAmB,GAAG,UAAU;AACjD,QAAI,OAAO,KAAK,UAAU;AACzB,aAAO;AAAA;AAER,QAAI,MAAM,QAAQ,IAAI;AACrB,UAAI,IAAI;AACR,QAAE,QAAQ,SAAU,GAAG;AACtB,aAAK,UAAU,GAAG;AAAA;AAEnB,aAAO;AAAA;AAGR,QAAI,MAAM;AAAA,MACT,MAAM,EAAE;AAAA,MACR,SAAS,UAAU,EAAE,SAAS;AAAA,MAC9B,KAAK;AAAA,MACL,SAAS,CAAC,SAAS,EAAE;AAAA,MACrB,YAAY;AAAA,MACZ;AAAA;AAGD,QAAI,UAAU,EAAE;AAChB,QAAI,SAAS;AACZ,UAAI,MAAM,QAAQ,UAAU;AAC3B,cAAM,UAAU,KAAK,MAAM,IAAI,SAAS;AAAA,aAClC;AACN,YAAI,QAAQ,KAAK;AAAA;AAAA;AAInB,MAAE,MAAM,IAAI,QAAQ;AAEpB,QAAI,aAAa;AACjB,aAAS,QAAQ,IAAI,YAAY;AAChC,oBAAc,MAAM,OAAO,OAAQ,KAAI,WAAW,SAAS,IAAI,QAAQ,MAAM,YAAY;AAAA;AAG1F,WAAO,MAAM,IAAI,MAAM,aAAa,IAAI,QAAQ,KAAK,OAAO,MAAM,aAAa,MAAM,IAAI,UAAU,OAAO,IAAI,MAAM;AAAA;AAUrH,wBAAsB,SAAS,KAAK,MAAM,YAAY;AACrD,YAAQ,YAAY;AACpB,QAAI,QAAQ,QAAQ,KAAK;AACzB,QAAI,SAAS,cAAc,MAAM,IAAI;AAEpC,UAAI,mBAAmB,MAAM,GAAG;AAChC,YAAM,SAAS;AACf,YAAM,KAAK,MAAM,GAAG,MAAM;AAAA;AAE3B,WAAO;AAAA;AAiBR,wBAAsB,MAAM,WAAW,SAAS,WAAW,UAAU,SAAS;AAC7E,aAAS,SAAS,SAAS;AAC1B,UAAI,CAAC,QAAQ,eAAe,UAAU,CAAC,QAAQ,QAAQ;AACtD;AAAA;AAGD,UAAI,WAAW,QAAQ;AACvB,iBAAW,MAAM,QAAQ,YAAY,WAAW,CAAC;AAEjD,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACzC,YAAI,WAAW,QAAQ,SAAS,QAAQ,MAAM,GAAG;AAChD;AAAA;AAGD,YAAI,aAAa,SAAS;AAC1B,YAAI,SAAS,WAAW;AACxB,YAAI,aAAa,CAAC,CAAC,WAAW;AAC9B,YAAI,SAAS,CAAC,CAAC,WAAW;AAC1B,YAAI,QAAQ,WAAW;AAEvB,YAAI,UAAU,CAAC,WAAW,QAAQ,QAAQ;AAEzC,cAAI,QAAQ,WAAW,QAAQ,WAAW,MAAM,aAAa;AAC7D,qBAAW,UAAU,OAAO,WAAW,QAAQ,QAAQ,QAAQ;AAAA;AAIhE,YAAI,UAAU,WAAW,WAAW;AAEpC,iBACK,cAAc,UAAU,MAAM,MAAM,UACxC,gBAAgB,UAAU,MAC1B,OAAO,YAAY,MAAM,QAAQ,cAAc,YAAY,MAC1D;AAED,cAAI,WAAW,OAAO,QAAQ,OAAO;AACpC;AAAA;AAGD,cAAI,MAAM,YAAY;AAEtB,cAAI,UAAU,SAAS,KAAK,QAAQ;AAEnC;AAAA;AAGD,cAAI,eAAe,OAAO;AACzB;AAAA;AAGD,cAAI,cAAc;AAClB,cAAI;AAEJ,cAAI,QAAQ;AACX,oBAAQ,aAAa,SAAS,KAAK,MAAM;AACzC,gBAAI,CAAC,SAAS,MAAM,SAAS,KAAK,QAAQ;AACzC;AAAA;AAGD,gBAAI,OAAO,MAAM;AACjB,gBAAI,KAAK,MAAM,QAAQ,MAAM,GAAG;AAChC,gBAAI,IAAI;AAGR,iBAAK,YAAY,MAAM;AACvB,mBAAO,QAAQ,GAAG;AACjB,4BAAc,YAAY;AAC1B,mBAAK,YAAY,MAAM;AAAA;AAGxB,iBAAK,YAAY,MAAM;AACvB,kBAAM;AAGN,gBAAI,YAAY,iBAAiB,OAAO;AACvC;AAAA;AAID,qBACK,IAAI,aACR,MAAM,UAAU,QAAS,KAAI,MAAM,OAAO,EAAE,UAAU,WACtD,IAAI,EAAE,MACL;AACD;AACA,mBAAK,EAAE,MAAM;AAAA;AAEd;AAGA,kBAAM,KAAK,MAAM,KAAK;AACtB,kBAAM,SAAS;AAAA,iBACT;AACN,oBAAQ,aAAa,SAAS,GAAG,KAAK;AACtC,gBAAI,CAAC,OAAO;AACX;AAAA;AAAA;AAKF,cAAI,OAAO,MAAM;AACjB,cAAI,WAAW,MAAM;AACrB,cAAI,SAAS,IAAI,MAAM,GAAG;AAC1B,cAAI,QAAQ,IAAI,MAAM,OAAO,SAAS;AAEtC,cAAI,QAAQ,MAAM,IAAI;AACtB,cAAI,WAAW,QAAQ,QAAQ,OAAO;AACrC,oBAAQ,QAAQ;AAAA;AAGjB,cAAI,aAAa,YAAY;AAE7B,cAAI,QAAQ;AACX,yBAAa,SAAS,WAAW,YAAY;AAC7C,mBAAO,OAAO;AAAA;AAGf,sBAAY,WAAW,YAAY;AAEnC,cAAI,UAAU,IAAI,MAAM,OAAO,SAAS,EAAE,SAAS,UAAU,UAAU,UAAU,OAAO;AACxF,wBAAc,SAAS,WAAW,YAAY;AAE9C,cAAI,OAAO;AACV,qBAAS,WAAW,aAAa;AAAA;AAGlC,cAAI,cAAc,GAAG;AAKpB,gBAAI,gBAAgB;AAAA,cACnB,OAAO,QAAQ,MAAM;AAAA,cACrB;AAAA;AAED,yBAAa,MAAM,WAAW,SAAS,YAAY,MAAM,KAAK;AAG9D,gBAAI,WAAW,cAAc,QAAQ,QAAQ,OAAO;AACnD,sBAAQ,QAAQ,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBpC,wBAAsB;AAErB,QAAI,OAAO,EAAE,OAAO,MAAM,MAAM,MAAM,MAAM;AAE5C,QAAI,OAAO,EAAE,OAAO,MAAM,MAAM,MAAM,MAAM;AAC5C,SAAK,OAAO;AAGZ,SAAK,OAAO;AAEZ,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA;AAYf,oBAAkB,MAAM,MAAM,OAAO;AAEpC,QAAI,OAAO,KAAK;AAEhB,QAAI,UAAU,EAAE,OAAc,MAAM,MAAM;AAC1C,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK;AAEL,WAAO;AAAA;AAUR,uBAAqB,MAAM,MAAM,OAAO;AACvC,QAAI,OAAO,KAAK;AAChB,aAAS,IAAI,GAAG,IAAI,SAAS,SAAS,KAAK,MAAM,KAAK;AACrD,aAAO,KAAK;AAAA;AAEb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA;AAOhB,mBAAiB,MAAM;AACtB,QAAI,QAAQ;AACZ,QAAI,OAAO,KAAK,KAAK;AACrB,WAAO,SAAS,KAAK,MAAM;AAC1B,YAAM,KAAK,KAAK;AAChB,aAAO,KAAK;AAAA;AAEb,WAAO;AAAA;AAGR,SAAO;AAAA;AAIR,IAAI,QAAQ;AACZ,MAAM,UAAU;AAMhB,MAAM,UAAU,SAAS;AAAA,EACvB,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,WAAW;AAAA,IAET,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,mBAAmB;AAAA,QACjB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA;AAAA,MAGV,UAAU;AAAA,QACR,SAAS;AAAA,QACT,QAAQ;AAAA;AAAA,MAEV,eAAe;AAAA,MACf,eAAe;AAAA,MACf,QAAQ;AAAA;AAAA;AAAA,EAGZ,SAAS;AAAA,IACP,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,OAAO;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,eAAe;AAAA,UACf,aAAa;AAAA;AAAA;AAAA,MAGjB,gBAAgB;AAAA,MAChB,cAAc;AAAA,QACZ,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,eAAe,CAAC;AAAA,YACd,SAAS;AAAA,YACT,OAAO;AAAA,aACN;AAAA;AAAA;AAAA,MAGP,eAAe;AAAA,MACf,aAAa;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,UACN,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,UAAU,CAAC;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,KACN;AAAA;AAEL,MAAM,UAAU,OAAO,OAAO,OAAO,cAAc,OAAO,YAAY,MAAM,UAAU,OAAO;AAC7F,MAAM,UAAU,OAAO,WAAW,OAAO,mBAAmB,SAAS,MAAM,UAAU;AAErF,MAAM,MAAM,IAAI,QAAQ,SAAU,KAAK;AACrC,MAAI,IAAI,SAAS,UAAU;AACzB,QAAI,WAAW,WAAW,IAAI,QAAQ,QAAQ,SAAS;AAAA;AAAA;AAG3D,OAAO,eAAe,MAAM,UAAU,OAAO,KAAK,cAAc;AAAA,EAY9D,OAAO,oBAAoB,SAAS,MAAM;AACxC,QAAI,sBAAsB;AAC1B,wBAAoB,cAAc,QAAQ;AAAA,MACxC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ,MAAM,UAAU;AAAA;AAE1B,wBAAoB,WAAW;AAC/B,QAAI,SAAS;AAAA,MACX,kBAAkB;AAAA,QAChB,SAAS;AAAA,QACT,QAAQ;AAAA;AAAA;AAGZ,WAAO,cAAc,QAAQ;AAAA,MAC3B,SAAS;AAAA,MACT,QAAQ,MAAM,UAAU;AAAA;AAE1B,QAAI,MAAM;AACV,QAAI,WAAW;AAAA,MACb,SAAS,OAAO,wFAAwF,OAAO,QAAQ,OAAO,WAAY;AACxI,eAAO;AAAA,UACL;AAAA,MACJ,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR;AAAA;AAEF,UAAM,UAAU,aAAa,UAAU,SAAS;AAAA;AAAA;AAGpD,OAAO,eAAe,MAAM,UAAU,OAAO,KAAK,gBAAgB;AAAA,EAYhE,OAAO,SAAU,UAAU,MAAM;AAC/B,UAAM,UAAU,OAAO,IAAI,OAAO,gBAAgB,KAAK;AAAA,MACrD,SAAS,OAAO,aAAa,SAAS,QAAQ,WAAW,MAAM,iDAAiD,QAAQ;AAAA,MACxH,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,aAAa;AAAA,QACb,cAAc;AAAA,UACZ,SAAS;AAAA,UACT,QAAQ;AAAA,YACN,SAAS;AAAA,cACP,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO,CAAC,MAAM,cAAc;AAAA,cAC5B,QAAQ,MAAM,UAAU;AAAA;AAAA,YAE1B,eAAe,CAAC;AAAA,cACd,SAAS;AAAA,cACT,OAAO;AAAA,eACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOf,MAAM,UAAU,OAAO,MAAM,UAAU;AACvC,MAAM,UAAU,SAAS,MAAM,UAAU;AACzC,MAAM,UAAU,MAAM,MAAM,UAAU;AACtC,MAAM,UAAU,MAAM,MAAM,UAAU,OAAO,UAAU;AACvD,MAAM,UAAU,OAAO,MAAM,UAAU;AACvC,MAAM,UAAU,OAAO,MAAM,UAAU;AACvC,MAAM,UAAU,MAAM,MAAM,UAAU;AAGtC,AAAC,UAAU,QAAO;AAKhB,MAAI,UAAU;AACd,MAAI,sBAAsB;AAAA,IACxB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA,IAEP,QAAQ;AAAA;AAGV,MAAI,eAAe;AAAA,IACjB,QAAQ;AAAA,IACR,eAAe;AAAA,MACb,SAAS,OAAO,QAAQ;AAAA,MACxB,OAAO;AAAA;AAAA,IAET,YAAY;AAAA,MACZ;AAAA,QACE,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UAEN,YAAY,CAAC;AAAA,YACX,SAAS;AAAA,YACT,YAAY;AAAA,aACX;AAAA,UACH,UAAU;AAAA,UAEV,YAAY;AAAA,UAEZ,eAAe;AAAA;AAAA;AAAA,MAGnB;AAAA,QACE,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,YAAY;AAAA;AAAA;AAAA,MAGhB;AAAA,QACE,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,eAAe;AAAA,YACb,SAAS,OAAO,UAAU;AAAA,YAC1B,YAAY;AAAA,YACZ,OAAO;AAAA;AAAA;AAAA;AAAA,MAGV;AAAA;AAAA,IAEH,UAAU;AAAA;AAEZ,SAAM,UAAU,OAAO;AAAA,IACrB,WAAW;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,iBAAiB;AAAA,MAIjB;AAAA,QAEE,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA,MACN;AAAA,QAED,SAAS;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGT,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAY;AAAA;AAAA,IAId,eAAe;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,eAAe;AAAA,UACb,SAAS,OAAO,yBAAyB;AAAA,UACzC,YAAY;AAAA,UACZ,OAAO;AAAA;AAAA;AAAA,MAGX,OAAO;AAAA,MACP,YAAY;AAAA;AAAA,IAEd,UAAU;AAAA,MACV;AAAA,QACE,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA;AAAA,MAGV;AAAA,QACE,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,QAAQ;AAAA;AAAA;AAAA,MAGZ;AAAA,QAEE,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA;AAAA,MACP;AAAA,QAED,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA;AAAA,MACP;AAAA,QAED,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,UAAU,aAAa;AAAA;AAAA;AAAA;AAAA,IAG3B,eAAe;AAAA,MACb,SAAS,OAAO,SAAS;AAAA,MACzB,OAAO;AAAA;AAAA,IAET,YAAY,aAAa;AAAA,IACzB,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAGd,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MAEZ,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,mBAAmB;AAAA,MACjB,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,YAAY;AAAA,MAEV,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,mBAAmB;AAAA,UACjB,SAAS;AAAA,UACT,OAAO;AAAA;AAAA;AAAA;AAAA,IAIb,eAAe;AAAA,IACf,UAAU;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA;AAAA;AAGhB,sBAAoB,SAAS,OAAM,UAAU;AAG7C,MAAI,aAAa,CAAC,WAAW,iBAAiB,iBAAiB,eAAe,UAAU,eAAe,YAAY,WAAW,WAAW,WAAW,mBAAmB,YAAY,eAAe;AAClM,MAAI,SAAS,aAAa,SAAS,GAAG;AAEtC,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,WAAO,WAAW,MAAM,OAAM,UAAU,KAAK,WAAW;AAAA;AAG1D,SAAM,UAAU,QAAQ,OAAM,UAAU;AAAA,GACvC;AAIH,MAAM,UAAU,QAAQ;AAAA,EACtB,WAAW,CAAC;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,KACP;AAAA,IACD,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA;AAAA,EAGnB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAAA;AAIjB,MAAM,UAAU,IAAI,MAAM,UAAU,OAAO,SAAS;AAAA,EAClD,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IAER,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA;AAEd,MAAM,UAAU,aAAa,KAAK,UAAU;AAAA,EAC1C,QAAQ;AAAA,IAEN,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA;AAGZ,MAAM,UAAU,aAAa,KAAK,UAAU;AAAA,EAC1C,SAAS;AAAA,IAGP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,UAAU,CAAC;AAAA,QAET,SAAS;AAAA,QACT,YAAY;AAAA,SACX,MAAM,UAAU,EAAE;AAAA,MACrB,QAAQ,MAAM,UAAU,EAAE;AAAA,MAC1B,WAAW,MAAM,UAAU,EAAE;AAAA,MAC7B,cAAc,CAAC;AAAA,QACb,SAAS;AAAA,QACT,YAAY;AAAA,SACX;AAAA,QACD,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA,MAGT,aAAa;AAAA,QACX,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA,MAET,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,cAAc;AAAA,QACZ,SAAS;AAAA,QACT,QAAQ,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAKhC,MAAM,UAAU,aAAa,KAAK,YAAY;AAAA,EAE5C,YAAY;AAAA;AAEd,OAAO,MAAM,UAAU,EAAE;AAGzB,AAAC,UAAU,QAAO;AAChB,MAAI,UAAU;AACd,MAAI,UAAU,uCAAuC,OAAO,QAAQ,cAAc,WAAY;AAC5F,WAAO,QAAQ;AAAA;AAEjB,SAAM,UAAU,MAAM,OAAM,UAAU,OAAO,KAAK;AAAA,IAChD,cAAc;AAAA,MAAC;AAAA,QACb,SAAS,OAAO,gEAAgE,OAAO,QAAQ,cAAc,WAAY;AACvH,iBAAO,QAAQ;AAAA;AAAA,QAEjB,YAAY;AAAA;AAAA,MAKd;AAAA,MAEA;AAAA,MAEA;AAAA;AAAA,IACA,WAAW;AAAA,IACX,UAAU;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA;AAAA,IAEV,YAAY;AAAA,IACZ,WAAW;AAAA;AAEb,SAAM,UAAU,aAAa,OAAO,UAAU;AAAA,IAC5C,UAAU;AAAA,MAER,SAAS,OAAO,2BAA2B,SAAS,QACpD,mDAAmD,SAAS,MAC5D,kDAAkD,OAAO,QAAQ,eAAe,WAAY;AAC1F,eAAO;AAAA,WACJ;AAAA,MACL,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,eAAe;AAAA;AAAA;AAAA,IAGnB,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA;AAAA;AAGZ,SAAM,UAAU,aAAa,OAAO,WAAW;AAAA,IAC7C,oBAAoB;AAAA,MAClB,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,WAAW;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ,OAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAKhC,SAAM,UAAU,aAAa,OAAO,YAAY;AAAA,IAC9C,gBAAgB;AAAA,MACd,SAAS;AAAA,MACT,OAAO;AAAA;AAAA;AAGX,SAAM,UAAU,aAAa,OAAO,cAAc;AAAA,IAGhD,eAAe;AAAA,MACb,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ,OAAM,UAAU,OAAO,OAAO;AAAA;AAAA;AAG1C,SAAM,UAAU,aAAa,UAAU,gBAAgB;AAAA,IAErD,cAAc;AAAA,KACb,OAAM,UAAU,IAAI;AAAA,GACtB;AAIH,AAAC,UAAU,QAAO;AAChB,MAAI,SAAS;AACb,SAAM,UAAU,MAAM;AAAA,IACpB,WAAW;AAAA,IACX,UAAU;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,QAAQ;AAAA,QACR,8BAA8B;AAAA,UAC5B,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA;AAAA,QAET,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA;AAAA;AAAA;AAAA,IAKlB,OAAO;AAAA,MAEL,SAAS,OAAO,iBAAiB,OAAO,SAAS,MAAM,8BAA8B,SAAS,QAAQ;AAAA,MACtG,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,UAAU;AAAA,UACR,SAAS,OAAO,MAAM,OAAO,SAAS;AAAA,UACtC,OAAO;AAAA;AAAA;AAAA;AAAA,IAIb,YAAY;AAAA,MACV,SAAS,OAAO,sDAAuD,OAAO,SAAS;AAAA,MACvF,YAAY;AAAA;AAAA,IAEd,UAAU;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA;AAAA,IAEV,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,aAAa;AAAA,IACb,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,eAAe;AAAA;AAEjB,SAAM,UAAU,IAAI,UAAU,OAAO,OAAO,OAAM,UAAU;AAC5D,MAAI,SAAS,OAAM,UAAU;AAE7B,MAAI,QAAQ;AACV,WAAO,IAAI,WAAW,SAAS;AAC/B,WAAO,IAAI,aAAa,SAAS;AAAA;AAAA,GAElC;AAIH,AAAC,UAAU,QAAO;AAChB,MAAI,SAAS;AACb,MAAI;AACJ,SAAM,UAAU,IAAI,WAAW;AAAA,IAC7B,SAAS,OAAM,UAAU,IAAI,SAAS;AAAA,IACtC,YAAY;AAAA,IACZ,QAAQ,iBAAiB;AAAA,MACvB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,QACX,SAAS,OAAO,qBAAsB,OAAO,SAAS;AAAA,QACtD,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,eAAe;AAAA,UACf,oBAAoB;AAAA,YAClB,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA;AAAA,UAET,aAAa;AAAA,YACX,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,cACN,eAAe;AAAA;AAAA;AAAA,UAGnB,aAAa;AAAA,YACX,SAAS;AAAA,YACT,YAAY;AAAA;AAAA,UAEd,cAAc,CAAC,QAAQ;AAAA,YACrB,SAAS;AAAA,YACT,YAAY;AAAA;AAAA,UAEd,YAAY;AAAA;AAAA;AAAA,MAGhB,QAAQ,CAAC;AAAA,QACP,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACN,UAAU;AAAA,UACV,YAAY;AAAA;AAAA,SAEb;AAAA,QACD,SAAS;AAAA,QACT,YAAY;AAAA;AAAA,MAEd,cAAc;AAAA,MAId,eAAe;AAAA;AAAA;AAGnB,SAAM,UAAU,IAAI,UAAU,OAAO,8BAA8B,SAAS;AAC5E,SAAM,UAAU,aAAa,OAAO,YAAY;AAAA,IAC9C,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA;AAAA;AAGhB,MAAI,OAAO;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA;AAGd,MAAI,SAAS;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA;AAEd,SAAM,UAAU,aAAa,OAAO,YAAY;AAAA,IAC9C,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAId,WAAW;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,SAAS,CAAC;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA,OACX;AAAA,MACD,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,eAAe;AAAA;AAAA;AAAA,IAInB,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA;AAAA,GAEX;AAIH,MAAM,UAAU,aAAa,MAAM,UAAU,OAAO,SAAS;AAAA,EAC3D,cAAc,CAAC,MAAM,UAAU,MAAM,eAAe;AAAA,IAClD,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,WAAW,CAAC;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,KACX;AAAA,IACD,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAGd,YAAY;AAAA,EACZ,UAAU;AAAA,IACR,SAAS,OAAO,aAAa,SAAS,QACtC,gBAAe,SAAS,MACxB,0BAA0B,SAAS,MACnC,4BAA4B,SAAS,MACrC,sCAAsC,SAAS,MAC/C,gBAAgB,SAAS,MACzB,oFAAoF,UAAU,MAAM,YAAY;AAAA,IAChH,YAAY;AAAA;AAAA,EAEd,YAAY;AAAA;AAEd,MAAM,UAAU,WAAW,cAAc,GAAG,UAAU;AACtD,MAAM,UAAU,aAAa,cAAc,WAAW;AAAA,EACpD,SAAS;AAAA,IAEP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,gBAAgB;AAAA,QACd,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,QAAQ,MAAM,UAAU;AAAA;AAAA,MAE1B,mBAAmB;AAAA,MACnB,eAAe;AAAA;AAAA;AAAA,EAInB,qBAAqB;AAAA,IACnB,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,aAAa,CAAC;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ,MAAM,UAAU;AAAA,KACvB;AAAA,IACD,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ,MAAM,UAAU;AAAA,KACvB;AAAA,IACD,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ,MAAM,UAAU;AAAA,KACvB;AAAA,IACD,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ,MAAM,UAAU;AAAA;AAAA,EAE1B,YAAY;AAAA;AAEd,MAAM,UAAU,aAAa,cAAc,UAAU;AAAA,EACnD,YAAY;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,EAET,mBAAmB;AAAA,IACjB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,wBAAwB;AAAA,QACtB,SAAS;AAAA,QACT,OAAO;AAAA;AAAA,MAET,iBAAiB;AAAA,QACf,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACN,6BAA6B;AAAA,YAC3B,SAAS;AAAA,YACT,OAAO;AAAA;AAAA,UAET,MAAM,MAAM,UAAU;AAAA;AAAA;AAAA,MAG1B,UAAU;AAAA;AAAA;AAAA,EAGd,mBAAmB;AAAA,IACjB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA;AAGX,MAAM,UAAU,aAAa,cAAc,YAAY;AAAA,EACrD,oBAAoB;AAAA,IAClB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA;AAAA;AAIX,IAAI,MAAM,UAAU,QAAQ;AAC1B,QAAM,UAAU,OAAO,IAAI,WAAW,UAAU;AAGhD,QAAM,UAAU,OAAO,IAAI,aAAa,yNAAyN,QAAQ;AAAA;AAG3Q,MAAM,UAAU,KAAK,MAAM,UAAU;AAGrC,AAAC,UAAU,QAAO;AAEhB,MAAI,UAAU;AACd,MAAI,gBAAgB;AAAA,IAClB,SAAS;AAAA,IACT,OAAO;AAAA;AAET,SAAM,UAAU,eAAe,OAAM,UAAU,OAAO,cAAc;AAAA,IAClE,WAAW;AAAA,IACX,UAAU;AAAA,MACV;AAAA,QACE,SAAS;AAAA,QACT,QAAQ;AAAA;AAAA,MACP;AAAA,QAED,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,iBAAiB;AAAA;AAAA;AAAA;AAAA,IAGrB,WAAW;AAAA,IACX,gBAAgB;AAAA,MACd,SAAS;AAAA,MACT,OAAO;AAAA;AAAA;AAGX,SAAM,UAAU,aAAa,gBAAgB,WAAW;AAAA,IACtD,qBAAqB;AAAA,MACnB,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAGT,eAAe;AAAA,MACb,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,WAAW;AAAA,QACX,iBAAiB;AAAA;AAAA;AAAA;AAIvB,SAAM,UAAU,aAAa,gBAAgB,UAAU;AAAA,IACrD,qBAAqB;AAAA,MACnB,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,aAAa;AAAA,UACX,SAAS;AAAA,UACT,OAAO;AAAA;AAAA,QAET,UAAU;AAAA,UACR,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ,OAAM,UAAU;AAAA;AAAA;AAAA;AAAA,IAK9B,oBAAoB,CAAC;AAAA,MACnB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,OACN;AAAA,MACD,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,QACN;AAAA;AAAA;AAAA;AAIN,SAAM,UAAU,aAAa,gBAAgB,WAAW;AAAA,IAEtD,YAAY;AAAA;AAEd,SAAO,OAAM,UAAU,aAAa;AACpC,SAAM,UAAU,SAAS,OAAM,UAAU;AAAA,GACxC;AAIH,AAAC,UAAU,QAAO;AAGhB,MAAI,gBAAgB;AAEpB,MAAI,MAAM;AAEV,MAAI,aAAa,QAAQ,IAAI,SAAS,aAAc,cAAc,SAAS,QAAQ,cAAc,SAAS,aAAc,IAAI,SAAS;AAIrI,MAAI,WAAW,kJAAkJ,OAAO,QAAQ,YAAY,WAAY;AACtM,WAAO,2EAA2E;AAAA;AAEpF,MAAI,SAAS,8CAA8C;AAQ3D,8BAA4B,OAAO,OAAO;AACxC,YAAS,UAAS,IAAI,QAAQ,MAAM,MAAM;AAE1C,QAAI,UAAU,yFAAyF,OAAO,QAAQ,aAAa,WAAY;AAC7I,aAAO;AAAA,OACN,QAAQ,cAAc,WAAY;AACnC,aAAO;AAAA;AAET,WAAO,OAAO,SAAS;AAAA;AAGzB,SAAM,UAAU,OAAO;AAAA,IACrB,UAAU;AAAA,MACR,SAAS,OAAO,6FAA6F,OAAO,QAAQ,aAAa,WAAY;AACnJ,eAAO;AAAA;AAAA,MAET,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,IACX,OAAO;AAAA,MACL,SAAS,OAAO,kEAAkE,OAAO,QAAQ,aAAa,WAAY;AACxH,eAAO;AAAA,SACN,QAAQ,YAAY,WAAY;AACjC,eAAO,QAAQ,WAAW,MAAM,SAAS;AAAA;AAAA,MAE3C,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO;AAAA;AAAA,IAET,aAAa;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,YAAY;AAAA,MACV,SAAS,mBAAmB,sJAAsJ;AAAA,MAClL,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,SAAS,mBAAmB,aAAa,QAAQ;AAAA,MACjD,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,QAAQ;AAAA,MACN,SAAS,mBAAmB,SAAS,QAAQ;AAAA,MAC7C,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,UAAU;AAAA,MACR,SAAS,mBAAmB;AAAA,MAC5B,YAAY;AAAA,MACZ,QAAQ;AAAA;AAAA,IAEV,UAAU;AAAA,MACR,SAAS,mBAAmB,iFAAiF,QAAQ;AAAA,MACrH,YAAY;AAAA;AAAA,IAEd,OAAO;AAAA,IACP,aAAa;AAAA,IACb,eAAe;AAAA;AAEjB,SAAM,UAAU,MAAM,OAAM,UAAU;AAAA,GACrC;AAIH,AAAC,UAAU,QAAO;AAEhB,MAAI,QAAQ,2CAA2C;AAYvD,wBAAsB,SAAS;AAC7B,cAAU,QAAQ,QAAQ,YAAY,WAAY;AAChD,aAAO;AAAA;AAET,WAAO,OAAO,0BAA0B,SAAS,QAAQ,UAAU;AAAA;AAGrE,MAAI,YAAY,4DAA4D;AAC5E,MAAI,WAAW,+CAA+C,OAAO,QAAQ,OAAO,WAAY;AAC9F,WAAO;AAAA;AAET,MAAI,YAAY,sEAAsE;AACtF,SAAM,UAAU,WAAW,OAAM,UAAU,OAAO,UAAU;AAC5D,SAAM,UAAU,aAAa,YAAY,UAAU;AAAA,IACjD,sBAAsB;AAAA,MACpB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,eAAe;AAAA,QACf,gBAAgB;AAAA,UACd,SAAS;AAAA,UACT,OAAO,CAAC,QAAQ;AAAA,UAChB,QAAQ,OAAM,UAAU;AAAA;AAAA;AAAA;AAAA,IAI9B,cAAc;AAAA,MAEZ,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,SAAS;AAAA,MACP,SAAS,OAAO,MAAM,WAAW,YAAY,QAAQ,WAAW,MAAM;AAAA,MACtE,QAAQ;AAAA,QACN,mBAAmB;AAAA,UACjB,SAAS,OAAO,OAAO,WAAW,YAAY,SAAS,WAAW;AAAA,UAClE,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,cAAc;AAAA,cACZ,SAAS,OAAO;AAAA,cAChB,QAAQ,OAAM,UAAU;AAAA;AAAA,YAE1B,eAAe;AAAA;AAAA;AAAA,QAGnB,cAAc;AAAA,UACZ,SAAS,OAAO,OAAO,WAAW,MAAM,YAAY;AAAA,UACpD,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,eAAe;AAAA;AAAA;AAAA,QAGnB,oBAAoB;AAAA,UAClB,SAAS,OAAO,MAAM,WAAW;AAAA,UACjC,QAAQ;AAAA,YACN,gBAAgB;AAAA,cACd,SAAS,OAAO;AAAA,cAChB,OAAO;AAAA,cACP,QAAQ,OAAM,UAAU;AAAA;AAAA,YAE1B,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,IAKvB,QAAQ,CAAC;AAAA,MAEP,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,OACN;AAAA,MAID,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,cAAc;AAAA,UACZ,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,iBAAiB;AAAA,UACf,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,eAAe;AAAA;AAAA;AAAA,IAGnB,SAAS,CAAC;AAAA,MAKR,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,aAAa;AAAA;AAAA,OAEd;AAAA,MAGD,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,aAAa;AAAA;AAAA;AAAA,IAGjB,MAAM;AAAA,MAKJ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,QAAQ;AAAA,MAKN,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,iBAAiB;AAAA,MAKf,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,YAAY;AAAA,UACV,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,UAAU;AAAA,QACV,eAAe;AAAA;AAAA,MAEjB,OAAO;AAAA;AAAA,IAET,QAAQ;AAAA,MAIN,SAAS,aAAa,kGAAkG;AAAA,MACxH,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA;AAAA,QAGV,eAAe;AAAA;AAAA;AAAA,IAGnB,UAAU;AAAA,MAIR,SAAS,aAAa,kGAAkG;AAAA,MACxH,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA;AAAA,QAGV,eAAe;AAAA;AAAA;AAAA,IAGnB,UAAU;AAAA,MAIR,SAAS,aAAa,2BAA2B;AAAA,MACjD,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA;AAAA,QAGV,eAAe;AAAA;AAAA;AAAA,IAGnB,gBAAgB;AAAA,MAGd,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,OAAO,CAAC,QAAQ;AAAA;AAAA,IAElB,OAAO;AAAA,MAIL,SAAS,aAAa,mGAAmG;AAAA,MACzH,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,WAAW;AAAA,UACT,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA;AAAA,QAGV,YAAY;AAAA,UACV,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,OAAO;AAAA,UACL,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,UAAU;AAAA,UACR,SAAS;AAAA,UACT,YAAY;AAAA;AAAA;AAAA;AAAA;AAKpB,GAAC,OAAO,QAAQ,UAAU,UAAU,QAAQ,SAAU,OAAO;AAC3D,KAAC,OAAO,QAAQ,UAAU,UAAU,gBAAgB,QAAQ,SAAU,QAAQ;AAC5E,UAAI,UAAU,QAAQ;AACpB,eAAM,UAAU,SAAS,OAAO,OAAO,QAAQ,OAAO,UAAU,OAAM,UAAU,SAAS;AAAA;AAAA;AAAA;AAI/F,SAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,QAAI,IAAI,aAAa,cAAc,IAAI,aAAa,MAAM;AACxD;AAAA;AAGF,wBAAoB,QAAQ;AAC1B,UAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC;AAAA;AAGF,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAK;AAC7C,YAAI,QAAQ,OAAO;AAEnB,YAAI,MAAM,SAAS,QAAQ;AACzB,qBAAW,MAAM;AACjB;AAAA;AAiBF,YAAI,WAAW,MAAM,QAAQ;AAC7B,YAAI,YAAY,MAAM,QAAQ;AAE9B,YAAI,YAAY,aAAa,SAAS,SAAS,mBAAmB,UAAU,SAAS,gBAAgB,OAAO,SAAS,YAAY,UAAU;AAGzI,cAAI,OAAO,SAAS,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,WAAW;AAExE,iBAAQ,gBAAe,KAAK,SAAS,CAAC,KAAK,GAAG;AAC9C,cAAI,QAAQ,cAAc;AAE1B,cAAI,CAAC,UAAU,OAAO;AACpB,sBAAU,QAAQ,CAAC;AAAA,qBACV,OAAO,UAAU,UAAU,UAAU;AAC9C,sBAAU,QAAQ,CAAC,UAAU,OAAO;AAAA,iBAC/B;AACL,sBAAU,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAM7B,eAAW,IAAI;AAAA;AAEjB,SAAM,MAAM,IAAI,QAAQ,SAAU,KAAK;AACrC,QAAI,IAAI,SAAS,cAAc;AAC7B;AAAA;AAGF,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,QAAQ,IAAI,GAAG,KAAK;AAClD,UAAI,MAAM,IAAI,QAAQ;AACtB,UAAI,QAAQ,gBAAgB,KAAK;AAEjC,UAAI,OAAO;AACT,mBAAW,MAAM;AACjB;AAAA;AAAA;AAIJ,QAAI,UAAU,OAAM,UAAU;AAE9B,QAAI,CAAC,SAAS;AACZ,UAAI,YAAY,aAAa,UAAU,OAAM,QAAQ,YAAY;AAC/D,YAAI,KAAK,QAAQ,IAAI,OAAO,YAAY,MAAM,KAAK,MAAM,KAAK,WAAW;AACzE,YAAI,WAAW,QAAQ;AACvB,eAAM,QAAQ,WAAW,cAAc,UAAU,WAAY;AAC3D,cAAI,MAAM,SAAS,eAAe;AAElC,cAAI,KAAK;AACP,gBAAI,YAAY,OAAM,UAAU,IAAI,aAAa,OAAM,UAAU,WAAW;AAAA;AAAA;AAAA;AAAA,WAI7E;AACL,UAAI,UAAU,OAAM,UAAU,YAAY,IAAI,UAAU,SAAS;AAAA;AAAA;AAGrE,MAAI,aAAa,OAAO,OAAM,UAAU,OAAO,IAAI,QAAQ,QAAQ;AASnE,MAAI,qBAAqB;AAAA,IACvB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA;AAGV,MAAI,gBAAgB,OAAO,iBAAiB,OAAO;AAQnD,uBAAqB,MAAM;AAEzB,QAAI,OAAO,KAAK,QAAQ,YAAY;AAEpC,WAAO,KAAK,QAAQ,iCAAiC,SAAU,GAAG,MAAM;AACtE,aAAO,KAAK;AAEZ,UAAI,KAAK,OAAO,KAAK;AACnB,YAAI;AAEJ,YAAI,KAAK,OAAO,KAAK;AACnB,kBAAQ,SAAS,KAAK,MAAM,IAAI;AAAA,eAC3B;AACL,kBAAQ,OAAO,KAAK,MAAM;AAAA;AAG5B,eAAO,cAAc;AAAA,aAChB;AACL,YAAI,QAAQ,mBAAmB;AAE/B,YAAI,OAAO;AACT,iBAAO;AAAA;AAIT,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAGT,SAAM,UAAU,KAAK,OAAM,UAAU;AAAA,GACpC;AAIH,MAAM,UAAU,UAAU;AAAA,EACxB,WAAW;AAAA,EACX,eAAe;AAAA,IACb,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,qBAAqB;AAAA,QACnB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA,EAI9B,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,aAAa;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,aAAa;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,YAAY;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA;AAAA,EAET,uBAAuB;AAAA,IACrB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA;AAAA,EAET,oBAAoB;AAAA,IAClB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA;AAAA,EAET,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,UAAU;AAAA,EACV,eAAe;AAAA,EACf,YAAY;AAAA;AAEd,MAAM,MAAM,IAAI,kBAAkB,8BAA8B,KAAK;AACnE,MAAI,IAAI,aAAa,WAAW;AAC9B;AAAA;AAUF,MAAI,cAAc,IAAI,OAAO,OAAO,SAAU,OAAO;AACnD,WAAO,OAAO,UAAU,YAAY,MAAM,SAAS,aAAa,MAAM,SAAS;AAAA;AAEjF,MAAI,eAAe;AAQnB,oBAAkB,QAAQ;AACxB,WAAO,YAAY,eAAe;AAAA;AAWpC,uBAAqB,OAAO,QAAQ;AAClC,aAAS,UAAU;AAEnB,aAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,UAAI,QAAQ,SAAS,KAAI;AAEzB,UAAI,CAAC,SAAS,MAAM,SAAS,MAAM,KAAI;AACrC,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAeT,8BAA4B,MAAM,OAAO;AACvC,QAAI,cAAc;AAElB,aAAS,KAAI,cAAc,KAAI,YAAY,QAAQ,MAAK;AACtD,UAAI,QAAQ,YAAY;AACxB,UAAI,UAAU,MAAM;AAEpB,UAAI,MAAM,SAAS,iBAAiB,OAAO,YAAY,UAAU;AAC/D,YAAI,KAAK,KAAK,UAAU;AACtB;AAAA,mBACS,MAAM,KAAK,UAAU;AAC9B;AAEA,cAAI,gBAAgB,GAAG;AACrB,mBAAO;AAAA;AAAA;AAAA;AAAA;AAMf,WAAO;AAAA;AAWT,oBAAkB,OAAO,OAAO;AAC9B,QAAI,UAAU,MAAM;AAEpB,QAAI,CAAC,SAAS;AACZ,YAAM,QAAQ,UAAU;AAAA,eACf,CAAC,MAAM,QAAQ,UAAU;AAClC,YAAM,QAAQ,UAAU,CAAC;AAAA;AAG3B,YAAQ,KAAK;AAAA;AAGf,SAAO,eAAe,YAAY,UAAS;AACzC,QAAI,aAAa,YAAY;AAE7B,QAAI,WAAW,SAAS,aAAa,WAAW,YAAY,YAAY;AAEtE,UAAI,iBAAiB;AAErB,UAAI,YAAY,CAAC,uBAAuB,mBAAmB,SAAS,GAAG,YAAY,KAAK;AAEtF,wBAAgB;AAEhB,YAAI,gBAAgB,mBAAmB,QAAQ;AAE/C,YAAI,kBAAkB,IAAI;AACxB;AAAA;AAIF,eAAO,eAAe,eAAe,gBAAgB;AACnD,cAAI,IAAI,SAAS;AAEjB,cAAI,EAAE,SAAS,YAAY;AACzB,qBAAS,GAAG;AACZ,2BAAe,KAAK,EAAE;AAAA;AAAA;AAI1B,uBAAe,gBAAgB;AAAA;AAGjC,UAAI,YAAY,CAAC,eAAe,sBAAsB,SAAS,GAAG,YAAY,KAAK;AACjF;AAEA,iBAAS,SAAS,IAAI;AAEtB,YAAI,eAAe,SAAS,GAAG;AAC7B,cAAI,cAAc,mBAAmB,QAAQ;AAE7C,cAAI,gBAAgB,IAAI;AACtB;AAAA;AAIF,mBAAS,IAAI,cAAc,IAAI,aAAa,KAAK;AAC/C,gBAAI,WAAW,YAAY;AAE3B,gBAAI,SAAS,SAAS,cAAc,eAAe,QAAQ,SAAS,YAAY,GAAG;AACjF,uBAAS,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUjC,MAAM,UAAU,MAAM;AAAA,EACpB,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,YAAY,CAAC;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,KACP;AAAA,EACH,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,YAAY;AAAA;AAAA,EAEd,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA;AAAA,EAGnB,YAAY;AAAA,EAEZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAAA;AAIjB,AAAC,UAAU,QAAO;AAChB,MAAI,iBAAiB,OAAM,UAAU,WAAW;AAEhD,MAAI,yBAAyB,eAAe,QAAQ;AACpD,MAAI,sBAAsB,eAAe,OAAO;AAChD,MAAI,iCAAiC,oBAAoB,OAAO;AAChE,MAAI,uBAAuB,oBAAoB,QAAQ;AAavD,0BAAwB,UAAU,KAAK;AACrC,QAAI,CAAC,OAAM,UAAU,WAAW;AAC9B,aAAO;AAAA;AAGT,WAAO;AAAA,MACL,SAAS,OAAO,SAAS,MAAM,WAAW;AAAA,MAC1C,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,wBAAwB;AAAA,UACtB,SAAS;AAAA,UACT,OAAO;AAAA;AAAA,QAET,iBAAiB;AAAA,UACf,SAAS;AAAA,UACT,OAAO;AAAA;AAAA;AAAA;AAAA;AAMf,SAAM,UAAU,WAAW,qBAAqB;AAAA,IAIhD,eAAe,OAAO,0HAA0H;AAAA,IAEhJ,eAAe,QAAQ,yCAAyC;AAAA,IAChE,eAAe,OAAO,QAAQ;AAAA,IAC9B,eAAe,YAAY,oBAAoB;AAAA,IAC/C,eAAe,WAAW,6CAA6C;AAAA,IACvE,eAAe,OAAO,QAAQ;AAAA,IAC9B;AAAA,IAAgB,OAAO;AASvB,0BAAwB,SAAS,UAAU;AACzC,WAAO,QAAQ,SAAS,gBAAgB,MAAM,UAAU;AAAA;AAY1D,6BAA2B,MAAM,SAAS,UAAU;AAClD,QAAI,MAAM;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA;AAEF,WAAM,MAAM,IAAI,mBAAmB;AACnC,QAAI,SAAS,OAAM,SAAS,IAAI,MAAM,IAAI;AAC1C,WAAM,MAAM,IAAI,kBAAkB;AAClC,WAAO,IAAI;AAAA;AAUb,2CAAyC,YAAY;AACnD,QAAI,cAAc;AAClB,gBAAY,+BAA+B;AAG3C,QAAI,SAAS,OAAM,SAAS,YAAY;AAExC,QAAI,OAAO,WAAW,GAAG;AASvB,UAAI,OAAO,CAAC,GAAG;AACf,WAAK,KAAK,MAAM,MAAM,kBAAkB,OAAO,IAAI,OAAM,UAAU,YAAY;AAC/E,aAAO,OAAO,MAAM,QAAQ;AAAA;AAG9B,WAAO,IAAI,OAAM,MAAM,iBAAiB,QAAQ,oBAAoB,OAAO;AAAA;AAqB7E,4BAA0B,MAAM,SAAS,UAAU;AAKjD,QAAI,UAAU,OAAM,SAAS,MAAM;AAAA,MACjC,iBAAiB;AAAA,QACf,SAAS,OAAO;AAAA,QAChB,YAAY;AAAA;AAAA;AAKhB,QAAI,qBAAqB;AAGzB,QAAI,iBAAiB;AAErB,QAAI,eAAe,QAAQ,IAAI,SAAU,OAAO;AAC9C,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;AAAA,aACF;AACL,YAAI,0BAA0B,MAAM;AACpC,YAAI;AAEJ,eAAO,KAAK,QAAQ,cAAc,eAAe,sBAAsB,eAAe,IAAI;AAAA;AAI1F,uBAAe,eAAe;AAC9B,eAAO;AAAA;AAAA,OAER,KAAK;AAGR,QAAI,iBAAiB,kBAAkB,cAAc,SAAS;AAE9D,QAAI,eAAe,OAAO,KAAK;AAC/B,yBAAqB;AAOrB,wBAAoB,QAAQ;AAC1B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,sBAAsB,aAAa,QAAQ;AAC7C;AAAA;AAGF,YAAI,QAAQ,OAAO;AAEnB,YAAI,OAAO,UAAU,YAAY,OAAO,MAAM,YAAY,UAAU;AAClE,cAAI,cAAc,aAAa;AAC/B,cAAI,IAAI,OAAO,UAAU,WAAW,QAEpC,MAAM;AACN,cAAI,QAAQ,EAAE,QAAQ;AAEtB,cAAI,UAAU,IAAI;AAChB,cAAE;AACF,gBAAI,SAAS,EAAE,UAAU,GAAG;AAC5B,gBAAI,SAAS,gCAAgC,eAAe;AAC5D,gBAAI,QAAQ,EAAE,UAAU,QAAQ,YAAY;AAC5C,gBAAI,cAAc;AAElB,gBAAI,QAAQ;AACV,0BAAY,KAAK;AAAA;AAGnB,wBAAY,KAAK;AAEjB,gBAAI,OAAO;AACT,kBAAI,cAAc,CAAC;AACnB,yBAAW;AACX,0BAAY,KAAK,MAAM,aAAa;AAAA;AAGtC,gBAAI,OAAO,UAAU,UAAU;AAC7B,qBAAO,OAAO,MAAM,QAAQ,CAAC,GAAG,GAAG,OAAO;AAC1C,mBAAK,YAAY,SAAS;AAAA,mBACrB;AACL,oBAAM,UAAU;AAAA;AAAA;AAAA,eAGf;AACL,cAAI,UAAU,MAAM;AAEpB,cAAI,MAAM,QAAQ,UAAU;AAC1B,uBAAW;AAAA,iBACN;AACL,uBAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAMpB,eAAW;AACX,WAAO,IAAI,OAAM,MAAM,UAAU,gBAAgB,cAAc,UAAU;AAAA;AAS3E,MAAI,qBAAqB;AAAA,IACvB,cAAc;AAAA,IACd,MAAM;AAAA,IACN,cAAc;AAAA,IACd,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA;AAET,SAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,QAAI,CAAE,KAAI,YAAY,qBAAqB;AACzC;AAAA;AAUF,iCAA6B,QAAQ;AACnC,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAK;AAC7C,YAAI,QAAQ,OAAO;AAEnB,YAAI,OAAO,UAAU,UAAU;AAC7B;AAAA;AAGF,YAAI,UAAU,MAAM;AAEpB,YAAI,CAAC,MAAM,QAAQ,UAAU;AAC3B,cAAI,OAAO,YAAY,UAAU;AAC/B,gCAAoB,CAAC;AAAA;AAGvB;AAAA;AAGF,YAAI,MAAM,SAAS,mBAAmB;AAepC,cAAI,WAAW,QAAQ;AAEvB,cAAI,QAAQ,WAAW,KAAK,OAAO,aAAa,YAAY,SAAS,SAAS,iBAAiB;AAE7F,gBAAI,OAAO,cAAc;AACzB,gBAAI,QAAQ,SAAS;AACrB,gBAAI,WAAW,MAAM,QAAQ,SAAS,MAAM,KAAK;AACjD,gBAAI,UAAU,OAAM,UAAU;AAE9B,gBAAI,CAAC,SAAS;AAEZ;AAAA;AAGF,oBAAQ,KAAK,iBAAiB,MAAM,SAAS;AAAA;AAAA,eAE1C;AACL,8BAAoB;AAAA;AAAA;AAAA;AAK1B,wBAAoB,IAAI;AAAA;AAS1B,yBAAuB,OAAO;AAC5B,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO;AAAA,eACE,MAAM,QAAQ,QAAQ;AAC/B,aAAO,MAAM,IAAI,eAAe,KAAK;AAAA,WAChC;AACL,aAAO,cAAc,MAAM;AAAA;AAAA;AAAA,GAG9B;AAIH,AAAC,UAAU,QAAO;AAChB,SAAM,UAAU,aAAa,OAAM,UAAU,OAAO,cAAc;AAAA,IAChE,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,QAAQ;AAAA;AAAA,IAGV,WAAW;AAAA;AAGb,SAAM,UAAU,WAAW,QAAQ,KAAK,sDACxC,4FACA;AAEA,SAAO,OAAM,UAAU,WAAW;AAClC,SAAO,OAAM,UAAU,WAAW;AAElC,MAAI,aAAa,OAAM,UAAU,OAAO,cAAc;AACtD,SAAO,WAAW;AAClB,SAAM,UAAU,WAAW,cAAc,SAAS;AAClD,SAAM,UAAU,aAAa,cAAc,YAAY;AAAA,IACrD,aAAa;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,OAAO;AAAA;AAAA,QAET,YAAY;AAAA;AAAA;AAAA,IAGhB,oBAAoB;AAAA,MAElB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,WAAW;AAAA,UACT,SAAS;AAAA,UAET,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKhB,SAAM,UAAU,KAAK,OAAM,UAAU;AAAA,GACpC;AAIH,AAAC,UAAU,QAAO;AAChB,SAAM,UAAU,aAAa,cAAc,qBAAqB;AAAA,IAC9D,mBAAmB;AAAA,MACjB,SAAS,OAAO,cAAc,OAAM,UAAU,WAAW,qBAAqB,QAAQ;AAAA,MACtF,YAAY;AAAA,MACZ,OAAO,CAAC,qBAAqB,UAAU,YAAY;AAAA;AAAA;AAGvD,SAAM,UAAU,aAAa,cAAc,YAAY;AAAA,IACrD,UAAU;AAAA,MACR,SAAS,OAAO,cAAc,OAAM,UAAU,WAAW,YAAY;AAAA,MACrE,YAAY;AAAA,MACZ,OAAO,CAAC,YAAY;AAAA;AAAA;AAGxB,SAAM,UAAU,aAAa,cAAc,YAAY;AAAA,IACrD,oBAAoB,CAAC;AAAA,MAGnB,SAAS;AAAA,MACT,OAAO;AAAA,OACN;AAAA,MAED,SAAS;AAAA,MACT,OAAO;AAAA;AAAA;AAWX,kBAAgB,QAAQ,OAAO;AAC7B,WAAO,OAAO,OAAO,QAAQ,SAAS,WAAY;AAChD,aAAO,yDAAyD;AAAA,QAC9D;AAAA;AAGN,SAAM,UAAU,aAAa,cAAc,WAAW;AAAA,IACpD,WAAW;AAAA,MAET,SAAS,OAAO,4GAA4G;AAAA,MAC5H,YAAY;AAAA,MACZ,QAAQ,OAAM,UAAU;AAAA;AAAA,IAE1B,WAAW;AAAA,MAET,SAAS,OAAO,mEAAmE;AAAA,MACnF,YAAY;AAAA,MACZ,QAAQ,OAAM,UAAU;AAAA;AAAA;AAG5B,SAAM,UAAU,WAAW,WAAW,QAAQ;AAAA,IAC5C,SAAS;AAAA,IACT,OAAO;AAAA,KACN;AAAA,IACD,SAAS;AAAA,IACT,OAAO;AAAA,KACN;AAAA,IACD,SAAS;AAAA,IACT,OAAO,CAAC,QAAQ;AAAA,KACf;AAAA,IACD,SAAS;AAAA,IACT,OAAO;AAAA;AAET,SAAM,UAAU,aAAa,cAAc,YAAY;AAAA,IACrD,UAAU;AAAA,MACR,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,SAAS;AAAA,MACP,SAAS;AAAA,MACT,OAAO;AAAA;AAAA;AAGX,SAAM,UAAU,aAAa,cAAc,eAAe;AAAA,IACxD,mBAAmB;AAAA,MACjB,SAAS,OAAO,gBAAgB;AAAA,MAChC,YAAY;AAAA;AAAA,IAEd,oBAAoB;AAAA,MAClB,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,OAAO;AAAA,MAEL,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA;AAAA;AAIX,MAAI,uBAAuB,CAAC,YAAY,qBAAqB,UAAU,mBAAmB;AAE1F,WAAS,IAAI,GAAG,IAAI,qBAAqB,QAAQ,KAAK;AACpD,QAAI,QAAQ,qBAAqB;AACjC,QAAI,QAAQ,OAAM,UAAU,WAAW;AAEvC,QAAI,OAAM,KAAK,KAAK,WAAW,UAAU;AACvC,cAAQ,OAAM,UAAU,WAAW,SAAS;AAAA,QAC1C,SAAS;AAAA;AAAA;AAKb,QAAI,SAAS,MAAM,UAAU;AAC7B,UAAM,SAAS;AACf,WAAO,sBAAsB;AAAA;AAAA,GAE9B;AAIH,AAAC,UAAU,QAAO;AAChB,MAAI,aAAa,OAAM,KAAK,MAAM,OAAM,UAAU;AAClD,MAAI,QAAQ,+CAA+C;AAC3D,MAAI,SAAS,+CAA+C;AAC5D,MAAI,SAAS,uCAAuC;AAMpD,cAAY,QAAQ,OAAO;AACzB,aAAS,OAAO,QAAQ,QAAQ,WAAY;AAC1C,aAAO;AAAA,OACN,QAAQ,aAAa,WAAY;AAClC,aAAO;AAAA,OACN,QAAQ,aAAa,WAAY;AAClC,aAAO;AAAA;AAET,WAAO,OAAO,QAAQ;AAAA;AAGxB,WAAS,GAAG,QAAQ;AACpB,SAAM,UAAU,MAAM,OAAM,UAAU,OAAO,UAAU;AACvD,SAAM,UAAU,IAAI,IAAI,UAAU,GAAG,wIAAwI;AAC7K,SAAM,UAAU,IAAI,IAAI,OAAO,OAAO,UAAU;AAChD,SAAM,UAAU,IAAI,IAAI,OAAO,cAAc,UAAU;AACvD,SAAM,UAAU,IAAI,IAAI,OAAO,OAAO,OAAO,gBAAgB;AAC7D,SAAM,UAAU,IAAI,IAAI,OAAO,aAAa,WAAW;AACvD,SAAM,UAAU,aAAa,UAAU,aAAa;AAAA,IAClD,UAAU;AAAA,MACR,SAAS,GAAG,WAAW;AAAA,MACvB,QAAQ,OAAM,UAAU;AAAA;AAAA,KAEzB,OAAM,UAAU,IAAI;AACvB,SAAM,UAAU,aAAa,UAAU,gBAAgB;AAAA,IACrD,UAAU;AAAA,MAER,SAAS,GAAG,YAAY;AAAA,MACxB,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,sBAAsB;AAAA,UACpB,SAAS;AAAA,UACT,OAAO;AAAA;AAAA,QAET,MAAM,OAAM,UAAU;AAAA;AAAA;AAAA,KAGzB,OAAM,UAAU,IAAI;AAEvB,MAAI,iBAAiB,SAAU,OAAO;AACpC,QAAI,CAAC,OAAO;AACV,aAAO;AAAA;AAGT,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO;AAAA;AAGT,QAAI,OAAO,MAAM,YAAY,UAAU;AACrC,aAAO,MAAM;AAAA;AAGf,WAAO,MAAM,QAAQ,IAAI,gBAAgB,KAAK;AAAA;AAGhD,MAAI,aAAa,SAAU,QAAQ;AACjC,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,QAAQ,OAAO;AACnB,UAAI,iBAAiB;AAErB,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,MAAM,SAAS,SAAS,MAAM,QAAQ,MAAM,MAAM,QAAQ,GAAG,SAAS,OAAO;AAE/E,cAAI,MAAM,QAAQ,GAAG,QAAQ,GAAG,YAAY,MAAM;AAEhD,gBAAI,WAAW,SAAS,KAAK,WAAW,WAAW,SAAS,GAAG,YAAY,eAAe,MAAM,QAAQ,GAAG,QAAQ,KAAK;AAEtH,yBAAW;AAAA;AAAA,iBAER;AACL,gBAAI,MAAM,QAAQ,MAAM,QAAQ,SAAS,GAAG,YAAY;AAAM;AAAA,iBAAO;AAEnE,yBAAW,KAAK;AAAA,gBACd,SAAS,eAAe,MAAM,QAAQ,GAAG,QAAQ;AAAA,gBACjD,cAAc;AAAA;AAAA;AAAA;AAAA,mBAIX,WAAW,SAAS,KAAK,MAAM,SAAS,iBAAiB,MAAM,YAAY,KAAK;AAEzF,qBAAW,WAAW,SAAS,GAAG;AAAA,mBACzB,WAAW,SAAS,KAAK,WAAW,WAAW,SAAS,GAAG,eAAe,KAAK,MAAM,SAAS,iBAAiB,MAAM,YAAY,KAAK;AAE/I,qBAAW,WAAW,SAAS,GAAG;AAAA,eAC7B;AACL,2BAAiB;AAAA;AAAA;AAIrB,UAAI,kBAAkB,OAAO,UAAU,UAAU;AAC/C,YAAI,WAAW,SAAS,KAAK,WAAW,WAAW,SAAS,GAAG,iBAAiB,GAAG;AAGjF,cAAI,YAAY,eAAe;AAE/B,cAAI,IAAI,OAAO,SAAS,KAAM,QAAO,OAAO,IAAI,OAAO,YAAY,OAAO,IAAI,GAAG,SAAS,eAAe;AACvG,yBAAa,eAAe,OAAO,IAAI;AACvC,mBAAO,OAAO,IAAI,GAAG;AAAA;AAGvB,cAAI,IAAI,KAAM,QAAO,OAAO,IAAI,OAAO,YAAY,OAAO,IAAI,GAAG,SAAS,eAAe;AACvF,wBAAY,eAAe,OAAO,IAAI,MAAM;AAC5C,mBAAO,OAAO,IAAI,GAAG;AACrB;AAAA;AAGF,iBAAO,KAAK,IAAI,OAAM,MAAM,cAAc,WAAW,MAAM;AAAA;AAAA;AAI/D,UAAI,MAAM,WAAW,OAAO,MAAM,YAAY,UAAU;AACtD,mBAAW,MAAM;AAAA;AAAA;AAAA;AAKvB,SAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,QAAI,IAAI,aAAa,SAAS,IAAI,aAAa,OAAO;AACpD;AAAA;AAGF,eAAW,IAAI;AAAA;AAAA,GAEhB;AAIH,AAAC,UAAU,QAAO;AAChB,SAAM,UAAU,OAAO;AAAA,IACrB,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AASF,MAAI,WAAW;AAAA,IACb,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,QAAQ;AAAA;AAGV,SAAO,KAAK,UAAU,QAAQ,SAAU,MAAM;AAC5C,QAAI,SAAS,SAAS;AACtB,QAAI,QAAQ;AAEZ,QAAI,CAAC,QAAQ,KAAK,OAAO;AAEvB,YAAM,KAAK,MAAM,KAAK,MAAM;AAAA;AAG9B,QAAI,SAAS,QAAQ;AACnB,YAAM,KAAK;AAAA;AAGb,WAAM,UAAU,KAAK,QAAQ;AAAA,MAC3B,SAAS,OAAO,UAAU,SAAS,kCAAkC;AAAA,MACrE;AAAA,MACA,QAAQ;AAAA,QACN,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,UAAU;AAAA,UACR,SAAS;AAAA,UACT,OAAO,MAAM,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAMhC,SAAO,eAAe,OAAM,UAAU,MAAM,YAAY;AAAA,IACtD,OAAO;AAAA;AAAA,GAER;AAIH,MAAM,UAAU,MAAM;AAAA,EAUpB,WAAW;AAAA,EAKX,WAAW;AAAA,EACX,YAAY;AAAA,EAKZ,UAAU;AAAA,EAOV,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MAON,aAAa;AAAA;AAAA;AAAA,EAiBjB,SAAS;AAAA,EAYT,eAAe;AAAA;AAIjB,MAAM,UAAU,KAAK,MAAM,UAAU,OAAO,SAAS;AAAA,EACnD,UAAU;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA;AAAA,EAEV,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EACA,YAAY;AAAA,EACZ,WAAW;AAAA;AAEb,MAAM,UAAU,aAAa,MAAM,UAAU;AAAA,EAC3C,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA;AAGZ,OAAO,MAAM,UAAU,GAAG;AAG1B,AAAC,UAAU,QAAO;AAQhB,0BAAwB,UAAU,OAAO;AACvC,WAAO,QAAQ,SAAS,gBAAgB,QAAQ;AAAA;AAGlD,SAAO,iBAAiB,OAAM,UAAU,uBAAuB,IAAI;AAAA,IACjE,mBAAmB;AAAA,MAYjB,OAAO,SAAU,KAAK,UAAU,oBAAoB,eAAe;AACjE,YAAI,IAAI,aAAa,UAAU;AAC7B;AAAA;AAGF,YAAI,aAAa,IAAI,aAAa;AAClC,YAAI,OAAO,IAAI,KAAK,QAAQ,oBAAoB,SAAU,OAAO;AAC/D,cAAI,OAAO,kBAAkB,cAAc,CAAC,cAAc,QAAQ;AAChE,mBAAO;AAAA;AAGT,cAAI,IAAI,WAAW;AACnB,cAAI;AAEJ,iBAAO,IAAI,KAAK,QAAQ,cAAc,eAAe,UAAU,QAAQ,IAAI;AACzE,cAAE;AAAA;AAIJ,qBAAW,KAAK;AAChB,iBAAO;AAAA;AAGT,YAAI,UAAU,OAAM,UAAU;AAAA;AAAA;AAAA,IAGlC,sBAAsB;AAAA,MAOpB,OAAO,SAAU,KAAK,UAAU;AAC9B,YAAI,IAAI,aAAa,YAAY,CAAC,IAAI,YAAY;AAChD;AAAA;AAIF,YAAI,UAAU,OAAM,UAAU;AAC9B,YAAI,IAAI;AACR,YAAI,OAAO,OAAO,KAAK,IAAI;AAE3B,4BAAoB,QAAQ;AAC1B,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAEtC,gBAAI,KAAK,KAAK,QAAQ;AACpB;AAAA;AAGF,gBAAI,QAAQ,OAAO;AAEnB,gBAAI,OAAO,UAAU,YAAY,MAAM,WAAW,OAAO,MAAM,YAAY,UAAU;AACnF,kBAAI,IAAI,KAAK;AACb,kBAAI,IAAI,IAAI,WAAW;AACvB,kBAAI,IAAI,OAAO,UAAU,WAAW,QAAQ,MAAM;AAClD,kBAAI,cAAc,eAAe,UAAU;AAC3C,kBAAI,QAAQ,EAAE,QAAQ;AAEtB,kBAAI,QAAQ,IAAI;AACd,kBAAE;AACF,oBAAI,SAAS,EAAE,UAAU,GAAG;AAC5B,oBAAI,SAAS,IAAI,OAAM,MAAM,UAAU,OAAM,SAAS,GAAG,IAAI,UAAU,cAAc,UAAU;AAC/F,oBAAI,QAAQ,EAAE,UAAU,QAAQ,YAAY;AAC5C,oBAAI,cAAc;AAElB,oBAAI,QAAQ;AACV,8BAAY,KAAK,MAAM,aAAa,WAAW,CAAC;AAAA;AAGlD,4BAAY,KAAK;AAEjB,oBAAI,OAAO;AACT,8BAAY,KAAK,MAAM,aAAa,WAAW,CAAC;AAAA;AAGlD,oBAAI,OAAO,UAAU,UAAU;AAC7B,yBAAO,OAAO,MAAM,QAAQ,CAAC,GAAG,GAAG,OAAO;AAAA,uBACrC;AACL,wBAAM,UAAU;AAAA;AAAA;AAAA,uBAGX,MAAM,SAEf;AACE,yBAAW,MAAM;AAAA;AAAA;AAIvB,iBAAO;AAAA;AAGT,mBAAW,IAAI;AAAA;AAAA;AAAA;AAAA,GAIpB;AAIH,AAAC,UAAU,QAAO;AAChB,SAAM,UAAU,aAAa;AAAA,IAC3B,WAAW;AAAA,IACX,aAAa;AAAA,MACX,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,IAET,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,SAAS;AAAA,MACP,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,YAAY;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,aAAa;AAAA,QACb,UAAU;AAAA;AAAA;AAAA,IAGd,eAAe;AAAA,IACf,YAAY;AAAA;AAEd,SAAM,MAAM,IAAI,mBAAmB,SAAU,KAAK;AAChD,QAAI,oBAAoB;AACxB,WAAM,UAAU,qBAAqB,kBAAkB,KAAK,cAAc;AAAA;AAE5E,SAAM,MAAM,IAAI,kBAAkB,SAAU,KAAK;AAC/C,WAAM,UAAU,qBAAqB,qBAAqB,KAAK;AAAA;AAEjE,SAAM,UAAU,MAAM,OAAM,UAAU;AAAA,GACrC;AAKH,MAAM,UAAU,OAAO;AAAA,EACrB,YAAY;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA;AAAA,EAEV,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,EACV,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA;AAAA;AAGX,MAAM,UAAU,cAAc,MAAM,UAAU;AAW9C,MAAM,UAAU,OAAO,MAAM,UAAU,OAAO,OAAO;AAAA,EACnD,WAAW,CAAC,oBAAoB;AAAA,IAC9B,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA;AAAA,EAInB,YAAY;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,MAEN,YAAY;AAAA;AAAA;AAAA,EAGhB,YAAY;AAAA,EACZ,YAAY;AAAA;AAEd,MAAM,UAAU,aAAa,QAAQ,YAAY;AAAA,EAC/C,YAAY;AAAA,IACZ;AAAA,MACE,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,eAAe;AAAA;AAAA;AAAA,IAGnB;AAAA;AAAA,EACA,eAAe;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA;AAAA;AAKX,MAAM,UAAU,WAAW;AAAA,EACzB,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,kBAAkB;AAAA,IAChB,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,UAAU;AAAA,IACR,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,YAAY;AAAA;AAAA;AAAA,EAGhB,YAAY;AAAA,EAEZ,WAAW;AAAA,EACX,YAAY;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,YAAY;AAAA,EACZ,eAAe;AAAA;AAIjB,MAAM,UAAU,aAAa,MAAM,UAAU,OAAO,KAAK;AAAA,EACvD,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,WAAW;AAAA,EACX,YAAY;AAAA;AAEd,OAAO,MAAM,UAAU,WAAW;AAClC,MAAM,UAAU,OAAO,MAAM,UAAU;AAIvC,MAAM,UAAU,QAAQ;AAAA,EACtB,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU,CAAC;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,KACP;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EACA,aAAa;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,SAAS;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,iBAAiB;AAAA,IACf,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,WAAW;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAIT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,6BAA6B;AAAA,IAC3B,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAGT,YAAY;AAAA,EACZ,eAAe;AAAA;AAIjB,MAAM,UAAU,SAAS;AAAA,EACvB,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA;AAAA,EAEV,wBAAwB;AAAA,IACtB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,iBAAiB;AAAA,QAEf,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACN,eAAe;AAAA,YACb,SAAS;AAAA,YACT,YAAY;AAAA;AAAA,UAEd,qBAAqB;AAAA,YACnB,SAAS;AAAA,YACT,OAAO;AAAA;AAAA,UAET,MAAM;AAAA;AAAA;AAAA,MAGV,UAAU;AAAA;AAAA;AAAA,EAGd,wBAAwB;AAAA,IACtB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA;AAAA,EAET,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,YAAY;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,aAAa;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO,CAAC,cAAc;AAAA,IACtB,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA;AAAA,EAGnB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAAA;AAEjB,MAAM,UAAU,OAAO,wBAAwB,OAAO,iBAAiB,OAAO,OAAO,MAAM,UAAU;AACrG,MAAM,UAAU,KAAK,MAAM,UAAU;AAGrC,MAAM,UAAU,SAAS,MAAM,UAAU,OAAO,SAAS;AAAA,EACvD,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAGV,cAAc;AAAA,EACd,WAAW;AAAA,EACX,YAAY;AAAA;AAEd,MAAM,UAAU,aAAa,UAAU,cAAc;AAAA,EACnD,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAGV,eAAe;AAAA,EACf,SAAS;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA;AAAA;AAIX,OAAO,MAAM,UAAU,OAAO;AAG9B,AAAC,UAAU,QAAO;AAChB,SAAM,UAAU,OAAO,OAAM,UAAU,OAAO,OAAO;AAAA,IAEnD,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA;AAAA;AAGZ,SAAM,UAAU,aAAa,QAAQ,UAAU;AAAA,IAE7C,eAAe;AAAA,MAEb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,UAAU;AAAA;AAAA;AAAA;AAIhB,SAAO,OAAM,UAAU,KAAK;AAC5B,MAAI,WAAW;AACf,MAAI,WAAW,CAAC,4CAA4C;AAAA,IAC1D,SAAS;AAAA,IACT,YAAY;AAAA;AAEd,SAAM,UAAU,aAAa,QAAQ,YAAY;AAAA,IAE/C,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,YAAY;AAAA;AAAA;AAAA,IAIhB,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,YAAY,CAAC,mBAAmB;AAAA,UAC9B,SAAS;AAAA,UACT,YAAY;AAAA;AAAA,QAEd,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,aAAa,OAAM,UAAU,KAAK;AAAA;AAAA;AAAA;AAIxC,SAAO,OAAM,UAAU,KAAK;AAC5B,SAAO,OAAM,UAAU,KAAK;AAG5B,SAAM,UAAU,aAAa,QAAQ,eAAe;AAAA,IAClD,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA;AAAA;AAAA,GAGX;AAIH,MAAM,UAAU,OAAO,MAAM,UAAU,OAAO,OAAO;AAAA,EACnD,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,EAEd,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA;AAAA;AAAA,EAKZ,OAAO;AAAA,EAQP,YAAY;AAAA,IAEV,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,UAAU;AAAA,QACR,SAAS;AAAA,QACT,OAAO;AAAA;AAAA,MAET,eAAe;AAAA,MACf,YAAY;AAAA;AAAA;AAAA,EAGhB,YAAY;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,YAAY;AAAA;AAAA;AAAA;AAIlB,MAAM,UAAU,aAAa,QAAQ,UAAU;AAAA,EAC7C,WAAW,CAAC,qHAAqH;AAAA,IAC/H,SAAS;AAAA,IACT,YAAY;AAAA;AAAA;AAGhB,MAAM,UAAU,aAAa,QAAQ,aAAa;AAAA,EAEhD,YAAY;AAAA;AAEd,MAAM,UAAU,aAAa,QAAQ,YAAY;AAAA,EAC/C,mBAAmB;AAAA,IACjB,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,eAAe;AAAA,IACb,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,aAAa;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,WAAW;AAAA,EACX,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,EAET,YAAY;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA;AAAA;AAGhB,MAAM,UAAU,KAAK,UAAU,OAAO,OAAO,MAAM,UAAU;AAG7D,AAAC,UAAU,QAAO;AAChB,MAAI,OAAO;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA;AAGd,MAAI,SAAS;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA;AAEd,MAAI,SAAS;AAAA,IACX,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,OAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA;AAAA,IAEV,UAAU;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA;AAAA,IAEV,iBAAiB;AAAA,IAEjB,QAAQ;AAAA,IAER,aAAa;AAAA,IACb,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,IAEd,WAAW;AAAA,IACX,SAAS,CAAC,s5CAAs5C;AAAA,MAC95C,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,eAAe;AAAA;AAAA;AAAA,IAGnB,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,MAEZ;AAAA;AAAA,IACA,UAAU;AAAA,IACV,eAAe;AAAA;AAEjB,SAAO,mBAAmB;AAAA,IACxB,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,MACN,aAAa;AAAA,QACX,SAAS;AAAA,QACT,OAAO;AAAA;AAAA,MAET,MAAM;AAAA;AAAA;AAGV,SAAO,UAAU;AAAA,IACf,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,YAAY;AAAA,MACZ,MAAM;AAAA;AAAA;AAGV,SAAM,UAAU,SAAS;AAAA,IACvB,sBAAsB;AAAA,MACpB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA;AAAA;AAAA,IAGV,wBAAwB;AAAA,MACtB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,MAAM;AAAA;AAAA;AAAA,IAGV,aAAa;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,WAAW;AAAA,QACX,MAAM;AAAA;AAAA;AAAA,IAKV,wBAAwB;AAAA,MACtB,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,YAAY;AAAA,UACV,SAAS;AAAA,UACT,QAAQ;AAAA,YACN,iBAAiB,OAAO;AAAA;AAAA;AAAA,QAG5B,MAAM;AAAA;AAAA;AAAA,IAMV,YAAY;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,QACN,iBAAiB,OAAO;AAAA,QACxB,WAAW,OAAO;AAAA,QAClB,eAAe;AAAA;AAAA;AAAA,IAGnB,QAAQ,OAAO;AAAA,IACf,UAAU,OAAO;AAAA,IACjB,WAAW;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA;AAAA,IAEV,iBAAiB,OAAO;AAAA,IACxB,eAAe;AAAA;AAAA,GAEhB;AAIH,AAAC,UAAU,QAAO;AAChB,MAAI,aAAa,OAAM,KAAK,MAAM,OAAM,UAAU;AAClD,SAAM,UAAU,MAAM,OAAM,UAAU,OAAO,OAAO;AAEpD,SAAO,OAAM,UAAU,IAAI;AAC3B,SAAO,OAAM,UAAU,IAAI;AAI3B,MAAI,MAAM,OAAM,UAAU,IAAI;AAC9B,MAAI,UAAU,OAAO,qBAAqB,SAAS,QAAQ,IAAI,QAAQ,SAAS,KAAK,IAAI,QAAQ;AACjG,MAAI,aAAa;AAAA,GAChB;AAIH,MAAM,UAAU,OAAO;AAAA,EACrB,WAAW,CAAC,kBAAkB;AAAA,IAC5B,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,UAAU;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA;AAAA,EAEV,WAAW,CAAC;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,YAAY;AAAA;AAAA,KAEb;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA,KAEhB;AAAA,EACH,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,eAAe;AAAA;AAGjB,IAAO,gBAAQ;;;ACjiIf;AAIA,IAAI,QAAQ;AAAA,EACV,OAAO;AAAA,IACL,iBAAiB;AAAA,IACjB,OAAO;AAAA;AAAA,EAET,QAAQ,CAAC;AAAA,IACP,OAAO,CAAC,WAAW,UAAU,WAAW,SAAS;AAAA,IACjD,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,SAAS;AAAA;AAAA,KAEV;AAAA,IACD,OAAO,CAAC,OAAO,YAAY;AAAA,IAC3B,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,YAAY;AAAA,IACpB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,UAAU,YAAY;AAAA,IAC9B,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,WAAW,UAAU,UAAU,OAAO,cAAc,WAAW,WAAW,aAAa,QAAQ,aAAa,SAAS,WAAW,eAAe;AAAA,IACvJ,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,oBAAoB;AAAA;AAAA,KAErB;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,oBAAoB;AAAA;AAAA,KAErB;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,WAAW;AAAA;AAAA,KAEZ;AAAA,IACD,OAAO,CAAC,aAAa;AAAA,IACrB,OAAO;AAAA,MACL,YAAY;AAAA;AAAA,KAEb;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA;AAAA;AAKb,IAAO,sBAAQ;;;AFrEf,mBAA0B;AAE1B,IAAI,eAAe;AAAA,EAEjB,OAAO;AAAA,EACP,OAAO;AAAA;AAGT,yBAAyB,KAAK,KAAK,OAAO;AACxC,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA;AAAA,SAEP;AACL,QAAI,OAAO;AAAA;AAGb,SAAO;AAAA;AAGT,oBAAoB;AAClB,aAAW,OAAO,UAAU,SAAU,QAAQ;AAC5C,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,SAAS,UAAU;AAEvB,eAAS,OAAO,QAAQ;AACtB,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,MAAM;AACrD,iBAAO,OAAO,OAAO;AAAA;AAAA;AAAA;AAK3B,WAAO;AAAA;AAGT,SAAO,SAAS,MAAM,MAAM;AAAA;AAG9B,IAAI,YAAY;AAEhB,IAAI,sBAAsB,SAAU,MAAM;AACxC,MAAI,KAAK,WAAW,GAAG;AACrB,SAAK,KAAK;AAAA,MACR,OAAO,CAAC;AAAA,MACR,SAAS;AAAA,MACT,OAAO;AAAA;AAAA,aAEA,KAAK,WAAW,KAAK,KAAK,GAAG,YAAY,IAAI;AACtD,SAAK,GAAG,UAAU;AAClB,SAAK,GAAG,QAAQ;AAAA;AAAA;AAIpB,IAAI,cAAc,SAAU,OAAO,KAAK;AACtC,MAAI,YAAY,MAAM;AAEtB,MAAI,YAAY,KAAK,MAAM,YAAY,OAAO,KAAK;AACjD,WAAO;AAAA;AAGT,SAAO,MAAM,OAAO;AAAA;AAStB,IAAI,kBAAkB,SAAU,QAAQ;AACtC,MAAI,eAAe,CAAC;AACpB,MAAI,gBAAgB,CAAC;AACrB,MAAI,qBAAqB,CAAC;AAC1B,MAAI,oBAAoB,CAAC,OAAO;AAChC,MAAI,IAAI;AACR,MAAI,aAAa;AACjB,MAAI,cAAc;AAClB,MAAI,MAAM,CAAC;AAEX,SAAO,aAAa,IAAI;AACtB,WAAQ,KAAI,mBAAmB,iBAAiB,kBAAkB,aAAa;AAC7E,UAAI,UAAU;AACd,UAAI,QAAQ,aAAa;AACzB,UAAI,WAAW,cAAc;AAC7B,UAAI,QAAQ,SAAS;AAErB,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,aAAa,IAAI,QAAQ,CAAC;AAClC,kBAAU;AAAA,aACL;AACL,gBAAQ,YAAY,OAAO,MAAM;AAEjC,YAAI,MAAM,OAAO;AACf,kBAAQ,YAAY,OAAO,MAAM;AAAA;AAGnC,kBAAU,MAAM;AAAA;AAIlB,UAAI,OAAO,YAAY,UAAU;AAC/B;AACA,qBAAa,KAAK;AAClB,sBAAc,KAAK;AACnB,2BAAmB,KAAK;AACxB,0BAAkB,KAAK,QAAQ;AAC/B;AAAA;AAIF,UAAI,kBAAkB,QAAQ,MAAM;AACpC,UAAI,eAAe,gBAAgB;AACnC,kBAAY,KAAK;AAAA,QACf;AAAA,QACA,SAAS,gBAAgB;AAAA;AAG3B,eAAS,MAAM,GAAG,MAAM,cAAc,OAAO;AAC3C,4BAAoB;AACpB,YAAI,KAAK,cAAc;AACvB,oBAAY,KAAK;AAAA,UACf;AAAA,UACA,SAAS,gBAAgB;AAAA;AAAA;AAAA;AAM/B;AACA,iBAAa;AACb,kBAAc;AACd,uBAAmB;AACnB,sBAAkB;AAAA;AAGpB,sBAAoB;AACpB,SAAO;AAAA;AAGT,IAAI,cAAc,SAAU,QAAO,UAAU;AAC3C,MAAI,QAAQ,OAAM;AAElB,MAAI,OAAO,uBAAO,OAAO;AACzB,MAAI,YAAY,OAAM,OAAO,OAAO,SAAU,KAAK,YAAY;AAC7D,QAAI,YAAY,WAAW;AAC3B,QAAI,QAAQ,WAAW;AAEvB,QAAI,aAAa,CAAC,UAAU,SAAS,WAAW;AAC9C,aAAO;AAAA;AAGT,eAAW,MAAM,QAAQ,SAAU,MAAM;AAEvC,UAAI,WAAW,SAAS,IAAI,IAAI,OAAO;AAEvC,UAAI,QAAQ;AAAA;AAEd,WAAO;AAAA,KACN;AAEH,YAAU,OAAO;AAEjB,YAAU,QAAQ,SAAS,IAAI,OAAO;AAAA,IACpC,iBAAiB;AAAA;AAEnB,SAAO;AAAA;AAGT,iCAAiC,KAAK,SAAS;AAC7C,MAAI,SAAS;AAEb,WAAS,KAAK;AAAK,QAAI,OAAO,UAAU,eAAe,KAAK,KAAK,MAAM,QAAQ,QAAQ,OAAO;AAAI,aAAO,KAAK,IAAI;AAElH,SAAO;AAAA;AAGT,IAAI,YAAyB,yBAAU,YAAW;AAChD,wBAAqB;AACnB,QAAI,SAAS;AACb,QAAI,OAAO,IACP,MAAM,UAAU;AAEpB,WAAO;AAAO,WAAK,OAAO,UAAU;AAEpC,eAAU,MAAM,MAAM;AAEtB,oBAAgB,MAAM,gBAAgB,SAAU,OAAO;AACrD,UAAI,OAAO,cAAc,UAAa,MAAM,UAAU,OAAO,aAAa,MAAM,aAAa,OAAO,cAAc;AAChH,eAAO,OAAO;AAAA;AAGhB,aAAO,YAAY,MAAM;AACzB,aAAO,eAAe,MAAM;AAC5B,UAAI,YAAY,MAAM,QAAQ,YAAY,MAAM,OAAO,MAAM,YAAY;AACzE,aAAO,OAAO,YAAY;AAAA;AAG5B,oBAAgB,MAAM,gBAAgB,SAAU,KAAK;AACnD,UAAI,MAAM,IAAI;AACd,UAAI,YAAY,IAAI;AACpB,UAAI,QAAQ,IAAI;AAChB,UAAI,SAAS,wBAAwB,KAAK,CAAC,OAAO,aAAa,SAAS;AACxE,UAAI,OAAO;AAEX,UAAI,SAAS,SAAS,IAAI,MAAM;AAAA,QAC9B,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA;AAGP,UAAI,YAAY,OAAO,aAAa,OAAO;AAE3C,UAAI,cAAc,QAAW;AAC3B,eAAO,QAAQ,UAAU;AAAA;AAG3B,UAAI,UAAU,QAAW;AACvB,eAAO,QAAQ,OAAO,UAAU,SAAY,SAAS,IAAI,OAAO,OAAO,SAAS;AAAA;AAGlF,UAAI,QAAQ,QAAW;AACrB,eAAO,MAAM;AAAA;AAGf,UAAI,WAAW;AACb,eAAO,aAAa,MAAM;AAAA;AAG5B,aAAO;AAAA;AAGT,oBAAgB,MAAM,oBAAoB,SAAU,KAAK;AACvD,UAAI,QAAQ,IAAI;AAChB,UAAI,QAAQ,IAAI;AAChB,UAAI,YAAY,MAAM;AACtB,UAAI,YAAY,OAAO,aAAa,OAAO;AAE3C,UAAI,cAAc,QAAW;AAC3B,eAAO;AAAA,iBACE,cAAc,KAAK,MAAM,OAAO,SAAS;AAClD,eAAO,QAAQ;AAAA,UACb,SAAS;AAAA,YACP;AAAA,iBACK,cAAc,KAAK,CAAC,OAAO;AACpC,eAAO,UAAU,MAAM;AAAA;AAGzB,UAAI,YAAY,QAAQ;AAAA,QACtB,SAAS;AAAA,UACP;AAEJ,UAAI,aAAa,MAAM,IAAI,SAAU,MAAM;AACzC,eAAO,UAAU;AAAA;AAEnB,aAAO,OAAO,OAAO,MAAM,QAAQ,CAAC,WAAW,OAAO;AAAA;AAGxD,oBAAgB,MAAM,iBAAiB,SAAU,KAAK;AACpD,UAAI,MAAM,IAAI;AACd,UAAI,YAAY,IAAI;AACpB,UAAI,QAAQ,IAAI;AAChB,UAAI,QAAQ,IAAI;AAChB,UAAI,SAAS,wBAAwB,KAAK,CAAC,OAAO,aAAa,SAAS;AACxE,UAAI,OAAO;AAEX,UAAI,SAAS,SAAS,IAAI,MAAM;AAAA,QAC9B,WAAW,WAAW,MAAM,MAAM,KAAK;AAAA,QACvC,UAAU,MAAM;AAAA,QAChB,OAAO,OAAO,iBAAiB;AAAA,QAC/B,KAAK;AAAA;AAGP,UAAI,UAAU,QAAW;AACvB,eAAO,QAAQ,OAAO,UAAU,SAAY,SAAS,IAAI,OAAO,OAAO,SAAS;AAAA;AAGlF,UAAI,QAAQ,QAAW;AACrB,eAAO,MAAM;AAAA;AAGf,UAAI,WAAW;AACb,eAAO,aAAa,MAAM;AAAA;AAG5B,aAAO;AAAA;AAGT,oBAAgB,MAAM,YAAY,SAAU,QAAO,MAAM,SAAS,UAAU;AAC1E,UAAI,MAAM;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA;AAEV,aAAM,MAAM,IAAI,mBAAmB;AACnC,UAAI,SAAS,IAAI,SAAS,OAAM,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI;AACpE,aAAM,MAAM,IAAI,kBAAkB;AAClC,aAAO;AAAA;AAAA;AAIX,MAAI;AAAW,eAAU,YAAY;AACrC,aAAU,YAAY,OAAO,OAAO,cAAa,WAAU;AAC3D,aAAU,UAAU,cAAc;AAElC,aAAU,UAAU,SAAS,kBAAkB;AAC7C,QAAI,MAAM,KAAK;AACf,QAAI,SAAQ,IAAI;AAChB,QAAI,WAAW,IAAI;AACnB,QAAI,OAAO,IAAI;AACf,QAAI,WAAW,IAAI;AACnB,QAAI,YAAY,KAAK,aAAa,KAAK;AACvC,QAAI,UAAU,OAAM,UAAU;AAC9B,QAAI,cAAc,YAAY,SAAY,KAAK,SAAS,QAAO,MAAM,SAAS,YAAY,CAAC;AAC3F,QAAI,SAAS,gBAAgB;AAC7B,WAAO,SAAS;AAAA,MACd;AAAA,MACA,WAAW,yBAAyB;AAAA,MACpC,OAAO,cAAc,SAAY,UAAU,OAAO;AAAA,MAClD,cAAc,KAAK;AAAA,MACnB,eAAe,KAAK;AAAA;AAAA;AAIxB,SAAO;AAAA,EACP;AAEF,IAAO,eAAQ;;;AG7Uf;AACA,IAAI,SAAQ;AAAA,EACV,OAAO;AAAA,IACL,OAAO;AAAA,IACP,iBAAiB;AAAA;AAAA,EAEnB,QAAQ,CAAC;AAAA,IACP,OAAO,CAAC,WAAW,UAAU,WAAW;AAAA,IACxC,OAAO;AAAA,MACL,OAAO;AAAA,MACP,WAAW;AAAA;AAAA,KAEZ;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,SAAS;AAAA;AAAA,KAEV;AAAA,IACD,OAAO,CAAC,UAAU;AAAA,IAClB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,eAAe;AAAA,IACvB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,UAAU,OAAO,UAAU,UAAU,WAAW,YAAY,YAAY,YAAY,SAAS;AAAA,IACrG,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,UAAU,WAAW,aAAa;AAAA,IAC1C,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,YAAY,WAAW;AAAA,IAC/B,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,OAAO,YAAY;AAAA,IAC3B,OAAO;AAAA,MACL,OAAO;AAAA;AAAA;AAAA;AAKb,IAAO,iBAAQ;;;ACvDf;AACA,IAAI,SAAQ;AAAA,EACV,OAAO;AAAA,IACL,OAAO;AAAA,IACP,iBAAiB;AAAA;AAAA,EAEnB,QAAQ,CAAC;AAAA,IACP,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,WAAW,WAAW,WAAW;AAAA,IACzC,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,UAAU;AAAA,IAClB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,aAAa;AAAA,IACrB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,WAAW,UAAU,cAAc;AAAA,IAC3C,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IAED,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IAED,OAAO,CAAC;AAAA,IACR,WAAW,CAAC;AAAA,IACZ,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC,eAAe;AAAA,IACvB,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IAED,OAAO,CAAC;AAAA,IACR,WAAW,CAAC;AAAA,IACZ,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,KAER;AAAA,IACD,OAAO,CAAC;AAAA,IACR,OAAO;AAAA,MACL,OAAO;AAAA;AAAA;AAAA;AAKb,IAAO,iBAAQ;;;AL/ER,IAAM,SAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAOrC,IAAM,YAA6B,CAAC,UAAU;AAC5C,QAAM,WAAW,MAAM,KAAK;AAC5B,QAAM,EAAE,kBAAU;AAElB,QAAM,WAAqB,MAAM,KAAK;AACtC,SACE,qCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qCAAC,cAAD;AAAA,OACM;AAAA,IACJ,OACE,WAAU,sBAAuB,iBAAmB;AAAA,IAEtD,MAAM;AAAA,IACN;AAAA,KAEC,CAAC,EAAE,WAAW,QAAQ,cAAc,oBAAoB;AACvD,WACE,qCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACZ,MAAM,KAAK,aAAa,SACvB,qCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,qCAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OACV,MAAM,KAAK,aAGd,MAEJ,qCAAC,OAAD;AAAA,MACE,WAAW,GAAG,qEACZ,MAAM,KAAK,WAAW,SAAS;AAAA;AAAA,OAIhC,OAAO,IAAI,CAAC,MAAM,MAAM;AACvB,YAAM,EAAE,cAAc,cAAc,aAAa;AAAA,QAC/C;AAAA,QACA,KAAK;AAAA;AAEP,aACE,qCAAC,OAAD;AAAA,QACE,KAAK;AAAA,WACD;AAAA,QACJ,WAAW,GAAG,qBACZ,IAAI,0CAEJ,MAAM,KAAK,0BAA0B,WAAW;AAAA,SAGlD,qCAAC,OAAD,MAEE,qCAAC,QAAD;AAAA,QACE,WAAW,0BACT,MAAM,KAAK,0BACP,YACA;AAAA,QAEN,OAAO,EAAE,UAAU;AAAA,SAElB,IAAI,KAIT,qCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SACZ,KAAK,IAAI,CAAC,OAAO,QAAQ;AACxB,cAAM,EAAE,0BAAc,eAAc,cAAc;AAAA,UAChD;AAAA,UACA;AAAA;AAEF,eACE,qCAAC,QAAD;AAAA,UACE;AAAA,aACI;AAAA,UACJ,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB5C,IAAO,qBAAQ;;;AM1Gf;AAAA,aAAuB;AAEvB,IAAM,cAAwB,CAAC,UAAU;AACvC,SACE,qCAAC,MAAD;AAAA,IACE,WAAW;AAAA,KAEV,MAAM;AAAA;AAKb,IAAO,sBAAQ;;;ACZf;AAAA,aAAuB;AAIvB,IAAM,aAAuB,CAAC,UAAU;AACtC,QAAM,EAAE,kBAAU;AAClB,SACE,qCAAC,MAAD;AAAA,IACE,WAAW,oFACT,WAAU,sBAAuB,qBAAqB;AAAA,KAGvD,MAAM;AAAA;AAKb,IAAO,qBAAQ;;;ACjBf;AAAA,aAAuB;AAEvB,IAAM,aAAuB,CAAC,UAAU;AACtC,SACE,qCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,MAAM;AAAA;AAKb,IAAO,qBAAQ;;;ACVf;AAAA,cAAuB;AAIvB,IAAM,eAAyB,CAAC,UAAU;AACxC,QAAM,EAAE,kBAAU;AAElB,SACE,sCAAC,MAAD;AAAA,IACE,WAAW,iHACT,WAAU,sBAAuB,iBAAiB;AAAA,KAGnD,MAAM;AAAA;AAKb,IAAO,uBAAQ;;;AClBf;AAAA,cAAuB;AAIvB,IAAM,cAAwB,CAAC,UAAU;AACvC,QAAM,EAAE,kBAAU;AAClB,SACE,sCAAC,MAAD;AAAA,IACE,WAAW,oDACT,WAAU,sBAAuB,oBAAoB;AAAA,KAGtD,MAAM;AAAA;AAKb,IAAO,sBAAQ;;;ACjBf;AAAA,cAAuB;AAEvB,IAAM,aAAuB,CAAC,UAAU;AACtC,SACE,sCAAC,KAAD;AAAA,IAAG,WAAW;AAAA,KACX,MAAM;AAAA;AAKb,IAAO,qBAAQ;;;ACVf;AAAA,cAAuB;AAEvB,sCAA0C;;;ACF1C;AAAA,oBAAkB;AAClB,6BAA6C;;;ACD7C;AAMA,IAAM,yBAAyB;AAWxB,IAAM,YAAY,CAAC,WAAqC,OAAO;AACpE,MAAI,aAAa,MAAM;AAKrB,WAAO;AAAA;AAIT,QAAM,iBAAiB,SAAS,QAAQ,CAAC,UAAU;AAKjD,QAAI,OAAO,UAAU,UAAU;AAE7B,YAAM,UAAU,MAAM,MAAM;AAC5B,UAAI,SAAS;AACX,cAAM,SAAS,sBAAsB,SAAS;AAC9C,eAAO;AAAA;AAAA;AAOX,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,UAAU;AAEhB,YAAM,UAAU,QAAQ,MAAM;AAE9B,YAAM,YAAY,QAAQ,MAAM;AAChC,YAAM,gBACJ,OAAO,YAAY,YAAY,QAAQ,MAAM;AAK/C,UACE,WACA,QAAQ,SACR,OAAO,QAAQ,MAAM,aAAa,UAClC;AACA,cAAM,cAAc,QAAQ,MAAM;AAElC,cAAM,qBAAqB,YAAY,MAAM;AAO7C,YAAI,oBAAoB;AACtB,iBAAO,sBAAsB,oBAAoB,aAAa;AAAA,YAC5D;AAAA;AAAA;AAAA;AASN,UAAI,eAAe;AACjB,eAAO,sBAAsB,eAAe,SAAS,EAAE;AAAA;AAAA;AAI3D,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAM,wBAAwB,CAC5B,SACA,MACA,YAAY,OACT;AACH,QAAM,UAAU,KAAK,MAAM,GAAG,QAAQ,MAAM,QAAQ;AAEpD,SAAO;AAAA,IACL,QAAQ;AAAA,IACR,oCAAC,QAAD;AAAA,MACE,KAAK,QAAQ;AAAA,SACT;AAAA,MACJ,OAAO;AAAA,QACL,OAAO;AAAA,QACP,iBAAiB,GACf,QAAQ,OAAO,UAAa,qBAAqB,QAAQ;AAAA;AAAA,OAI5D,QAAQ;AAAA,IAEX,QAAQ;AAAA;AAAA;AAIZ,IAAM,uBAA+C;AAAA,EACnD,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA;;;AC5HV;AAAA,cAAuB;AAUvB,IAAM,eAAgC,CAAC,UAAU;AAC/C,QAAM,EAAE,kBAAU;AAClB,QAAM,gCACJ,aAAa,MAAM,QAAQ,kBAAkB,OAAO,KAAK,IAAI,MAAM,MAAM;AAC3E,QAAM,+BACJ,aAAa,MAAM,QAAQ,iBAAiB,OAAO,KAAK,IAAI,MAAM,MAAM;AAC1E,QAAM,WACJ,WAAU,oBACN,+BACA;AACN,QAAM,UAAU,MAAM,aAAa,kBAAkB,cAAc;AACnE,SACE,sCAAC,OAAD;AAAA,IAAK,WAAW,sCAAsC;AAAA,KACpD,sCAAC,KAAD;AAAA,IAAG,MAAM;AAAA,IAAU,QAAO;AAAA,KACxB,sCAAC,OAAD;AAAA,IACE,OAAO,sBAAsB,MAAM,QAAQ;AAAA,IAC3C,KAAK;AAAA,IACL,KAAK,sBAAsB,MAAM,QAAQ;AAAA,IACzC,WAAU;AAAA,IACV,OAAO;AAAA,MACL,iBAAiB,GACf,WAAU,sBAAuB,YAAY;AAAA;AAAA;AAAA;AAS3D,IAAO,uBAAQ;;;AFzBR,IAAM,gBAAyB;AAAA,EACpC,YAAY;AAAA,KACT,6BAAM,OAAO,CAAC,SAAS;AACtB,YAAM,EAAE,kBAAU;AAClB,aACE,oDAAC,QAAD;AAAA,QACE,WAAW,6BACT,WAAU,sBAAuB,eAAe;AAAA,SAGjD,UAAU,CAAC;AAAA;AAAA,KAIjB,6BAAM,SAAS,CAAC,SAAS;AACxB,aAAO,oDAAC,QAAD;AAAA,QAAM,WAAU;AAAA,SAAU;AAAA;AAAA,KAElC,6BAAM,YAAY,CAAC,SAAS;AAC3B,aAAO,oDAAC,QAAD;AAAA,QAAM,WAAW;AAAA,SAAqB;AAAA;AAAA,KAE9C,6BAAM,OAAO,CAAC,aAAa;AAC1B,aACE,oDAAC,QAAD;AAAA,QAAM,WAAU;AAAA,SACb;AAAA;AAAA;AAAA,EAKT,YAAY;AAAA,KACT,+BAAQ,YAAY,CAAC,MAAY,aAAa;AAC7C,YAAM,EAAE,kBAAU;AAClB,aACE,oDAAC,KAAD;AAAA,QACE,WAAW,uBACT,WAAU,oBACN,mCACA;AAAA,QAEN,MAAM,KAAK,KAAK;AAAA,SAEf;AAAA;AAAA,KAIN,+BAAQ,kBAAkB,CAAC,MAAY,aACtC,oDAAC,wBAAD;AAAA,MAAgB;AAAA,OAAa;AAAA,KAE9B,8BAAO,WAAW,CAAC,MAAY,aAAa,0FAAG;AAAA,KAC/C,8BAAO,YAAY,CAAC,MAAY,aAE/B,oDAAC,KAAD;AAAA,MAAG,WAAU;AAAA,OACV,UAAU;AAAA,KAGd,8BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,sBAAD,MAAe;AAAA,KAEhB,8BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,qBAAD,MAAc;AAAA,KAEf,8BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,qBAAD,MAAc;AAAA,KAEf,8BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,oBAAD,MAAa;AAAA,KAEd,8BAAO,UAAU,CAAC,MAAY,aAC7B,oDAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAgB;AAAA,KAE/B,8BAAO,UAAU,CAAC,MAAY,aAC7B,oDAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAa;AAAA,KAE5B,8BAAO,YAAY,CAAC,MAAW,aAAa;AAC3C,aACE,oDAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SAAyC;AAAA;AAAA,KAG1D,8BAAO,KAAK,CAAC,SAAe,oDAAC,OAAD;AAAA,MAAK,WAAU;AAAA;AAAA,KAC3C,8BAAO,iBAAiB,CAAC,MAAM,aAAa;AAC3C,YAAM,eAAe,KAAK,KAAK,OAAO,IAAI,YAAY,IAAI;AAC1D,cAAQ;AAAA,aACD;AACH,gBAAM,mBACJ,KAAK,KAAK,OAAO;AACnB,iBACE,oDAAC,sBAAD;AAAA,YAAc,SAAS;AAAA,YAAkB,UAAS;AAAA;AAAA;AAGpD,iBAAO,oDAAC,KAAD;AAAA,YAAG,WAAU;AAAA,aAAgB;AAAA;AAAA;AAAA,KAGzC,8BAAO,iBAAiB,CAAC,MAAM,aAAa;AAC3C,YAAM,YAAY,KAAK,KAAK,OAAO,OAAO,KAAK;AAC/C,YAAM,mBAAmB,KAAK,KAAK,OAAO,OAAO;AAIjD,aACE,oDAAC,qBAAD;AAAA,QACE,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK;AAAA,QAClC,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAC7B,aAAa,mBAAmB,mBAAmB;AAAA;AAAA;AAAA,KAKxD,8BAAO,QAAQ,CAAC,MAAM,aAAa,oDAAC,OAAD,MAAM;AAAA,KACzC,8BAAO,YAAY,CAAC,MAAM,aAAa,oDAAC,OAAD,MAAM;AAAA,KAC7C,8BAAO,aAAa,CAAC,MAAM,aAAa,oDAAC,OAAD,MAAM;AAAA,KAC9C,8BAAO,oBAAoB,CAAC,MAAM,aAAa,oDAAC,OAAD,MAAM;AAAA;AAAA;;;ADnH1D,IAAM,aAA8B,CAAC,UAAU;AAC7C,QAAM,kBAAkB,MAAM,WAAW;AACzC,QAAM,gBAAgB,4BAA4B;AAClD,QAAM,oBAAoB,wBAAwB;AAElD,QAAM,OAAO,+DACX,MAAM,WAAW,oBACjB;AAGF,SACE,sCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAO;AAAA,MACL,YAAY,aAAa;AAAA,MACzB,iBAAiB,GAAG;AAAA,MACpB,OAAO,GAAG;AAAA;AAAA,KAGX,MAAM,WAAW,qBAChB,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,MAAM,WAAW,eAElB,MACJ,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4B;AAAA;AAKjD,IAAO,qBAAQ;AAEf,IAAM,8BAAsD;AAAA,EAC1D,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,KAAK;AAAA;AAGP,IAAM,0BAAkD;AAAA,EACtD,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,KAAK;AAAA;;;AjB1BA,IAAM,UAAmB;AAAA,EAC9B,YAAY;AAAA,KACT,8BAAM,OAAO,CAAC,SACb,oDAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OACb,UAAU,CAAC;AAAA,KAGf,8BAAM,SAAS,CAAC,SACf,oDAAC,QAAD;AAAA,MAAM,WAAU;AAAA,OAA+B;AAAA,KAEhD,8BAAM,YAAY,CAAC,SAAS;AAC3B,YAAM,CAAC,WAAW,gBAAgB,sBAAM,SAAiB;AACzD,uCAAiC;AAC/B,cAAM,4BAA4B;AAAA,UAChC;AAAA,UACA;AAAA,UACA;AAAA;AAEF,cAAM,cACJ,0BACE,KAAK,MAAM,KAAK,WAAW,0BAA0B;AAEzD,qBACE,gBAAgB,SAAY,cAAc;AAAA;AAG9C,4BAAM,UAAU,MAAM,yBAAyB,CAAC;AAChD,aACE,oDAAC,QAAD;AAAA,QAAM,WAAW,yCAAyC;AAAA,SACvD;AAAA;AAAA,KAIN,8BAAM,OAAO,CAAC,aAAa;AAC1B,aACE,oDAAC,QAAD;AAAA,QAAM,WAAU;AAAA,SACb;AAAA;AAAA;AAAA,EAKT,YAAY;AAAA,KACT,gCAAQ,YAAY,CAAC,MAAY,aAChC,oDAAC,mBAAD;AAAA,MAAW,KAAK,KAAK,KAAK;AAAA,OAAM;AAAA,KAEjC,gCAAQ,kBAAkB,CAAC,MAAY,aACtC,oDAAC,wBAAD;AAAA,MAAgB;AAAA,OAAa;AAAA,KAE9B,+BAAO,WAAW,CAAC,MAAY,aAAa,0FAAG;AAAA,KAC/C,+BAAO,YAAY,CAAC,MAAY,aAAa;AAC5C,aAEE,oDAAC,KAAD;AAAA,QAAG,WAAU;AAAA,SACV,UAAU;AAAA;AAAA,KAIhB,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,oBAAD,MAAa;AAAA,KAEd,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,oBAAD,MAAa;AAAA,KAEd,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,sBAAD,MAAe;AAAA,KAEhB,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,qBAAD,MAAc;AAAA,KAEf,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,qBAAD,MAAc;AAAA,KAEf,+BAAO,YAAY,CAAC,MAAY,aAC/B,oDAAC,oBAAD,MAAa;AAAA,KAEd,+BAAO,UAAU,CAAC,MAAY,aAC7B,oDAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAA2B;AAAA,KAE1C,+BAAO,UAAU,CAAC,MAAY,aAC7B,oDAAC,MAAD;AAAA,MAAI,WAAU;AAAA,OAAmB;AAAA,KAElC,+BAAO,YAAY,CAAC,MAAW,aAAa;AAC3C,aACE,oDAAC,MAAD;AAAA,QAAI,WAAU;AAAA,SAA0C;AAAA;AAAA,KAG3D,+BAAO,KAAK,CAAC,SAAe,oDAAC,OAAD;AAAA,MAAK,WAAU;AAAA;AAAA,KAC3C,+BAAO,QAAQ,CAAC,MAAY,aAC3B,oDAAC,cAAD,MAAa;AAAA,KAGd,+BAAO,iBAAiB,CAAC,MAAM,aAAa;AAC3C,YAAM,eAAe,KAAK,KAAK,OAAO,IAAI,YAAY,IAAI;AAE1D,cAAQ;AAAA,aACD;AACH,gBAAM,YAA6B,KAAK,KAAK,OAAO;AACpD,iBAAO,oDAAC,qBAAD;AAAA,YAAY;AAAA;AAAA,aAChB;AACH,gBAAM,YAA6B,KAAK,KAAK,OAAO;AACpD,iBACE,oDAAC,OAAD;AAAA,YACE,WAAU;AAAA,YACV,yBAAyB,EAAE,QAAQ,UAAU;AAAA;AAAA,aAG9C;AACH,gBAAM,mBACJ,KAAK,KAAK,OAAO;AACnB,iBACE,oDAAC,sBAAD;AAAA,YACE,SAAS;AAAA,YACT,UAAS;AAAA;AAAA,aAGV;AACH,gBAAM,kBAAmC,KAAK,KAAK,OAAO;AAC1D,gBAAM,cAAsB,gBAAgB;AAC5C,iBAAO,oDAAC,OAAD;AAAA,YAAK,yBAAyB,EAAE,QAAQ;AAAA;AAAA,aAC5C;AACH,gBAAM,OAA2B,KAAK,KAAK,OAAO;AAClD,gBAAM,OAAkB,KAAK,KAAK,OAAO,SAAS;AAClD,iBACE,oDAAC,KAAD;AAAA,YACE,MAAM,SAAS,KAAK;AAAA,YACpB,WAAU;AAAA,YACV,KAAK,KAAK;AAAA,aAEV,oDAAC,OAAD;AAAA,YACE,KAAK,KAAK,eAAe,OAAO,KAAK;AAAA,YACrC,KAAK,KAAK,eAAe,OAAO;AAAA,YAChC,OAAO,KAAK,eAAe,OAAO;AAAA,YAClC,WAAU;AAAA,cAEZ,oDAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oDAAC,QAAD;AAAA,YAAM,WAAU;AAAA,aACb,KAAK,gBAER,oDAAC,KAAD;AAAA,YAAG,WAAU;AAAA,aACV,KAAK,kBAER,oDAAC,sBAAD;AAAA,YAAc;AAAA;AAAA,aAIjB;AACH,gBAAM,gBAAqC,KAAK,KAAK,OAAO;AAC5D,iBAAO,oDAAC,oBAAD;AAAA,YAAW,MAAM;AAAA;AAAA,aACrB;AACH,gBAAM,WAAiC,KAAK,KAAK,OAAO;AACxD,iBAAO,oDAAC,oBAAD;AAAA,YAAY,YAAY;AAAA;AAAA,aAC5B;AACH,gBAAM,UAAyB,KAAK,KAAK,OAAO;AAChD,iBACE,oDAAC,OAAD;AAAA,YAAK,yBAAyB,EAAE,QAAQ,QAAQ;AAAA;AAAA,aAE/C;AACH,gBAAM,cAAqC,KAAK,KAAK,OAAO;AAC5D,iBACE,oDAAC,OAAD;AAAA,YAAK,WAAU;AAAA,aACb,oDAAC,OAAD;AAAA,YACE,yBAAyB,EAAE,QAAQ,YAAY;AAAA;AAAA;AAMrD,iBACE,oDAAC,KAAD;AAAA,YAAG,WAAU;AAAA,aAA0B;AAAA;AAAA;AAAA,KAI9C,+BAAO,iBAAiB,CAAC,MAAM,aAAa;AAC3C,YAAM,YAAY,KAAK,KAAK,OAAO,OAAO,KAAK;AAC/C,YAAM,mBAAmB,KAAK,KAAK,OAAO,OAAO;AAGjD,cAAQ;AAAA,aACD;AACH,iBACE,oDAAC,SAAD;AAAA,YAAO,OAAM;AAAA,YAAO,QAAO;AAAA,YAAO,UAAQ;AAAA,aACxC,oDAAC,UAAD;AAAA,YAAQ,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK;AAAA,YAAK,MAAK;AAAA;AAAA,aAGrD;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBACE,oDAAC,qBAAD;AAAA,YACE,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK;AAAA,YAClC,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAC7B,aAAa,mBAAmB,mBAAmB;AAAA;AAAA;AAIvD,iBACE,oDAAC,qBAAD;AAAA,YACE,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK;AAAA,YAClC,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAC7B,aAAa,mBAAmB,mBAAmB;AAAA;AAAA;AAAA;AAAA,KAK5D,+BAAO,QAAQ,CAAC,MAAM,aACrB,oDAAC,SAAD,MACE,oDAAC,SAAD,MAAQ;AAAA,KAGX,+BAAO,YAAY,CAAC,MAAM,aAAa,oDAAC,MAAD,MAAK;AAAA,KAC5C,+BAAO,aAAa,CAAC,MAAM,aAAa,oDAAC,MAAD,MAAK;AAAA,KAC7C,+BAAO,oBAAoB,CAAC,MAAM,aAAa,oDAAC,SAAD,MAAQ;AAAA;AAAA;;;;;;AqBnP5D;AAAA,cAAuB;AAOvB,IAAM,gBAAiC,CAAC,OAAO;AAC7C,QAAM,EAAE,kBAAU;AAClB,QAAM,cACJ,WAAU,sBAAuB,oBAAoB;AACvD,SACE,sCAAC,OAAD;AAAA,IACE,WAAW,iDAAiD;AAAA,KAE5D,sCAAC,OAAD;AAAA,IACE,KAAI;AAAA,IACJ,KAAI;AAAA,IACJ,WAAU;AAAA,IACV,OAAM;AAAA,MAER,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyD,qCAGtE,sCAAC,KAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAU;AAAA,IACV,cAAW;AAAA,IACX,yBAAsB;AAAA,IACtB,mBAAgB;AAAA,KACjB,WAGD,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAe,qIAI5B,sCAAC,KAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KAEV,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAe,kBAC5B,sCAAC,wBAAD;AAAA,IAAgB,WAAU;AAAA;AAAA;AAOpC,IAAO,wBAAQ;;;ACnDf;AACA,cAAuB;;;ACDvB;AACA,cAAuB;AAQvB,IAAM,kBAAmC,CAAC,UAAU;AAClD,QAAM,cAAc,IAAI,KAAK,MAAM,KAAK,IAAI,WAAW;AACvD,QAAM,OAAO,YAAY,UAAU,YAAY,QAAQ,OAAO;AAC9D,QAAM,OAAO,MAAM,KAAK,SAAS;AACjC,SACE,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,KAAD;AAAA,IACE,MAAM,SAAS,MAAM,KAAK,OAAO;AAAA,IACjC,WAAU;AAAA,KAEV,sCAAC,OAAD;AAAA,IACE,KAAK,MAAM,KAAK,OAAO,eAAe,OAAO,KAAK;AAAA,IAClD,KAAK,MAAM,KAAK,OAAO,eAAe,OAAO;AAAA,IAC7C,OAAO,MAAM,KAAK,OAAO,eAAe,OAAO;AAAA,IAC/C,WAAU;AAAA,IACV,SAAQ;AAAA,OAGZ,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,MAAK,uBAER,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,MAAM,KAAK,OAAO,gBAErB,sCAAC,OAAD,MACE,sCAAC,sBAAD;AAAA,IAAc;AAAA;AAAA;AAOxB,IAAO,0BAAQ;;;ADhCf,IAAM,sBAAuC,CAAC,UAAU;AACtD,SACE,sCAAC,OAAD;AAAA,IACE,WAAW,GAAG;AAAA,KAEd,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAiD,uCAG9D,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA8B,uCAI7C,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,MAAM,aAAa,IAAI,CAAC,SACvB,sCAAC,MAAD;AAAA,IACE,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,OAAO;AAAA,IAC7C,WAAU;AAAA,KAEV,sCAAC,yBAAD;AAAA,IAAiB;AAAA;AAAA;AAQ7B,IAAO,8BAAQ;;;AErCf;;;;;;AACA,cAAuB;;;ACDvB;AAAA,cAAuB;AAOvB,IAAM,eAAgC,CAAC,UAAU;AAC/C,QAAM,WAAW,eAAe,MAAM;AAAA;AAAA;AACtC,QAAM,mBAAmB,oJAAoJ,kEAAkE,MAAM;AACrP,QAAM,oBACJ,oFACA,MAAM;AACR,QAAM,oBACJ,2FACA,MAAM,OACN,YACA,MAAM;AACR,SACE,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAoG,eAGnH,sCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,WAAU;AAAA,IACV,SAAQ;AAAA,KAER,sCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,IAAG;AAAA,IACH,GAAE;AAAA,IACF,MAAK;AAAA,IACL,QAAO;AAAA,IACP,eAAc;AAAA,IACd,gBAAe;AAAA,IACf,aAAY;AAAA,MAEd,sCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,IAAG;AAAA,IACH,GAAE;AAAA,IACF,MAAK;AAAA,IACL,QAAO;AAAA,IACP,eAAc;AAAA,IACd,gBAAe;AAAA,IACf,aAAY;AAAA,MAEd,sCAAC,UAAD;AAAA,IACE,IAAG;AAAA,IACH,IAAG;AAAA,IACH,GAAE;AAAA,IACF,MAAK;AAAA,IACL,QAAO;AAAA,IACP,eAAc;AAAA,IACd,gBAAe;AAAA,IACf,aAAY;AAAA,MAEd,sCAAC,QAAD;AAAA,IACE,MAAK;AAAA,IACL,QAAO;AAAA,IACP,eAAc;AAAA,IACd,gBAAe;AAAA,IACf,aAAY;AAAA,IACZ,GAAE;AAAA,OAGN,sCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAO;AAAA,KAEP,sCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,WAAU;AAAA,KAEV,sCAAC,QAAD;AAAA,IAAM,GAAE;AAAA,QAGZ,sCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAO;AAAA,IACP,KAAI;AAAA,IACJ,aAAU;AAAA,KAEV,sCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,WAAU;AAAA,KAEV,sCAAC,QAAD;AAAA,IAAM,GAAE;AAAA,QAGZ,sCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAO;AAAA,IACP,KAAI;AAAA,KAEJ,sCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,WAAU;AAAA,KAEV,sCAAC,QAAD;AAAA,IAAM,GAAE;AAAA;AAAA;AAOlB,IAAO,uBAAQ;;;ACnHf;AAAA,cAAuB;AAEvB,IAAM,cAA8C,CAAC,EAAE,eAAe;AACpE,SACE,sCAAC,OAAD;AAAA,IACE,WAAW;AAAA,IACX,OAAO;AAAA,MACL,OAAO,GAAG;AAAA;AAAA,IAEZ,IAAG;AAAA;AAAA;AAKT,IAAO,sBAAQ;;;AFAR,IAAM,SAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGrC,IAAM,iBAAkC,CAAC,UAAU;AACjD,QAAM,CAAC,0BAA0B,+BAC/B,AAAM,iBAAS;AAEjB,QAAM,CAAC,UAAU,eAAe,AAAM,iBAAS;AAE/C,4BAA0B;AACxB,0BAAsB,MAAM;AAC1B,YAAM,eAAe,OAAO;AAC5B,YAAM,aAAa,SAAS,KAAK;AAEjC,YAAM,SAA6B,SAAS,eAAe;AAE3D,UAAI,QAAQ;AACV,cAAM,wBAAwB,OAAO;AACrC,cAAM,WAAW,OAAO;AACxB,cAAM,kBAAmB,WAAY,cAAa,gBAAiB;AAEnE,oBAAY;AAEZ,oCACE,kCAAkC,UAAU;AAAA;AAAA;AAAA;AAMpD,EAAM,kBAAU,MAAM;AAMpB;AAEA,WAAO,iBAAiB,UAAU;AAElC,WAAO,MAAM;AACX,aAAO,oBAAoB,UAAU;AAAA;AAAA,KAEtC;AAEH,SACE,sCAAC,OAAD;AAAA,IACE,WAAW,2BACT,2BAA2B,oBAAoB;AAAA,IAEjD,IAAG;AAAA,KAEH,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KACN,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAiB,yBACjC,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,2BAAD;AAAA,IAA2B,WAAU;AAAA,MACrC,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA2C,YAMjE,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAA+C,WAC/D,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAqC,MAAM,YAC1D,sCAAC,qBAAD;AAAA,IAAa;AAAA,MACb,sCAAC,uBAAD,OACA,sCAAC,sBAAD;AAAA,IAAc,OAAO,MAAM;AAAA,IAAW,MAAM,MAAM;AAAA;AAAA;AAKxD,IAAM,oCAAoC,CACxC,wBACA,4BACY;AACZ,SAAO,0BAA0B;AAAA;AAGnC,IAAO,0BAAQ;;;AzBpDR,IAAM,SAAuB,MAAM;AACxC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA;AAAA;AAIA,IAAM,OAAqB,CAAC,EAAE,MAAM,eAAe;AACxD,MAAI;AACF,UAAM,eAA+B;AACrC,UAAM,EAAE,aAAa;AACrB,UAAM,WAAW,WAAW,SAAS,OAAO,eAAe,OAAO,KAAK;AACvE,UAAM,SAAS,iCAAiC,SAAS;AACzD,UAAM,cAAc,SAAS,OAAO,gBAAgB,MAAM,GAAG,OAAO;AACpE,UAAM,QAAQ,SAAS,OAAO;AAC9B,UAAM,WACJ,SAAS,OAAO,mBAChB;AACF,UAAM,gBAAgB,SAAS,IAAI;AACnC,UAAM,cAAc,SAAS,IAAI;AACjC,WAAO;AAAA,MACL,OAAO,SAAS,OAAO;AAAA,MACvB;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,kBAAkB;AAAA,MAClB,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,MACvB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,QAAQ;AAAA,MACR,eAAe;AAAA;AAAA,WAEV,GAAP;AACA,YAAQ,MAAM;AAKd,UAAM,YAAgC;AACtC,WAAO;AAAA;AAAA;AA2BX,IAAM,OAAiB,CAAC,OAAO;AAC7B,QAAM,EAAE,UAAU,cAAc;AAEhC,QAAM,EAAE,kBAAU;AAGlB,QAAM,eAAe,gEACnB,SAAS,OAAO,cAChB;AAIF,QAAM,sBACJ,SAAS,OAAO,yBAAyB,SACrC,SAAS,OAAO,qBAAqB,UACrC;AAEN,QAAM,cAAc,IAAI,KAAK,SAAS,IAAI,WAAW;AACrD,QAAM,iBAAiB,YAAY,UAAU,YAAY,QAAQ,OAAO;AACxE,QAAM,gBAAgB,IAAI,KAAK,SAAS,IAAI,WAAW;AACvD,QAAM,mBAAmB,cAAc,UACrC,YAAY,QAAQ,OAAO;AAG7B,QAAM,4BAA4B,SAAS,SAAS;AAIpD,QAAM,kCAAkC,UAAU,MAC/C,OAAO,CAAC,SAAS;AAChB,WACE,KAAK,IAAI,OAAO,SAAS,IAAI,MAC7B,0BAA0B,KAAK,CAAC,gBAAgB;AAC9C,aAAO,KAAK,SAAS,KAAK,KACxB,CAAC,QAAQ,IAAI,IAAI,OAAO,YAAY,IAAI;AAAA;AAAA,KAK/C,MAAM,GAAG;AACZ,SACE,8DACE,sCAAC,yBAAD;AAAA,IACE,UAAU,SAAS,OAAO;AAAA,IAC1B,WAAW,SAAS,OAAO;AAAA,MAG7B,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,OAAD;AAAA,IACE,WAAW,GAAG;AAAA,KAEd,sCAAC,KAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KAEV,sCAAC,OAAD;AAAA,IACE,KACE,WAAU,oBACN,mBACA;AAAA,IAEN,WAAU;AAAA,IACV,KAAI;AAAA,IACJ,OAAM;AAAA,MACN,YAGJ,sCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,SAAS,OAAO,gBAEnB,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAkD,iBAC/C,mBAEhB,sCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAgC,oBAC1B,mBAIvB,sCAAC,OAAD;AAAA,IACE,KAAK,aAAa,SAAS,OAAO,eAAe,OAAO,KAAK;AAAA,IAC7D,WAAU;AAAA,IACV,KAAK,SAAS,OAAO,eAAe,OAAO;AAAA,IAC3C,OAAO,SAAS,OAAO,eAAe,OAAO;AAAA,MAE/C,sCAAC,OAAD;AAAA,IACE,WAAW,+BAA+B;AAAA,KAE1C,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,oBAAoB,SAAS,IAC5B,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,oBAAoB,IAAI,CAAC,gBAAqB;AAC7C,QAAI,YAAY,KAAK,WAAW,QAAW;AACzC,cAAQ,IAAI,YAAY,KAAK,OAAO,QAAQ;AAC5C,YAAM,kBACJ,YAAY,KAAK,OAAO;AAC1B,YAAM,WAAmB,gBAAgB;AACzC,YAAM,kBACJ,gBAAgB;AAClB,aACE,sCAAC,KAAD;AAAA,QACE,QAAO;AAAA,QACP,MAAM;AAAA,QACN,WAAW,6DACT,WAAU,sBACN,2BACA;AAAA,SAGL;AAAA;AAIP,WAAO;AAAA,QAIX,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAe,+BAGnC,sCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,QAAO;AAAA,KACR,qBAIH,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,eAEH,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,sCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAsB,UAAa,KAClD,SAAS,SAAS,KAAK,IAAI,CAAC,QAC3B,sCAAC,UAAD;AAAA,IAAU;AAAA,IAAU,OAAO;AAAA,SAIjC,sCAAC,uBAAD,QAEF,sCAAC,MAAD,OACC,gCAAgC,SAAS,KACxC,sCAAC,6BAAD;AAAA,IAAqB,cAAc;AAAA,MAErC,sCAAC,MAAD;AAAA;AAMR,IAAO,eAAQ;AAMf,IAAM,WAA+B,CAAC,UAAU;AAC9C,QAAM,UAAU,qBAAqB,MAAM,IAAI,IAAI;AAEnD,SACE,8DACG,MAAM,UAAU,sBACf,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,WAGH,sCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ;AAAA;",
  "names": []
}
