{
  "version": 3,
  "sources": ["../../../node_modules/history/umd/history.development.js", "../../../node_modules/history/main.js", "../../../../packages/react-router/lib/context.ts", "../../../../packages/react-router/lib/router.ts", "../../../../packages/react-router/lib/hooks.tsx", "../../../../packages/react-router/lib/components.tsx", "../../../node_modules/react-router/main.js", "../../../../packages/react-router-dom/index.tsx", "../../../node_modules/react-router-dom/main.js"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.HistoryLibrary = {}));\n}(this, (function (exports) { 'use strict';\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  /**\r\n   * Actions represent the type of change to a location value.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n   */\n  exports.Action = void 0;\n\n  (function (Action) {\n    /**\r\n     * A POP indicates a change to an arbitrary index in the history stack, such\r\n     * as a back or forward navigation. It does not describe the direction of the\r\n     * navigation, only that the current index changed.\r\n     *\r\n     * Note: This is the default action for newly created history objects.\r\n     */\n    Action[\"Pop\"] = \"POP\";\n    /**\r\n     * A PUSH indicates a new entry being added to the history stack, such as when\r\n     * a link is clicked and a new page loads. When this happens, all subsequent\r\n     * entries in the stack are lost.\r\n     */\n\n    Action[\"Push\"] = \"PUSH\";\n    /**\r\n     * A REPLACE indicates the entry at the current index in the history stack\r\n     * being replaced by a new one.\r\n     */\n\n    Action[\"Replace\"] = \"REPLACE\";\n  })(exports.Action || (exports.Action = {}));\n\n  var readOnly = function (obj) {\n    return Object.freeze(obj);\n  } ;\n\n  function warning(cond, message) {\n    if (!cond) {\n      // eslint-disable-next-line no-console\n      if (typeof console !== 'undefined') console.warn(message);\n\n      try {\n        // Welcome to debugging history!\n        //\n        // This error is thrown as a convenience so you can more easily\n        // find the source for a warning that appears in the console by\n        // enabling \"pause on exceptions\" in your JavaScript debugger.\n        throw new Error(message); // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n  }\n\n  var BeforeUnloadEventType = 'beforeunload';\n  var HashChangeEventType = 'hashchange';\n  var PopStateEventType = 'popstate';\n  /**\r\n   * Browser history stores the location in regular URLs. This is the standard for\r\n   * most web apps, but it requires some configuration on the server to ensure you\r\n   * serve the same app at multiple URLs.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n   */\n\n  function createBrowserHistory(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$window = _options.window,\n        window = _options$window === void 0 ? document.defaultView : _options$window;\n    var globalHistory = window.history;\n\n    function getIndexAndLocation() {\n      var _window$location = window.location,\n          pathname = _window$location.pathname,\n          search = _window$location.search,\n          hash = _window$location.hash;\n      var state = globalHistory.state || {};\n      return [state.idx, readOnly({\n        pathname: pathname,\n        search: search,\n        hash: hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })];\n    }\n\n    var blockedPopTx = null;\n\n    function handlePop() {\n      if (blockedPopTx) {\n        blockers.call(blockedPopTx);\n        blockedPopTx = null;\n      } else {\n        var nextAction = exports.Action.Pop;\n\n        var _getIndexAndLocation = getIndexAndLocation(),\n            nextIndex = _getIndexAndLocation[0],\n            nextLocation = _getIndexAndLocation[1];\n\n        if (blockers.length) {\n          if (nextIndex != null) {\n            var delta = index - nextIndex;\n\n            if (delta) {\n              // Revert the POP\n              blockedPopTx = {\n                action: nextAction,\n                location: nextLocation,\n                retry: function retry() {\n                  go(delta * -1);\n                }\n              };\n              go(delta);\n            }\n          } else {\n            // Trying to POP to a location with no index. We did not create\n            // this location, so we can't effectively block the navigation.\n            warning(false, // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better what\n            // is going on and how to avoid it.\n            \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") ;\n          }\n        } else {\n          applyTx(nextAction);\n        }\n      }\n    }\n\n    window.addEventListener(PopStateEventType, handlePop);\n    var action = exports.Action.Pop;\n\n    var _getIndexAndLocation2 = getIndexAndLocation(),\n        index = _getIndexAndLocation2[0],\n        location = _getIndexAndLocation2[1];\n\n    var listeners = createEvents();\n    var blockers = createEvents();\n\n    if (index == null) {\n      index = 0;\n      globalHistory.replaceState(_extends({}, globalHistory.state, {\n        idx: index\n      }), '');\n    }\n\n    function createHref(to) {\n      return typeof to === 'string' ? to : createPath(to);\n    } // state defaults to `null` because `window.history.state` does\n\n\n    function getNextLocation(to, state) {\n      if (state === void 0) {\n        state = null;\n      }\n\n      return readOnly(_extends({\n        pathname: location.pathname,\n        hash: '',\n        search: ''\n      }, typeof to === 'string' ? parsePath(to) : to, {\n        state: state,\n        key: createKey()\n      }));\n    }\n\n    function getHistoryStateAndUrl(nextLocation, index) {\n      return [{\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      }, createHref(nextLocation)];\n    }\n\n    function allowTx(action, location, retry) {\n      return !blockers.length || (blockers.call({\n        action: action,\n        location: location,\n        retry: retry\n      }), false);\n    }\n\n    function applyTx(nextAction) {\n      action = nextAction;\n\n      var _getIndexAndLocation3 = getIndexAndLocation();\n\n      index = _getIndexAndLocation3[0];\n      location = _getIndexAndLocation3[1];\n      listeners.call({\n        action: action,\n        location: location\n      });\n    }\n\n    function push(to, state) {\n      var nextAction = exports.Action.Push;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        push(to, state);\n      }\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n            historyState = _getHistoryStateAndUr[0],\n            url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n        // try...catch because iOS limits us to 100 pushState calls :/\n\n\n        try {\n          globalHistory.pushState(historyState, '', url);\n        } catch (error) {\n          // They are going to lose state here, but there is no real\n          // way to warn them about it since the page will refresh...\n          window.location.assign(url);\n        }\n\n        applyTx(nextAction);\n      }\n    }\n\n    function replace(to, state) {\n      var nextAction = exports.Action.Replace;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        replace(to, state);\n      }\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n            historyState = _getHistoryStateAndUr2[0],\n            url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n        globalHistory.replaceState(historyState, '', url);\n        applyTx(nextAction);\n      }\n    }\n\n    function go(delta) {\n      globalHistory.go(delta);\n    }\n\n    var history = {\n      get action() {\n        return action;\n      },\n\n      get location() {\n        return location;\n      },\n\n      createHref: createHref,\n      push: push,\n      replace: replace,\n      go: go,\n      back: function back() {\n        go(-1);\n      },\n      forward: function forward() {\n        go(1);\n      },\n      listen: function listen(listener) {\n        return listeners.push(listener);\n      },\n      block: function block(blocker) {\n        var unblock = blockers.push(blocker);\n\n        if (blockers.length === 1) {\n          window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n\n        return function () {\n          unblock(); // Remove the beforeunload listener so the document may\n          // still be salvageable in the pagehide event.\n          // See https://html.spec.whatwg.org/#unloading-documents\n\n          if (!blockers.length) {\n            window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n          }\n        };\n      }\n    };\n    return history;\n  }\n  /**\r\n   * Hash history stores the location in window.location.hash. This makes it ideal\r\n   * for situations where you don't want to send the location to the server for\r\n   * some reason, either because you do cannot configure it or the URL space is\r\n   * reserved for something else.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n   */\n\n  function createHashHistory(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options2 = options,\n        _options2$window = _options2.window,\n        window = _options2$window === void 0 ? document.defaultView : _options2$window;\n    var globalHistory = window.history;\n\n    function getIndexAndLocation() {\n      var _parsePath = parsePath(window.location.hash.substr(1)),\n          _parsePath$pathname = _parsePath.pathname,\n          pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n          _parsePath$search = _parsePath.search,\n          search = _parsePath$search === void 0 ? '' : _parsePath$search,\n          _parsePath$hash = _parsePath.hash,\n          hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n      var state = globalHistory.state || {};\n      return [state.idx, readOnly({\n        pathname: pathname,\n        search: search,\n        hash: hash,\n        state: state.usr || null,\n        key: state.key || 'default'\n      })];\n    }\n\n    var blockedPopTx = null;\n\n    function handlePop() {\n      if (blockedPopTx) {\n        blockers.call(blockedPopTx);\n        blockedPopTx = null;\n      } else {\n        var nextAction = exports.Action.Pop;\n\n        var _getIndexAndLocation4 = getIndexAndLocation(),\n            nextIndex = _getIndexAndLocation4[0],\n            nextLocation = _getIndexAndLocation4[1];\n\n        if (blockers.length) {\n          if (nextIndex != null) {\n            var delta = index - nextIndex;\n\n            if (delta) {\n              // Revert the POP\n              blockedPopTx = {\n                action: nextAction,\n                location: nextLocation,\n                retry: function retry() {\n                  go(delta * -1);\n                }\n              };\n              go(delta);\n            }\n          } else {\n            // Trying to POP to a location with no index. We did not create\n            // this location, so we can't effectively block the navigation.\n            warning(false, // TODO: Write up a doc that explains our blocking strategy in\n            // detail and link to it here so people can understand better\n            // what is going on and how to avoid it.\n            \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") ;\n          }\n        } else {\n          applyTx(nextAction);\n        }\n      }\n    }\n\n    window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n    // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n    window.addEventListener(HashChangeEventType, function () {\n      var _getIndexAndLocation5 = getIndexAndLocation(),\n          nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n      if (createPath(nextLocation) !== createPath(location)) {\n        handlePop();\n      }\n    });\n    var action = exports.Action.Pop;\n\n    var _getIndexAndLocation6 = getIndexAndLocation(),\n        index = _getIndexAndLocation6[0],\n        location = _getIndexAndLocation6[1];\n\n    var listeners = createEvents();\n    var blockers = createEvents();\n\n    if (index == null) {\n      index = 0;\n      globalHistory.replaceState(_extends({}, globalHistory.state, {\n        idx: index\n      }), '');\n    }\n\n    function getBaseHref() {\n      var base = document.querySelector('base');\n      var href = '';\n\n      if (base && base.getAttribute('href')) {\n        var url = window.location.href;\n        var hashIndex = url.indexOf('#');\n        href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n      }\n\n      return href;\n    }\n\n    function createHref(to) {\n      return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n    }\n\n    function getNextLocation(to, state) {\n      if (state === void 0) {\n        state = null;\n      }\n\n      return readOnly(_extends({\n        pathname: location.pathname,\n        hash: '',\n        search: ''\n      }, typeof to === 'string' ? parsePath(to) : to, {\n        state: state,\n        key: createKey()\n      }));\n    }\n\n    function getHistoryStateAndUrl(nextLocation, index) {\n      return [{\n        usr: nextLocation.state,\n        key: nextLocation.key,\n        idx: index\n      }, createHref(nextLocation)];\n    }\n\n    function allowTx(action, location, retry) {\n      return !blockers.length || (blockers.call({\n        action: action,\n        location: location,\n        retry: retry\n      }), false);\n    }\n\n    function applyTx(nextAction) {\n      action = nextAction;\n\n      var _getIndexAndLocation7 = getIndexAndLocation();\n\n      index = _getIndexAndLocation7[0];\n      location = _getIndexAndLocation7[1];\n      listeners.call({\n        action: action,\n        location: location\n      });\n    }\n\n    function push(to, state) {\n      var nextAction = exports.Action.Push;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        push(to, state);\n      }\n\n      warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") ;\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n            historyState = _getHistoryStateAndUr3[0],\n            url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n        // try...catch because iOS limits us to 100 pushState calls :/\n\n\n        try {\n          globalHistory.pushState(historyState, '', url);\n        } catch (error) {\n          // They are going to lose state here, but there is no real\n          // way to warn them about it since the page will refresh...\n          window.location.assign(url);\n        }\n\n        applyTx(nextAction);\n      }\n    }\n\n    function replace(to, state) {\n      var nextAction = exports.Action.Replace;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        replace(to, state);\n      }\n\n      warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") ;\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n            historyState = _getHistoryStateAndUr4[0],\n            url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n        globalHistory.replaceState(historyState, '', url);\n        applyTx(nextAction);\n      }\n    }\n\n    function go(delta) {\n      globalHistory.go(delta);\n    }\n\n    var history = {\n      get action() {\n        return action;\n      },\n\n      get location() {\n        return location;\n      },\n\n      createHref: createHref,\n      push: push,\n      replace: replace,\n      go: go,\n      back: function back() {\n        go(-1);\n      },\n      forward: function forward() {\n        go(1);\n      },\n      listen: function listen(listener) {\n        return listeners.push(listener);\n      },\n      block: function block(blocker) {\n        var unblock = blockers.push(blocker);\n\n        if (blockers.length === 1) {\n          window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n\n        return function () {\n          unblock(); // Remove the beforeunload listener so the document may\n          // still be salvageable in the pagehide event.\n          // See https://html.spec.whatwg.org/#unloading-documents\n\n          if (!blockers.length) {\n            window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n          }\n        };\n      }\n    };\n    return history;\n  }\n  /**\r\n   * Memory history stores the current location in memory. It is designed for use\r\n   * in stateful non-browser environments like tests and React Native.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n   */\n\n  function createMemoryHistory(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options3 = options,\n        _options3$initialEntr = _options3.initialEntries,\n        initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n        initialIndex = _options3.initialIndex;\n    var entries = initialEntries.map(function (entry) {\n      var location = readOnly(_extends({\n        pathname: '/',\n        search: '',\n        hash: '',\n        state: null,\n        key: createKey()\n      }, typeof entry === 'string' ? parsePath(entry) : entry));\n      warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") ;\n      return location;\n    });\n    var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n    var action = exports.Action.Pop;\n    var location = entries[index];\n    var listeners = createEvents();\n    var blockers = createEvents();\n\n    function createHref(to) {\n      return typeof to === 'string' ? to : createPath(to);\n    }\n\n    function getNextLocation(to, state) {\n      if (state === void 0) {\n        state = null;\n      }\n\n      return readOnly(_extends({\n        pathname: location.pathname,\n        search: '',\n        hash: ''\n      }, typeof to === 'string' ? parsePath(to) : to, {\n        state: state,\n        key: createKey()\n      }));\n    }\n\n    function allowTx(action, location, retry) {\n      return !blockers.length || (blockers.call({\n        action: action,\n        location: location,\n        retry: retry\n      }), false);\n    }\n\n    function applyTx(nextAction, nextLocation) {\n      action = nextAction;\n      location = nextLocation;\n      listeners.call({\n        action: action,\n        location: location\n      });\n    }\n\n    function push(to, state) {\n      var nextAction = exports.Action.Push;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        push(to, state);\n      }\n\n      warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") ;\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        index += 1;\n        entries.splice(index, entries.length, nextLocation);\n        applyTx(nextAction, nextLocation);\n      }\n    }\n\n    function replace(to, state) {\n      var nextAction = exports.Action.Replace;\n      var nextLocation = getNextLocation(to, state);\n\n      function retry() {\n        replace(to, state);\n      }\n\n      warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") ;\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        entries[index] = nextLocation;\n        applyTx(nextAction, nextLocation);\n      }\n    }\n\n    function go(delta) {\n      var nextIndex = clamp(index + delta, 0, entries.length - 1);\n      var nextAction = exports.Action.Pop;\n      var nextLocation = entries[nextIndex];\n\n      function retry() {\n        go(delta);\n      }\n\n      if (allowTx(nextAction, nextLocation, retry)) {\n        index = nextIndex;\n        applyTx(nextAction, nextLocation);\n      }\n    }\n\n    var history = {\n      get index() {\n        return index;\n      },\n\n      get action() {\n        return action;\n      },\n\n      get location() {\n        return location;\n      },\n\n      createHref: createHref,\n      push: push,\n      replace: replace,\n      go: go,\n      back: function back() {\n        go(-1);\n      },\n      forward: function forward() {\n        go(1);\n      },\n      listen: function listen(listener) {\n        return listeners.push(listener);\n      },\n      block: function block(blocker) {\n        return blockers.push(blocker);\n      }\n    };\n    return history;\n  } ////////////////////////////////////////////////////////////////////////////////\n  // UTILS\n  ////////////////////////////////////////////////////////////////////////////////\n\n  function clamp(n, lowerBound, upperBound) {\n    return Math.min(Math.max(n, lowerBound), upperBound);\n  }\n\n  function promptBeforeUnload(event) {\n    // Cancel the event.\n    event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n    event.returnValue = '';\n  }\n\n  function createEvents() {\n    var handlers = [];\n    return {\n      get length() {\n        return handlers.length;\n      },\n\n      push: function push(fn) {\n        handlers.push(fn);\n        return function () {\n          handlers = handlers.filter(function (handler) {\n            return handler !== fn;\n          });\n        };\n      },\n      call: function call(arg) {\n        handlers.forEach(function (fn) {\n          return fn && fn(arg);\n        });\n      }\n    };\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, 8);\n  }\n  /**\r\n   * Creates a string URL path from the given pathname, search, and hash components.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n   */\n\n\n  function createPath(_ref) {\n    var _ref$pathname = _ref.pathname,\n        pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n        _ref$search = _ref.search,\n        search = _ref$search === void 0 ? '' : _ref$search,\n        _ref$hash = _ref.hash,\n        hash = _ref$hash === void 0 ? '' : _ref$hash;\n    if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n    if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n    return pathname;\n  }\n  /**\r\n   * Parses a string URL path into its separate pathname, search, and hash components.\r\n   *\r\n   * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n   */\n\n  function parsePath(path) {\n    var parsedPath = {};\n\n    if (path) {\n      var hashIndex = path.indexOf('#');\n\n      if (hashIndex >= 0) {\n        parsedPath.hash = path.substr(hashIndex);\n        path = path.substr(0, hashIndex);\n      }\n\n      var searchIndex = path.indexOf('?');\n\n      if (searchIndex >= 0) {\n        parsedPath.search = path.substr(searchIndex);\n        path = path.substr(0, searchIndex);\n      }\n\n      if (path) {\n        parsedPath.pathname = path;\n      }\n    }\n\n    return parsedPath;\n  }\n\n  exports.createBrowserHistory = createBrowserHistory;\n  exports.createHashHistory = createHashHistory;\n  exports.createMemoryHistory = createMemoryHistory;\n  exports.createPath = createPath;\n  exports.parsePath = parsePath;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=history.development.js.map\n", "'use strict';\n\n/* eslint-env node */\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./umd/history.production.min.js');\n} else {\n  module.exports = require('./umd/history.development.js');\n}\n", "import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n", "import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n", "import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n", "import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\n/* eslint-env node */\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./umd/react-router.production.min.js\");\n} else {\n  module.exports = require(\"./umd/react-router.development.js\");\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n", "/**\n * React Router DOM v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\n/* eslint-env node */\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./umd/react-router-dom.production.min.js\");\n} else {\n  module.exports = require(\"./umd/react-router-dom.development.js\");\n}\n"],
  "mappings": "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",
  "names": []
}
