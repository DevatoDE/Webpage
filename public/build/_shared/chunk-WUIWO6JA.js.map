{
  "version": 3,
  "sources": ["../../../app/providers/ModalProvider.tsx", "../../../app/components/ThemeButton/ThemeButton.tsx"],
  "sourcesContent": ["import * as React from \"react\";\n\nexport type ModalContextValue = {\n  modalIsOpen: boolean;\n  updateModalStatus: (newValue: boolean) => void;\n};\n\nconst ModalContext = React.createContext<ModalContextValue | undefined>(\n  undefined\n);\n\nexport const useModalContext = (): ModalContextValue => {\n  const contextValue = React.useContext(ModalContext);\n\n  if (!contextValue) {\n    throw new Error(\n      \"You are trying to use useModalContext without rendering a ModalContext.Provider somewhere above this component in the component tree. Render a ModalContext.Provider somewhere above this component in the component tree to resolve this issue.\"\n    );\n  }\n\n  return contextValue;\n};\n\nexport const ModalContextProvider: React.FC = (props) => {\n  const [modalIsOpen, setModalIsOpen] = React.useState<boolean>(false);\n\n  const updateModalStatus = (newValue: boolean) => {\n    setModalIsOpen(newValue);\n  };\n\n  React.useEffect(() => {\n    if (modalIsOpen) {\n      document.body.classList.add(\"fixed\");\n      document.body.classList.add(\"overflow-y-hidden\");\n      document.body.style.height = \"100vh\";\n    } else {\n      document.body.classList.remove(\"fixed\");\n      document.body.classList.remove(\"overflow-y-hidden\");\n      document.body.style.removeProperty(\"height\");\n    }\n  }, [modalIsOpen]);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalIsOpen,\n        updateModalStatus\n      }}\n    >\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n", "import * as React from \"react\";\nimport { useModalContext } from \"~/providers/ModalProvider\";\nimport { useTheme } from \"~/providers/ThemeProvider\";\nimport { SupportedTheme } from \"~/types\";\nimport { BsMoon, BsSun } from \"react-icons/bs\";\n\ninterface Props {\n  hasStripeHeader: boolean;\n}\n\nconst getShadowClassName = (\n  theme: SupportedTheme,\n  hasStripeHeader: boolean\n) => {\n  if (theme === SupportedTheme.LIGHT) {\n    return hasStripeHeader ? \"shadow-light-stripe\" : \"shadow-light\";\n  } else {\n    return hasStripeHeader ? \"shadow-dark-stripe\" : \"shadow-dark\";\n  }\n};\n\nconst getClassName = (theme: SupportedTheme) => {\n  return theme === SupportedTheme.LIGHT\n    ? \"border-2 border-gray-400 hover:border-black\"\n    : \"border-2 border-gray-400 hover:border-white\";\n};\nconst mobileSun = \"/svg/mobileSun.svg\";\n\nconst ThemeButton: React.FC<Props> = (props) => {\n  const { theme, updateTheme } = useTheme();\n  const { modalIsOpen } = useModalContext();\n  const sun = \"/svg/sun.svg\";\n  const shadow = getShadowClassName(theme, props.hasStripeHeader);\n  const className = getClassName(theme);\n\n  const handleToggleTheme = (oldTheme: SupportedTheme) => {\n    updateTheme(\n      oldTheme === SupportedTheme.DARK\n        ? SupportedTheme.LIGHT\n        : SupportedTheme.DARK\n    );\n  };\n  const nextTheme =\n    theme === SupportedTheme.DARK ? SupportedTheme.LIGHT : SupportedTheme.DARK;\n  const generateFormData = () => {\n    const form = new FormData();\n    form.append(\"theme\", nextTheme);\n    return form;\n  };\n\n  function toggleTheme(theme: SupportedTheme) {\n    requestAnimationFrame(() => {\n      handleToggleTheme(theme);\n\n      fetch(\"/setTheme?index\", {\n        method: \"POST\",\n        body: generateFormData(),\n        credentials: \"same-origin\"\n      });\n    });\n  }\n  return (\n    <>\n      {!modalIsOpen ? (\n        <div className=\"ThemeButton_Wrapper\">\n          <button\n            name=\"Switch to dark theme\"\n            className={`theme-container ${shadow}`}\n            onClick={() => toggleTheme(theme)}\n          >\n            {theme === SupportedTheme.LIGHT ? (\n              <img\n                className=\"theme-icon select-none\"\n                src={sun}\n                alt=\"Sun icon\"\n                title=\"Sun\"\n              />\n            ) : (\n              <MoonIcon onBlogRoute={!props.hasStripeHeader} />\n            )}\n          </button>\n        </div>\n      ) : (\n        <div className=\"ThemeButton_Wrapper\">\n          <button\n            name=\"Switch to light mode\"\n            className={`rounded-full px-5 py-3 inline-flex items-center justify-center ${className}`}\n            onClick={() => toggleTheme(theme)}\n          >\n            {theme === SupportedTheme.LIGHT ? (\n              <div className=\"inline-flex items-center justify-center text-base\">\n                <img\n                  className=\"theme-icon select-none mr-4 w-5\"\n                  src={mobileSun}\n                  alt=\"Sun icon\"\n                  title=\"Sun\"\n                />\n                <p className=\"text-black\">Switch to dark mode</p>\n              </div>\n            ) : (\n              <div className=\"inline-flex items-center justify-center text-base\">\n                <img\n                  src=\"/svg/moon-blog.svg\"\n                  alt=\"Moon icon\"\n                  title=\"Moon\"\n                  className=\"theme-icon flex items-center m-auto justify-center w-5 select-none\"\n                />\n                <p className=\"ml-4 text-gray-200 hover:text-white\">\n                  Switch to light mode\n                </p>\n              </div>\n            )}\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\ninterface MoonIconProps {\n  onBlogRoute: boolean;\n}\nconst MoonIcon: React.FC<MoonIconProps> = (props) => (\n  <img\n    src={props.onBlogRoute ? \"/svg/moon-blog.svg\" : \"/svg/moon.svg\"}\n    alt=\"Moon icon\"\n    title=\"Moon\"\n    className=\"theme-icon flex items-center m-auto justify-center w-8 select-none\"\n  />\n);\nexport default ThemeButton;\n\nexport const SimplifiedThemeButton: React.FC = () => {\n  const { theme, updateTheme } = useTheme();\n  const handleToggleTheme = (oldTheme: SupportedTheme) => {\n    updateTheme(\n      oldTheme === SupportedTheme.DARK\n        ? SupportedTheme.LIGHT\n        : SupportedTheme.DARK\n    );\n  };\n  const nextTheme =\n    theme === SupportedTheme.DARK ? SupportedTheme.LIGHT : SupportedTheme.DARK;\n  const generateFormData = () => {\n    const form = new FormData();\n    form.append(\"theme\", nextTheme);\n    return form;\n  };\n  function toggleTheme(theme: SupportedTheme) {\n    requestAnimationFrame(() => {\n      handleToggleTheme(theme);\n\n      fetch(\"/setTheme?index\", {\n        method: \"POST\",\n        body: generateFormData(),\n        credentials: \"same-origin\"\n      });\n    });\n  }\n  return (\n    <div className=\"SimplifiedThemeButton_Wrapper\">\n      <button\n        name=\"light theme\"\n        className={`rounded-full px-5 py-3 inline-flex items-center justify-center `}\n        onClick={() => toggleTheme(theme)}\n      >\n        {theme === SupportedTheme.LIGHT ? (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-7 w-7 text-gray-600 hover:text-black ease-in duration-100\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n            />\n          </svg>\n        ) : (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-7 w-7 text-gray-400 hover:text-white ease-in duration-100\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"1.5\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n            />\n          </svg>\n        )}\n      </button>\n    </div>\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
